{
    "recent": {
        "merged_items": {
            "actual_count": 0, 
            "items": {}, 
            "language_in": {
                "all": {}
            }
        }, 
        "search_keywords": {}, 
        "searched_at": "2017-04-25 23:23:58.930129"
    }, 
    "result": {
        "Microsoft/vscode": {
            "dockerfile": {
                "/extensions/docker/test/colorize-fixtures/Dockerfile": {
                    "ADD": [
                        "app.js /var/www/app.js"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/bin/node\", \"/var/www/app.js\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Kimbro Staken"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get install -y software-properties-common python", 
                        "add-apt-repository ppa:chris-lea/node.js", 
                        "echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list", 
                        "apt-get update", 
                        "apt-get install -y nodejs", 
                        "apt-get install -y nodejs=0.6.12~dfsg1-1ubuntu1", 
                        "mkdir /var/www"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/Microsoft/vscode/git/blobs/3a10b463101064d3234241126e878c4acb253d4c", 
                    "html": "https://github.com/Microsoft/vscode/blob/master/README.md", 
                    "self": "https://api.github.com/repos/Microsoft/vscode/contents/README.md?ref=master"
                }, 
                "content": "IyBWaXN1YWwgU3R1ZGlvIENvZGUgLSBPcGVuIFNvdXJjZQoKWyFbQnVpbGQg\nU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvTWljcm9zb2Z0L3ZzY29k\nZS5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9N\naWNyb3NvZnQvdnNjb2RlKQpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vY2ku\nYXBwdmV5b3IuY29tL2FwaS9wcm9qZWN0cy9zdGF0dXMvdnVobGhnODB0ajNl\nMmEwbC9icmFuY2gvbWFzdGVyP3N2Zz10cnVlKV0oaHR0cHM6Ly9jaS5hcHB2\nZXlvci5jb20vcHJvamVjdC9WU0NvZGUvdnNjb2RlKQpbIVtDb3ZlcmFnZSBT\ndGF0dXNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vY292ZXJhbGxzL01pY3Jv\nc29mdC92c2NvZGUvbWFzdGVyLnN2ZyldKGh0dHBzOi8vY292ZXJhbGxzLmlv\nL2dpdGh1Yi9NaWNyb3NvZnQvdnNjb2RlP2JyYW5jaD1tYXN0ZXIpClshW0dp\ndHRlcl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9jaGF0LW9uJTIw\nZ2l0dGVyLWJsdWUuc3ZnKV0oaHR0cHM6Ly9naXR0ZXIuaW0vTWljcm9zb2Z0\nL3ZzY29kZSkKCltWUyBDb2RlXShodHRwczovL2NvZGUudmlzdWFsc3R1ZGlv\nLmNvbSkgaXMgYSBuZXcgdHlwZSBvZiB0b29sIHRoYXQgY29tYmluZXMgdGhl\nIHNpbXBsaWNpdHkgb2YKYSBjb2RlIGVkaXRvciB3aXRoIHdoYXQgZGV2ZWxv\ncGVycyBuZWVkIGZvciB0aGVpciBjb3JlIGVkaXQtYnVpbGQtZGVidWcgY3lj\nbGUuIENvZGUKcHJvdmlkZXMgY29tcHJlaGVuc2l2ZSBlZGl0aW5nIGFuZCBk\nZWJ1Z2dpbmcgc3VwcG9ydCwgYW4gZXh0ZW5zaWJpbGl0eSBtb2RlbCwgYW5k\nIGxpZ2h0d2VpZ2h0IGludGVncmF0aW9uIHdpdGggZXhpc3RpbmcgdG9vbHMu\nCgpWUyBDb2RlIGlzIHVwZGF0ZWQgbW9udGhseSB3aXRoIG5ldyBmZWF0dXJl\ncyBhbmQgYnVnIGZpeGVzLiBZb3UgY2FuIGRvd25sb2FkIGl0IGZvciBXaW5k\nb3dzLCBNYWMgYW5kIExpbnV4IG9uIFtWUyBDb2RlJ3Mgd2Vic2l0ZV0oaHR0\ncHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vRG93bmxvYWQpLiBUbyBnZXQg\ndGhlIGxhdGVzdCByZWxlYXNlcyBldmVyeWRheSwgeW91IGNhbiBpbnN0YWxs\nIHRoZSBbSW5zaWRlcnMgdmVyc2lvbiBvZiBWUyBDb2RlXShodHRwczovL2Nv\nZGUudmlzdWFsc3R1ZGlvLmNvbS9pbnNpZGVycykuIFRoaXMgYnVpbGRzIGZy\nb20gdGhlIG1hc3RlciBicmFuY2ggYW5kIGlzIHVwZGF0ZWQgYXQgbGVhc3Qg\nZGFpbHkuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIGFsdD0iVlMgQ29k\nZSBpbiBhY3Rpb24iIHNyYz0iaHR0cHM6Ly9jbG91ZC5naXRodWJ1c2VyY29u\ndGVudC5jb20vYXNzZXRzLzExODM5NzM2LzE2NjQyMjAwLzY2MjRkZGUwLTQz\nYmQtMTFlNi04NTk1LWM4MTg4NWJhMGRjMi5wbmciPgo8L3A+CgpUaGUgW2B2\nc2NvZGVgXShodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L3ZzY29kZSkg\ncmVwb3NpdG9yeSBpcyB3aGVyZSB3ZSBkbyBkZXZlbG9wbWVudCBhbmQgdGhl\ncmUgYXJlIG1hbnkgd2F5cyB5b3UgY2FuIHBhcnRpY2lwYXRlIGluIHRoZSBw\ncm9qZWN0LCBmb3IgZXhhbXBsZToKCiogW1N1Ym1pdCBidWdzIGFuZCBmZWF0\ndXJlIHJlcXVlc3RzXShodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L3Zz\nY29kZS9pc3N1ZXMpIGFuZCBoZWxwIHVzIHZlcmlmeSBhcyB0aGV5IGFyZSBj\naGVja2VkIGluCiogUmV2aWV3IFtzb3VyY2UgY29kZSBjaGFuZ2VzXShodHRw\nczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L3ZzY29kZS9wdWxscykKKiBSZXZp\nZXcgdGhlIFtkb2N1bWVudGF0aW9uXShodHRwczovL2dpdGh1Yi5jb20vbWlj\ncm9zb2Z0L3ZzY29kZS1kb2NzKSBhbmQgbWFrZSBwdWxsIHJlcXVlc3RzIGZv\nciBhbnl0aGluZyBmcm9tIHR5cG9zIHRvIG5ldyBjb250ZW50CgojIyBDb250\ncmlidXRpbmcKCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBmaXhpbmcgaXNz\ndWVzIGFuZCBjb250cmlidXRpbmcgZGlyZWN0bHkgdG8gdGhlIGNvZGUgYmFz\nZSwKcGxlYXNlIHNlZSB0aGUgZG9jdW1lbnQgW0hvdyB0byBDb250cmlidXRl\nXShodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L3ZzY29kZS93aWtpL0hv\ndy10by1Db250cmlidXRlKSwgd2hpY2ggY292ZXJzIHRoZSBmb2xsb3dpbmc6\nCgoqIFtIb3cgdG8gYnVpbGQgYW5kIHJ1biBmcm9tIHNvdXJjZV0oaHR0cHM6\nLy9naXRodWIuY29tL01pY3Jvc29mdC92c2NvZGUvd2lraS9Ib3ctdG8tQ29u\ndHJpYnV0ZSNidWlsZC1hbmQtcnVuLWZyb20tc291cmNlKQoqIFtUaGUgZGV2\nZWxvcG1lbnQgd29ya2Zsb3csIGluY2x1ZGluZyBkZWJ1Z2dpbmcgYW5kIHJ1\nbm5pbmcgdGVzdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvdnNj\nb2RlL3dpa2kvSG93LXRvLUNvbnRyaWJ1dGUjZGV2ZWxvcG1lbnQtd29ya2Zs\nb3cpCiogW0NvZGluZyBHdWlkZWxpbmVzXShodHRwczovL2dpdGh1Yi5jb20v\nTWljcm9zb2Z0L3ZzY29kZS93aWtpL0NvZGluZy1HdWlkZWxpbmVzKQoqIFtT\ndWJtaXR0aW5nIHB1bGwgcmVxdWVzdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9N\naWNyb3NvZnQvdnNjb2RlL3dpa2kvSG93LXRvLUNvbnRyaWJ1dGUjcHVsbC1y\nZXF1ZXN0cykKClRoaXMgcHJvamVjdCBoYXMgYWRvcHRlZCB0aGUgW01pY3Jv\nc29mdCBPcGVuIFNvdXJjZSBDb2RlIG9mIENvbmR1Y3RdKGh0dHBzOi8vb3Bl\nbnNvdXJjZS5taWNyb3NvZnQuY29tL2NvZGVvZmNvbmR1Y3QvKS4gRm9yIG1v\ncmUgaW5mb3JtYXRpb24gc2VlIHRoZSBbQ29kZSBvZiBDb25kdWN0IEZBUV0o\naHR0cHM6Ly9vcGVuc291cmNlLm1pY3Jvc29mdC5jb20vY29kZW9mY29uZHVj\ndC9mYXEvKSBvciBjb250YWN0IFtvcGVuY29kZUBtaWNyb3NvZnQuY29tXSht\nYWlsdG86b3BlbmNvZGVAbWljcm9zb2Z0LmNvbSkgd2l0aCBhbnkgYWRkaXRp\nb25hbCBxdWVzdGlvbnMgb3IgY29tbWVudHMuCgojIyBGZWVkYmFjawoKKiBB\nc2sgYSBxdWVzdGlvbiBvbiBbU3RhY2sgT3ZlcmZsb3ddKGh0dHBzOi8vc3Rh\nY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zL3RhZ2dlZC92c2NvZGUpLgoqIFJl\ncXVlc3QgYSBuZXcgZmVhdHVyZSBvbiBbR2l0SHViXShDT05UUklCVVRJTkcu\nbWQpLgoqIFZvdGUgZm9yIFtwb3B1bGFyIGZlYXR1cmUgcmVxdWVzdHNdKGh0\ndHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvdnNjb2RlL2lzc3Vlcz9xPWlz\nJTNBb3BlbitpcyUzQWlzc3VlK2xhYmVsJTNBZmVhdHVyZS1yZXF1ZXN0K3Nv\ncnQlM0FyZWFjdGlvbnMtJTJCMS1kZXNjKS4KKiBGaWxlIGEgYnVnIGluIFtH\naXRIdWIgSXNzdWVzXShodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L3Zz\nY29kZS9pc3N1ZXMpLgoqIFtUd2VldF0oaHR0cHM6Ly90d2l0dGVyLmNvbS9j\nb2RlKSB1cyB3aXRoIG90aGVyIGZlZWRiYWNrLgoKIyMgUmVsYXRlZCBQcm9q\nZWN0cwpNYW55IG9mIHRoZSBjb3JlIGNvbXBvbmVudHMgYW5kIGV4dGVuc2lv\nbnMgdG8gQ29kZSBsaXZlIGluIHRoZWlyIG93biByZXBvc2l0b3JpZXMgb24g\nR2l0SHViLiBGb3IgZXhhbXBsZSwgdGhlIFtub2RlIGRlYnVnIGFkYXB0ZXJd\nKGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvdnNjb2RlLW5vZGUtZGVi\ndWcpIGFuZCB0aGUgW21vbm8gZGVidWcgYWRhcHRlcl0oaHR0cHM6Ly9naXRo\ndWIuY29tL21pY3Jvc29mdC92c2NvZGUtbW9uby1kZWJ1ZykuCgpGb3IgYSBj\nb21wbGV0ZSBsaXN0LCBwbGVhc2Ugc2VlIHRoZSBbUmVsYXRlZCBQcm9qZWN0\nc10oaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC92c2NvZGUvd2lraS9S\nZWxhdGVkLVByb2plY3RzKSBwYWdlIG9uIG91ciB3aWtpLgoKIyMgTGljZW5z\nZQoKQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCBy\naWdodHMgcmVzZXJ2ZWQuCgpMaWNlbnNlZCB1bmRlciB0aGUgW01JVF0oTElD\nRU5TRS50eHQpIExpY2Vuc2UuCg==\n", 
                "download_url": "https://raw.githubusercontent.com/Microsoft/vscode/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/Microsoft/vscode/git/blobs/3a10b463101064d3234241126e878c4acb253d4c", 
                "html_url": "https://github.com/Microsoft/vscode/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "3a10b463101064d3234241126e878c4acb253d4c", 
                "size": 3889, 
                "type": "file", 
                "url": "https://api.github.com/repos/Microsoft/vscode/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2015-09-03T20:23:38Z", 
                "language": "TypeScript", 
                "owner": {
                    "avatar_url": "https://avatars1.githubusercontent.com/u/6154722?v=3", 
                    "events_url": "https://api.github.com/users/Microsoft/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/Microsoft/followers", 
                    "following_url": "https://api.github.com/users/Microsoft/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/Microsoft/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/Microsoft", 
                    "id": 6154722, 
                    "login": "Microsoft", 
                    "organizations_url": "https://api.github.com/users/Microsoft/orgs", 
                    "received_events_url": "https://api.github.com/users/Microsoft/received_events", 
                    "repos_url": "https://api.github.com/users/Microsoft/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/Microsoft/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/Microsoft/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/Microsoft"
                }, 
                "pushed_at": "2017-04-26T03:24:59Z", 
                "stargazers_count": 26704, 
                "updated_at": "2017-04-26T03:20:17Z", 
                "watchers_count": 26704
            }
        }, 
        "angular/angular": {
            "dockerfile": {
                "/aio/aio-builds-setup/dockerbuild/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "AIO_BUILDS_DIR=/var/www/aio-builds", 
                        "TEST_AIO_BUILDS_DIR=/tmp/aio-builds", 
                        "AIO_DOMAIN_NAME=ngbuilds.io", 
                        "TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost", 
                        "AIO_GITHUB_ORGANIZATION=angular", 
                        "TEST_AIO_GITHUB_ORGANIZATION=angular", 
                        "AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors", 
                        "TEST_AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors", 
                        "AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME", 
                        "TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME", 
                        "AIO_NGINX_PORT_HTTP=80", 
                        "TEST_AIO_NGINX_PORT_HTTP=8080", 
                        "AIO_NGINX_PORT_HTTPS=443", 
                        "TEST_AIO_NGINX_PORT_HTTPS=4433", 
                        "AIO_REPO_SLUG=angular/angular", 
                        "TEST_AIO_REPO_SLUG=test-repo/test-slug", 
                        "AIO_UPLOAD_HOSTNAME=upload.localhost", 
                        "TEST_AIO_UPLOAD_HOSTNAME=upload.localhost", 
                        "AIO_UPLOAD_MAX_SIZE=20971520", 
                        "TEST_AIO_UPLOAD_MAX_SIZE=20971520", 
                        "AIO_UPLOAD_PORT=3000", 
                        "TEST_AIO_UPLOAD_PORT=3001"
                    ], 
                    "CMD": [
                        "/usr/local/bin/aio-health-check", 
                        "aio-init && tail -f /dev/null"
                    ], 
                    "COPY": [
                        "logrotate/* /etc/logrotate.d/", 
                        "cronjobs/aio-builds-cleanup /etc/cron.d/", 
                        "dnsmasq/dnsmasq.conf /etc/", 
                        "nginx/create-selfsigned-cert.sh /tmp/", 
                        "nginx/aio-builds.conf /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "nginx/aio-builds.conf /etc/nginx/sites-available/aio-builds-test.conf", 
                        "scripts-sh/ $AIO_SCRIPTS_SH_DIR/", 
                        "scripts-js/ $AIO_SCRIPTS_JS_DIR/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "AIO_BUILDS_DIR=$AIO_BUILDS_DIR                     TEST_AIO_BUILDS_DIR=$TEST_AIO_BUILDS_DIR                     AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME                   TEST_AIO_DOMAIN_NAME=$TEST_AIO_DOMAIN_NAME                   AIO_GITHUB_ORGANIZATION=$AIO_GITHUB_ORGANIZATION   TEST_AIO_GITHUB_ORGANIZATION=$TEST_AIO_GITHUB_ORGANIZATION   AIO_GITHUB_TEAM_SLUGS=$AIO_GITHUB_TEAM_SLUGS       TEST_AIO_GITHUB_TEAM_SLUGS=$TEST_AIO_GITHUB_TEAM_SLUGS       AIO_LOCALCERTS_DIR=/etc/ssl/localcerts             TEST_AIO_LOCALCERTS_DIR=/etc/ssl/localcerts-test             AIO_NGINX_HOSTNAME=$AIO_NGINX_HOSTNAME             TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_NGINX_HOSTNAME             AIO_NGINX_LOGS_DIR=/var/log/aio/nginx              TEST_AIO_NGINX_LOGS_DIR=/var/log/aio/nginx-test              AIO_NGINX_PORT_HTTP=$AIO_NGINX_PORT_HTTP           TEST_AIO_NGINX_PORT_HTTP=$TEST_AIO_NGINX_PORT_HTTP           AIO_NGINX_PORT_HTTPS=$AIO_NGINX_PORT_HTTPS         TEST_AIO_NGINX_PORT_HTTPS=$TEST_AIO_NGINX_PORT_HTTPS         AIO_REPO_SLUG=$AIO_REPO_SLUG                       TEST_AIO_REPO_SLUG=$TEST_AIO_REPO_SLUG                       AIO_SCRIPTS_JS_DIR=/usr/share/aio-scripts-js                                                                    AIO_SCRIPTS_SH_DIR=/usr/share/aio-scripts-sh                                                                    AIO_UPLOAD_HOSTNAME=$AIO_UPLOAD_HOSTNAME           TEST_AIO_UPLOAD_HOSTNAME=$TEST_AIO_UPLOAD_HOSTNAME           AIO_UPLOAD_MAX_SIZE=$AIO_UPLOAD_MAX_SIZE           TEST_AIO_UPLOAD_MAX_SIZE=$TEST_AIO_UPLOAD_MAX_SIZE           AIO_UPLOAD_PORT=$AIO_UPLOAD_PORT                   TEST_AIO_UPLOAD_PORT=$TEST_AIO_UPLOAD_PORT                   NODE_ENV=production"
                    ], 
                    "EXPOSE": [
                        "80 443"
                    ], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [
                        "--interval=5m CMD /usr/local/bin/aio-health-check"
                    ], 
                    "LABEL": [
                        "name=\"angular.io PR preview\" description=\"This image implements the PR preview functionality for angular.io.\" vendor=\"Angular\" version=\"1.0\""
                    ], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir /var/log/aio", 
                        "apt-get update -y && apt-get install -y curl", 
                        "curl --silent --show-error --location https://deb.nodesource.com/setup_6.x | bash -", 
                        "curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -", 
                        "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list", 
                        "apt-get update -y && apt-get install -y chkconfig cron dnsmasq nano nginx nodejs openssl rsyslog yarn", 
                        "yarn global add pm2@2", 
                        "chmod 0644 /etc/logrotate.d/*", 
                        "chmod 0744 /etc/cron.d/aio-builds-cleanup", 
                        "crontab /etc/cron.d/aio-builds-cleanup", 
                        "printenv | grep AIO_ >> /etc/environment", 
                        "sed -i \"s|{{\\$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf", 
                        "sed -i \"s|{{\\$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf", 
                        "sed -i \"s|{{\\$TEST_AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf", 
                        "chmod a+x /tmp/create-selfsigned-cert.sh", 
                        "/tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"", 
                        "/tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"", 
                        "rm /tmp/create-selfsigned-cert.sh", 
                        "update-ca-certificates", 
                        "rm /etc/nginx/sites-enabled/*", 
                        "sed -i \"s|{{\\$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_MAX_SIZE}}|$AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_PORT}}|$AIO_UPLOAD_PORT|g\" /etc/nginx/sites-available/aio-builds-prod.conf", 
                        "ln -s /etc/nginx/sites-available/aio-builds-prod.conf /etc/nginx/sites-enabled/aio-builds-prod.conf", 
                        "sed -i \"s|{{\\$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_MAX_SIZE}}|$TEST_AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "sed -i \"s|{{\\$AIO_UPLOAD_PORT}}|$TEST_AIO_UPLOAD_PORT|g\" /etc/nginx/sites-available/aio-builds-test.conf", 
                        "ln -s /etc/nginx/sites-available/aio-builds-test.conf /etc/nginx/sites-enabled/aio-builds-test.conf", 
                        "pm2 startup systemv -u root > /dev/null", 
                        "chkconfig pm2-root on", 
                        "chmod a+x $AIO_SCRIPTS_SH_DIR/*", 
                        "find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*}; done", 
                        "yarn install --production"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "$AIO_SCRIPTS_JS_DIR/", 
                        "/"
                    ]
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/angular/angular/git/blobs/86542919b2631cd0219330bcc1a212b269f617fe", 
                    "html": "https://github.com/angular/angular/blob/master/README.md", 
                    "self": "https://api.github.com/repos/angular/angular/contents/README.md?ref=master"
                }, 
                "content": "WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvYW5ndWxh\nci9hbmd1bGFyLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMt\nY2kub3JnL2FuZ3VsYXIvYW5ndWxhcikKWyFbQ2lyY2xlQ0ldKGh0dHBzOi8v\nY2lyY2xlY2kuY29tL2doL2FuZ3VsYXIvYW5ndWxhci90cmVlL21hc3Rlci5z\ndmc/c3R5bGU9c2hpZWxkKV0oaHR0cHM6Ly9jaXJjbGVjaS5jb20vZ2gvYW5n\ndWxhci9hbmd1bGFyL3RyZWUvbWFzdGVyKQpbIVtKb2luIHRoZSBjaGF0IGF0\nIGh0dHBzOi8vZ2l0dGVyLmltL2FuZ3VsYXIvYW5ndWxhcl0oaHR0cHM6Ly9i\nYWRnZXMuZ2l0dGVyLmltL0pvaW4lMjBDaGF0LnN2ZyldKGh0dHBzOi8vZ2l0\ndGVyLmltL2FuZ3VsYXIvYW5ndWxhcj91dG1fc291cmNlPWJhZGdlJnV0bV9t\nZWRpdW09YmFkZ2UmdXRtX2NhbXBhaWduPXByLWJhZGdlJnV0bV9jb250ZW50\nPWJhZGdlKQpbIVtJc3N1ZSBTdGF0c10oaHR0cDovL2lzc3Vlc3RhdHMuY29t\nL2dpdGh1Yi9hbmd1bGFyL2FuZ3VsYXIvYmFkZ2UvcHI/c3R5bGU9ZmxhdCld\nKGh0dHA6Ly9pc3N1ZXN0YXRzLmNvbS9naXRodWIvYW5ndWxhci9hbmd1bGFy\nKQpbIVtJc3N1ZSBTdGF0c10oaHR0cDovL2lzc3Vlc3RhdHMuY29tL2dpdGh1\nYi9hbmd1bGFyL2FuZ3VsYXIvYmFkZ2UvaXNzdWU/c3R5bGU9ZmxhdCldKGh0\ndHA6Ly9pc3N1ZXN0YXRzLmNvbS9naXRodWIvYW5ndWxhci9hbmd1bGFyKQpb\nIVtucG0gdmVyc2lvbl0oaHR0cHM6Ly9iYWRnZS5mdXJ5LmlvL2pzLyU0MGFu\nZ3VsYXIlMkZjb3JlLnN2ZyldKGh0dHBzOi8vYmFkZ2UuZnVyeS5pby9qcy8l\nNDBhbmd1bGFyJTJGY29yZSkKClshW1NhdWNlIFRlc3QgU3RhdHVzXShodHRw\nczovL3NhdWNlbGFicy5jb20vYnJvd3Nlci1tYXRyaXgvYW5ndWxhcjItY2ku\nc3ZnKV0oaHR0cHM6Ly9zYXVjZWxhYnMuY29tL3UvYW5ndWxhcjItY2kpCipT\nYWZhcmkgKDcrKSwgaU9TICg3KyksIEVkZ2UgKDE0KSBhbmQgSUUgbW9iaWxl\nICgxMSkgYXJlIHRlc3RlZCBvbiBbQnJvd3NlclN0YWNrXVticm93c2Vyc3Rh\nY2tdLioKCkFuZ3VsYXIKPT09PT09PT09CgpBbmd1bGFyIGlzIGEgZGV2ZWxv\ncG1lbnQgcGxhdGZvcm0gZm9yIGJ1aWxkaW5nIG1vYmlsZSBhbmQgZGVza3Rv\ncCB3ZWIgYXBwbGljYXRpb25zIHVzaW5nIFR5cGVzY3JpcHQvSmF2YVNjcmlw\ndCAoSlMpIGFuZCBvdGhlciBsYW5ndWFnZXMuCgoKIyMgUXVpY2tzdGFydAoK\nW0dldCBzdGFydGVkIGluIDUgbWludXRlc11bcXVpY2tzdGFydF0uCgoKIyMg\nV2FudCB0byBoZWxwPwoKV2FudCB0byBmaWxlIGEgYnVnLCBjb250cmlidXRl\nIHNvbWUgY29kZSwgb3IgaW1wcm92ZSBkb2N1bWVudGF0aW9uPyBFeGNlbGxl\nbnQhIFJlYWQgdXAgb24gb3VyCmd1aWRlbGluZXMgZm9yIFtjb250cmlidXRp\nbmddW2NvbnRyaWJ1dGluZ10gYW5kIHRoZW4gY2hlY2sgb3V0IG9uZSBvZiBv\ndXIgaXNzdWVzIGluIHRoZSBbaG90bGlzdDogY29tbXVuaXR5LWhlbHBdKGh0\ndHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvbGFiZWxzL2hvdGxp\nc3QlM0ElMjBjb21tdW5pdHktaGVscCkuCgpbYnJvd3NlcnN0YWNrXTogaHR0\ncHM6Ly93d3cuYnJvd3NlcnN0YWNrLmNvbS8KW2NvbnRyaWJ1dGluZ106IGh0\ndHA6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9ibG9iL21hc3Rlci9D\nT05UUklCVVRJTkcubWQKW3F1aWNrc3RhcnRdOiBodHRwczovL2FuZ3VsYXIu\naW8vZG9jcy90cy9sYXRlc3QvcXVpY2tzdGFydC5odG1sCltuZ106IGh0dHA6\nLy9hbmd1bGFyLmlvCg==\n", 
                "download_url": "https://raw.githubusercontent.com/angular/angular/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/angular/angular/git/blobs/86542919b2631cd0219330bcc1a212b269f617fe", 
                "html_url": "https://github.com/angular/angular/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "86542919b2631cd0219330bcc1a212b269f617fe", 
                "size": 1768, 
                "type": "file", 
                "url": "https://api.github.com/repos/angular/angular/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2014-09-18T16:12:01Z", 
                "language": "TypeScript", 
                "owner": {
                    "avatar_url": "https://avatars0.githubusercontent.com/u/139426?v=3", 
                    "events_url": "https://api.github.com/users/angular/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/angular/followers", 
                    "following_url": "https://api.github.com/users/angular/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/angular/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/angular", 
                    "id": 139426, 
                    "login": "angular", 
                    "organizations_url": "https://api.github.com/users/angular/orgs", 
                    "received_events_url": "https://api.github.com/users/angular/received_events", 
                    "repos_url": "https://api.github.com/users/angular/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/angular/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/angular/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/angular"
                }, 
                "pushed_at": "2017-04-26T00:48:01Z", 
                "stargazers_count": 23485, 
                "updated_at": "2017-04-26T03:22:38Z", 
                "watchers_count": 23485
            }
        }, 
        "ansible/ansible": {
            "dockerfile": {
                "/packaging/debian/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"make deb\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/bin/bash\", \"-c\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y asciidoc cdbs debootstrap devscripts make pbuilder python-setuptools"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/ansible"
                    ]
                }, 
                "/test/utils/docker/centos6/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "centos:centos6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum clean all && yum -y install epel-release && yum -y install acl asciidoc bzip2 file gcc git make mercurial mysql MySQL-python mysql-server openssh-clients openssh-server python-coverage python-devel python-httplib2 python-jinja2 python-keyczar python-mock python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv PyYAML rpm-build rubygems sed subversion sudo unzip which zip && yum clean all", 
                        "rpm -e --nodeps python-crypto && pip install --upgrade pycrypto", 
                        "/bin/sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers", 
                        "mkdir /etc/ansible/", 
                        "/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts", 
                        "ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/centos7/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "centos:centos7"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\", 
                        "yum clean all && yum -y install epel-release && yum -y install acl asciidoc bzip2 dbus-python file git iproute make mariadb-server mercurial MySQL-python openssh-clients openssh-server python-coverage python-httplib2 python-jinja2 python-keyczar python-mock python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv PyYAML rpm-build rubygems subversion sudo unzip which && yum -y swap fakesystemd systemd && yum clean all", 
                        "/usr/bin/sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers", 
                        "mkdir /etc/ansible/", 
                        "/usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts", 
                        "ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/fedora24/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora:24"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\", 
                        "dnf clean all && dnf -y update libsolv && dnf clean all", 
                        "dnf clean all && dnf -y --setopt=install_weak_deps=false install acl asciidoc bzip2 dbus-python file findutils git glibc-locale-source iproute make mariadb-server mercurial MySQL-python openssh-clients openssh-server procps python2-dnf python-coverage python-httplib2 python-jinja2 python-keyczar python-mock python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv PyYAML rpm-build rubygems subversion sudo tar unzip which yum zip && dnf clean all", 
                        "localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8", 
                        "/usr/bin/sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers", 
                        "mkdir /etc/ansible/", 
                        "/usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts", 
                        "ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/fedora25/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora:25"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\", 
                        "dnf clean all && dnf -y --setopt=install_weak_deps=false install acl asciidoc bzip2 dbus-python file findutils git glibc-locale-source iproute make mariadb-server mercurial MySQL-python openssh-clients openssh-server procps python2-dnf python-coverage python-httplib2 python-jinja2 python-keyczar python-mock python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv PyYAML rpm-build rubygems subversion sudo tar unzip which yum zip && dnf clean all", 
                        "localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8", 
                        "/usr/bin/sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers", 
                        "mkdir /etc/ansible/", 
                        "/usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts", 
                        "ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/httptester/Dockerfile": {
                    "ADD": [
                        "services.sh /services.sh", 
                        "nginx.sites.conf /etc/nginx/conf.d/default.conf"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/services.sh\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "80 443"
                    ], 
                    "FROM": [
                        "nginx:alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "set -x && apk add -U openssl py-pip && mkdir -p /root/ca/certs /root/ca/private /root/ca/newcerts && echo 1000 > /root/ca/serial && touch /root/ca/index.txt && sed -i 's/\\.\\/demoCA/\\/root\\/ca/g' /etc/ssl/openssl.cnf && openssl req -new -x509 -days 3650 -nodes -extensions v3_ca -keyout /root/ca/private/cakey.pem -out /root/ca/cacert.pem -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/CN=ansible.http.tests\" && openssl req -new -nodes -out /root/ca/ansible.http.tests-req.pem -keyout /root/ca/private/ansible.http.tests-key.pem -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/CN=ansible.http.tests\" && yes | openssl ca -config /etc/ssl/openssl.cnf -out /root/ca/ansible.http.tests-cert.pem -infiles /root/ca/ansible.http.tests-req.pem && openssl req -new -nodes -out /root/ca/sni1.ansible.http.tests-req.pem -keyout /root/ca/private/sni1.ansible.http.tests-key.pem -config /etc/ssl/openssl.cnf -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/CN=sni1.ansible.http.tests\" && yes | openssl ca -config /etc/ssl/openssl.cnf -out /root/ca/sni1.ansible.http.tests-cert.pem -infiles /root/ca/sni1.ansible.http.tests-req.pem && openssl req -new -nodes -out /root/ca/sni2.ansible.http.tests-req.pem -keyout /root/ca/private/sni2.ansible.http.tests-key.pem -config /etc/ssl/openssl.cnf -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/CN=sni2.ansible.http.tests\" && yes | openssl ca -config /etc/ssl/openssl.cnf -out /root/ca/sni2.ansible.http.tests-cert.pem -infiles /root/ca/sni2.ansible.http.tests-req.pem && openssl req -new -nodes -out /root/ca/client.ansible.http.tests-req.pem -keyout /root/ca/private/client.ansible.http.tests-key.pem -config /etc/ssl/openssl.cnf -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/CN=client.ansible.http.tests\" && yes | openssl ca -config /etc/ssl/openssl.cnf -out /root/ca/client.ansible.http.tests-cert.pem -infiles /root/ca/client.ansible.http.tests-req.pem && cp /root/ca/cacert.pem /usr/share/nginx/html/cacert.pem && cp /root/ca/client.ansible.http.tests-cert.pem /usr/share/nginx/html/client.pem && cp /root/ca/private/client.ansible.http.tests-key.pem /usr/share/nginx/html/client.key && pip install gunicorn httpbin"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/opensuse42.1/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "LIBSYSTEMD=/usr/lib/systemd/system", 
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "opensuse:42.1"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "zypper --non-interactive --gpg-auto-import-keys refresh && zypper --non-interactive install --force systemd-sysvinit && zypper --non-interactive install --auto-agree-with-licenses --no-recommends acl apache2 asciidoc bzip2 curl dbus-1-python gcc git glibc-i18ndata glibc-locale iproute2 lsb-release make mariadb mercurial openssh postgresql-server python-coverage python-httplib2 python-jinja2 python-keyczar python-mock python-MySQL-python python-nose python-paramiko python-passlib python-pip python-psycopg2 python-PyYAML python-setuptools python-virtualenv rpm-build ruby subversion sudo tar unzip which zip && zypper clean", 
                        "(cd ${LIBSYSTEMD}/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\", 
                        "sed -i /pam_systemd/d /etc/pam.d/common-session-pc", 
                        "mkdir /etc/ansible/", 
                        "/usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts", 
                        "ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "systemctl enable sshd.service", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/opensuse42.2/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "LIBSYSTEMD=/usr/lib/systemd/system", 
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "opensuse:42.2"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "zypper --non-interactive --gpg-auto-import-keys refresh && zypper --non-interactive install --force systemd-sysvinit && zypper --non-interactive install --auto-agree-with-licenses --no-recommends acl apache2 asciidoc bzip2 curl dbus-1-python gcc git glibc-i18ndata glibc-locale iproute2 lsb-release make mariadb mercurial openssh postgresql-server python-coverage python-httplib2 python-jinja2 python-keyczar python-mock python-MySQL-python python-nose python-paramiko python-passlib python-pip python-psycopg2 python-PyYAML python-setuptools python-virtualenv rpm-build ruby subversion sudo tar unzip which zip && zypper clean", 
                        "(cd ${LIBSYSTEMD}/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\", 
                        "sed -i /pam_systemd/d /etc/pam.d/common-session-pc", 
                        "mkdir /etc/ansible/", 
                        "/usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts", 
                        "ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "systemctl enable sshd.service", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/ubuntu1204/Dockerfile": {
                    "ADD": [
                        "init-fake.conf /etc/init/fake-container-events.conf"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:12.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends acl apache2 asciidoc bzip2 cdbs curl debhelper debianutils devscripts docbook-xml dpkg-dev fakeroot gawk gcc git libxml2-utils locales make mercurial mysql-server openssh-client openssh-server python-coverage python-dev python-httplib2 python-jinja2 python-keyczar python-mock python-mysqldb python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv python-yaml reprepro rsync ruby rubygems subversion sudo unzip xsltproc zip && apt-get clean", 
                        "pip install --upgrade pycrypto", 
                        "rm /usr/sbin/policy-rc.d; rm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl", 
                        "/usr/sbin/update-rc.d -f ondemand remove; for f in /etc/init/u*.conf /etc/init/mounted-dev.conf /etc/init/mounted-proc.conf /etc/init/mounted-run.conf /etc/init/mounted-tmp.conf /etc/init/mounted-var.conf /etc/init/hostname.conf /etc/init/networking.conf /etc/init/tty*.conf /etc/init/plymouth*.conf /etc/init/hwclock*.conf /etc/init/module*.conf; do dpkg-divert --local --rename --add \"$f\"; done; echo '# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab", 
                        "rm /etc/apt/apt.conf.d/docker-clean", 
                        "mkdir /etc/ansible/", 
                        "/bin/echo -e \"[local]\\nlocalhost ansible_connection=local\" > /etc/ansible/hosts", 
                        "locale-gen en_US.UTF-8", 
                        "ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/ubuntu1404/Dockerfile": {
                    "ADD": [
                        "init-fake.conf /etc/init/fake-container-events.conf"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends acl apache2 asciidoc bzip2 cdbs curl debhelper debianutils devscripts docbook-xml dpkg-dev fakeroot gawk git libxml2-utils locales make mercurial mysql-server openssh-client openssh-server python-coverage python-httplib2 python-jinja2 python-keyczar python-mock python-mysqldb python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv python-yaml reprepro rsync ruby subversion sudo unzip xsltproc zip && apt-get clean", 
                        "rm /usr/sbin/policy-rc.d; rm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl", 
                        "/usr/sbin/update-rc.d -f ondemand remove; for f in /etc/init/u*.conf /etc/init/mounted-dev.conf /etc/init/mounted-proc.conf /etc/init/mounted-run.conf /etc/init/mounted-tmp.conf /etc/init/mounted-var.conf /etc/init/hostname.conf /etc/init/networking.conf /etc/init/tty*.conf /etc/init/plymouth*.conf /etc/init/hwclock*.conf /etc/init/module*.conf; do dpkg-divert --local --rename --add \"$f\"; done; echo '# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab", 
                        "rm /etc/apt/apt.conf.d/docker-clean", 
                        "mkdir /etc/ansible/", 
                        "/bin/echo -e \"[local]\\nlocalhost ansible_connection=local\" > /etc/ansible/hosts", 
                        "locale-gen en_US.UTF-8", 
                        "ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/ubuntu1604/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends acl apache2 asciidoc bzip2 cdbs curl debhelper debianutils devscripts docbook-xml dpkg-dev fakeroot gawk git iproute2 libxml2-utils locales lsb-release make mercurial mysql-server openssh-client openssh-server python-coverage python-dbus python-httplib2 python-jinja2 python-keyczar python-mock python-mysqldb python-nose python-paramiko python-passlib python-pip python-setuptools python-virtualenv python-wheel python-yaml reprepro rsync ruby subversion sudo unzip virtualenv xsltproc zip && apt-get clean", 
                        "rm /etc/apt/apt.conf.d/docker-clean", 
                        "mkdir /etc/ansible/", 
                        "/bin/echo -e \"[local]\\nlocalhost ansible_connection=local\" > /etc/ansible/hosts", 
                        "locale-gen en_US.UTF-8", 
                        "ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip install junit-xml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/utils/docker/ubuntu1604py3/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/sbin/init\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "container=docker"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends acl apache2 bzip2 curl debhelper debianutils devscripts docbook-xml dpkg-dev fakeroot gawk git iproute2 libxml2-utils locales lsb-release make mysql-server openssh-client openssh-server python3-coverage python3-dbus python3-httplib2 python3-jinja2 python3-mock python3-mysqldb python3-nose python3-paramiko python3-passlib python3-pip python3-setuptools python3-virtualenv python3-wheel python3-yaml reprepro rsync ruby subversion sudo unzip virtualenv xsltproc zip && apt-get clean", 
                        "rm /etc/apt/apt.conf.d/docker-clean", 
                        "mkdir /etc/ansible/", 
                        "/bin/echo -e \"[local]\\nlocalhost ansible_connection=local\" > /etc/ansible/hosts", 
                        "locale-gen en_US.UTF-8", 
                        "ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done", 
                        "pip3 install junit-xml python3-keyczar"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/ansible/ansible/git/blobs/973cc714ea0d8b65331af73a382a88134b16ac66", 
                    "html": "https://github.com/ansible/ansible/blob/devel/README.md", 
                    "self": "https://api.github.com/repos/ansible/ansible/contents/README.md?ref=devel"
                }, 
                "content": "WyFbUHlQSSB2ZXJzaW9uXShodHRwczovL2ltZy5zaGllbGRzLmlvL3B5cGkv\ndi9hbnNpYmxlLnN2ZyldKGh0dHBzOi8vcHlwaS5weXRob24ub3JnL3B5cGkv\nYW5zaWJsZSkKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL2FwaS5zaGlwcGFi\nbGUuY29tL3Byb2plY3RzLzU3M2Y3OWQwMmE4MTkyOTAyZTIwZTM0Yi9iYWRn\nZT9icmFuY2g9ZGV2ZWwpXShodHRwczovL2FwcC5zaGlwcGFibGUuY29tL3By\nb2plY3RzLzU3M2Y3OWQwMmE4MTkyOTAyZTIwZTM0YikKCgpBbnNpYmxlCj09\nPT09PT0KCkFuc2libGUgaXMgYSByYWRpY2FsbHkgc2ltcGxlIElUIGF1dG9t\nYXRpb24gc3lzdGVtLiAgSXQgaGFuZGxlcyBjb25maWd1cmF0aW9uLW1hbmFn\nZW1lbnQsIGFwcGxpY2F0aW9uIGRlcGxveW1lbnQsIGNsb3VkIHByb3Zpc2lv\nbmluZywgYWQtaG9jIHRhc2stZXhlY3V0aW9uLCBhbmQgbXVsdGlub2RlIG9y\nY2hlc3RyYXRpb24gLSBpbmNsdWRpbmcgdHJpdmlhbGl6aW5nIHRoaW5ncyBs\naWtlIHplcm8gZG93bnRpbWUgcm9sbGluZyB1cGRhdGVzIHdpdGggbG9hZCBi\nYWxhbmNlcnMuCgpSZWFkIHRoZSBkb2N1bWVudGF0aW9uIGFuZCBtb3JlIGF0\nIGh0dHBzOi8vYW5zaWJsZS5jb20vCgpNYW55IHVzZXJzIHJ1biBzdHJhaWdo\ndCBmcm9tIHRoZSBkZXZlbG9wbWVudCBicmFuY2ggKGl0J3MgZ2VuZXJhbGx5\nIGZpbmUgdG8gZG8gc28pLCBidXQgeW91IG1pZ2h0IGFsc28gd2lzaCB0byBj\nb25zdW1lIGEgcmVsZWFzZS4KCllvdSBjYW4gZmluZCBpbnN0cnVjdGlvbnMg\nW2hlcmVdKGh0dHBzOi8vZG9jcy5hbnNpYmxlLmNvbS9pbnRyb19nZXR0aW5n\nX3N0YXJ0ZWQuaHRtbCkgZm9yIGEgdmFyaWV0eSBvZiBwbGF0Zm9ybXMuCgpJ\nZiB5b3Ugd2FudCB0byBkb3dubG9hZCBhIHRhcmJhbGwgb2YgYSByZWxlYXNl\nLCBnbyB0byBbcmVsZWFzZXMuYW5zaWJsZS5jb21dKGh0dHBzOi8vcmVsZWFz\nZXMuYW5zaWJsZS5jb20vYW5zaWJsZSksIHRob3VnaCBtb3N0IHVzZXJzIHVz\nZSBgeXVtYCAodXNpbmcgdGhlIEVQRUwgaW5zdHJ1Y3Rpb25zIGxpbmtlZCBh\nYm92ZSksIGBhcHRgICh1c2luZyB0aGUgUFBBIGluc3RydWN0aW9ucyBsaW5r\nZWQgYWJvdmUpLCBvciBgcGlwIGluc3RhbGwgYW5zaWJsZWAuCgpEZXNpZ24g\nUHJpbmNpcGxlcwo9PT09PT09PT09PT09PT09PQoKICAgKiBIYXZlIGEgZGVh\nZCBzaW1wbGUgc2V0dXAgcHJvY2VzcyBhbmQgYSBtaW5pbWFsIGxlYXJuaW5n\nIGN1cnZlCiAgICogTWFuYWdlIG1hY2hpbmVzIHZlcnkgcXVpY2tseSBhbmQg\naW4gcGFyYWxsZWwKICAgKiBBdm9pZCBjdXN0b20tYWdlbnRzIGFuZCBhZGRp\ndGlvbmFsIG9wZW4gcG9ydHMsIGJlIGFnZW50bGVzcyBieSBsZXZlcmFnaW5n\nIHRoZSBleGlzdGluZyBTU0ggZGFlbW9uCiAgICogRGVzY3JpYmUgaW5mcmFz\ndHJ1Y3R1cmUgaW4gYSBsYW5ndWFnZSB0aGF0IGlzIGJvdGggbWFjaGluZSBh\nbmQgaHVtYW4gZnJpZW5kbHkKICAgKiBGb2N1cyBvbiBzZWN1cml0eSBhbmQg\nZWFzeSBhdWRpdGFiaWxpdHkvcmV2aWV3L3Jld3JpdGluZyBvZiBjb250ZW50\nCiAgICogTWFuYWdlIG5ldyByZW1vdGUgbWFjaGluZXMgaW5zdGFudGx5LCB3\naXRob3V0IGJvb3RzdHJhcHBpbmcgYW55IHNvZnR3YXJlCiAgICogQWxsb3cg\nbW9kdWxlIGRldmVsb3BtZW50IGluIGFueSBkeW5hbWljIGxhbmd1YWdlLCBu\nb3QganVzdCBQeXRob24KICAgKiBCZSB1c2FibGUgYXMgbm9uLXJvb3QKICAg\nKiBCZSB0aGUgZWFzaWVzdCBJVCBhdXRvbWF0aW9uIHN5c3RlbSB0byB1c2Us\nIGV2ZXIuCgpHZXQgSW52b2x2ZWQKPT09PT09PT09PT09CgogICAqIFJlYWQg\nW0NvbW11bml0eSBJbmZvcm1hdGlvbl0oaHR0cHM6Ly9kb2NzLmFuc2libGUu\nY29tL2NvbW11bml0eS5odG1sKSBmb3IgYWxsIGtpbmRzIG9mIHdheXMgdG8g\nY29udHJpYnV0ZSB0byBhbmQgaW50ZXJhY3Qgd2l0aCB0aGUgcHJvamVjdCwg\naW5jbHVkaW5nIG1haWxpbmcgbGlzdCBpbmZvcm1hdGlvbiBhbmQgaG93IHRv\nIHN1Ym1pdCBidWcgcmVwb3J0cyBhbmQgY29kZSB0byBBbnNpYmxlLgogICAq\nIEFsbCBjb2RlIHN1Ym1pc3Npb25zIGFyZSBkb25lIHRocm91Z2ggcHVsbCBy\nZXF1ZXN0cy4gIFRha2UgY2FyZSB0byBtYWtlIHN1cmUgbm8gbWVyZ2UgY29t\nbWl0cyBhcmUgaW4gdGhlIHN1Ym1pc3Npb24sIGFuZCB1c2UgYGdpdCByZWJh\nc2VgIHZzIGBnaXQgbWVyZ2VgIGZvciB0aGlzIHJlYXNvbi4gIElmIHN1Ym1p\ndHRpbmcgYSBsYXJnZSBjb2RlIGNoYW5nZSAob3RoZXIgdGhhbiBtb2R1bGVz\nKSwgaXQncyBwcm9iYWJseSBhIGdvb2QgaWRlYSB0byBqb2luIGFuc2libGUt\nZGV2ZWwgYW5kIHRhbGsgYWJvdXQgd2hhdCB5b3Ugd291bGQgbGlrZSB0byBk\nbyBvciBhZGQgZmlyc3QgYW5kIHRvIGF2b2lkIGR1cGxpY2F0ZSBlZmZvcnRz\nLiAgVGhpcyBub3Qgb25seSBoZWxwcyBldmVyeW9uZSBrbm93IHdoYXQncyBn\nb2luZyBvbiwgaXQgYWxzbyBoZWxwcyBzYXZlIHRpbWUgYW5kIGVmZm9ydCBp\nZiB3ZSBkZWNpZGUgc29tZSBjaGFuZ2VzIGFyZSBuZWVkZWQuCiAgICogVXNl\ncnMgbGlzdDogW2Fuc2libGUtcHJvamVjdF0oaHR0cHM6Ly9ncm91cHMuZ29v\nZ2xlLmNvbS9ncm91cC9hbnNpYmxlLXByb2plY3QpCiAgICogRGV2ZWxvcG1l\nbnQgbGlzdDogW2Fuc2libGUtZGV2ZWxdKGh0dHBzOi8vZ3JvdXBzLmdvb2ds\nZS5jb20vZ3JvdXAvYW5zaWJsZS1kZXZlbCkKICAgKiBBbm5vdW5jZW1lbnQg\nbGlzdDogW2Fuc2libGUtYW5ub3VuY2VdKGh0dHBzOi8vZ3JvdXBzLmdvb2ds\nZS5jb20vZ3JvdXAvYW5zaWJsZS1hbm5vdW5jZSkgLSByZWFkIG9ubHkKICAg\nKiBpcmMuZnJlZW5vZGUubmV0OiAjYW5zaWJsZQoKQnJhbmNoIEluZm8KPT09\nPT09PT09PT0KCiAgICogUmVsZWFzZXMgYXJlIG5hbWVkIGFmdGVyIExlZCBa\nZXBwZWxpbiBzb25ncy4gKFJlbGVhc2VzIHByaW9yIHRvIDIuMCB3ZXJlIG5h\nbWVkIGFmdGVyIFZhbiBIYWxlbiBzb25ncy4pCiAgICogVGhlIGRldmVsIGJy\nYW5jaCBjb3JyZXNwb25kcyB0byB0aGUgcmVsZWFzZSBhY3RpdmVseSB1bmRl\nciBkZXZlbG9wbWVudC4KICAgKiBGb3IgcmVsZWFzZXMgMS44IC0gMi4yLCBt\nb2R1bGVzIGFyZSBrZXB0IGluIGRpZmZlcmVudCByZXBvcywgeW91J2xsIHdh\nbnQgdG8gZm9sbG93IFtjb3JlXShodHRwczovL2dpdGh1Yi5jb20vYW5zaWJs\nZS9hbnNpYmxlLW1vZHVsZXMtY29yZSkgYW5kIFtleHRyYXNdKGh0dHBzOi8v\nZ2l0aHViLmNvbS9hbnNpYmxlL2Fuc2libGUtbW9kdWxlcy1leHRyYXMpCiAg\nICogVmFyaW91cyByZWxlYXNlLVguWSBicmFuY2hlcyBleGlzdCBmb3IgcHJl\ndmlvdXMgcmVsZWFzZXMuCiAgICogV2UnZCBsb3ZlIHRvIGhhdmUgeW91ciBj\nb250cmlidXRpb25zLCByZWFkIFtDb21tdW5pdHkgSW5mb3JtYXRpb25dKGh0\ndHBzOi8vZG9jcy5hbnNpYmxlLmNvbS9jb21tdW5pdHkuaHRtbCkgZm9yIG5v\ndGVzIG9uIGhvdyB0byBnZXQgc3RhcnRlZC4KCkF1dGhvcnMKPT09PT09PQoK\nQW5zaWJsZSB3YXMgY3JlYXRlZCBieSBbTWljaGFlbCBEZUhhYW5dKGh0dHBz\nOi8vZ2l0aHViLmNvbS9tcGRlaGFhbikgKG1pY2hhZWwuZGVoYWFuL2dtYWls\nL2NvbSkgYW5kIGhhcyBjb250cmlidXRpb25zIGZyb20gb3ZlciAxMDAwIHVz\nZXJzIChhbmQgZ3Jvd2luZykuICBUaGFua3MgZXZlcnlvbmUhCgpBbnNpYmxl\nIGlzIHNwb25zb3JlZCBieSBbQW5zaWJsZSwgSW5jXShodHRwczovL2Fuc2li\nbGUuY29tKQoKTGljZW5jZQo9PT09PT09CkdOVQpDbGljayBvbiB0aGUgW0xp\nbmtdKENPUFlJTkcpIHRvIHNlZSB0aGUgZnVsbCB0ZXh0LgoKCg==\n", 
                "download_url": "https://raw.githubusercontent.com/ansible/ansible/devel/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/ansible/ansible/git/blobs/973cc714ea0d8b65331af73a382a88134b16ac66", 
                "html_url": "https://github.com/ansible/ansible/blob/devel/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "973cc714ea0d8b65331af73a382a88134b16ac66", 
                "size": 3772, 
                "type": "file", 
                "url": "https://api.github.com/repos/ansible/ansible/contents/README.md?ref=devel"
            }, 
            "repo": {
                "created_at": "2012-03-06T14:58:02Z", 
                "language": "Python", 
                "owner": {
                    "avatar_url": "https://avatars1.githubusercontent.com/u/1507452?v=3", 
                    "events_url": "https://api.github.com/users/ansible/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/ansible/followers", 
                    "following_url": "https://api.github.com/users/ansible/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/ansible/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/ansible", 
                    "id": 1507452, 
                    "login": "ansible", 
                    "organizations_url": "https://api.github.com/users/ansible/orgs", 
                    "received_events_url": "https://api.github.com/users/ansible/received_events", 
                    "repos_url": "https://api.github.com/users/ansible/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/ansible/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/ansible/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/ansible"
                }, 
                "pushed_at": "2017-04-26T03:25:52Z", 
                "stargazers_count": 22770, 
                "updated_at": "2017-04-26T03:12:09Z", 
                "watchers_count": 22770
            }
        }, 
        "atom/atom": {
            "dockerfile": {
                "/Dockerfile": {
                    "ADD": [
                        ". /atom"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "nodesource/fedora21:4.2.6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum install -y make gcc gcc-c++ glibc-devel git-core libgnome-keyring-devel rpmdevtools", 
                        "npm install -g npm --loglevel error"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/atom"
                    ]
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/atom/atom/git/blobs/74a5b4cee163baf07a5b48591a07fd0073a02710", 
                    "html": "https://github.com/atom/atom/blob/master/README.md", 
                    "self": "https://api.github.com/repos/atom/atom/contents/README.md?ref=master"
                }, 
                "content": "IVtBdG9tXShodHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9h\nc3NldHMvNzI5MTkvMjg3NDIzMS8zYWYxZGI0OC1kM2RkLTExZTMtOThkYy02\nMDY2ZjhiYzc2NmYucG5nKQoKWyFbbWFjT1MgQnVpbGQgU3RhdHVzXShodHRw\nczovL2NpcmNsZWNpLmNvbS9naC9hdG9tL2F0b20vdHJlZS9tYXN0ZXIuc3Zn\nP3N0eWxlPXNoaWVsZCldKGh0dHBzOi8vY2lyY2xlY2kuY29tL2doL2F0b20v\nYXRvbSkgWyFbTGludXggQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1j\naS5vcmcvYXRvbS9hdG9tLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90\ncmF2aXMtY2kub3JnL2F0b20vYXRvbSkgWyFbV2luZG93cyBCdWlsZCBTdGF0\ndXNdKGh0dHBzOi8vY2kuYXBwdmV5b3IuY29tL2FwaS9wcm9qZWN0cy9zdGF0\ndXMvMXRra3R3aDY1NHcwN2VpbT9zdmc9dHJ1ZSldKGh0dHBzOi8vY2kuYXBw\ndmV5b3IuY29tL3Byb2plY3QvQXRvbS9hdG9tKQpbIVtEZXBlbmRlbmN5IFN0\nYXR1c10oaHR0cHM6Ly9kYXZpZC1kbS5vcmcvYXRvbS9hdG9tLnN2ZyldKGh0\ndHBzOi8vZGF2aWQtZG0ub3JnL2F0b20vYXRvbSkKWyFbSm9pbiB0aGUgQXRv\nbSBDb21tdW5pdHkgb24gU2xhY2tdKGh0dHA6Ly9hdG9tLXNsYWNrLmhlcm9r\ndWFwcC5jb20vYmFkZ2Uuc3ZnKV0oaHR0cDovL2F0b20tc2xhY2suaGVyb2t1\nYXBwLmNvbS8pCgpBdG9tIGlzIGEgaGFja2FibGUgdGV4dCBlZGl0b3IgZm9y\nIHRoZSAyMXN0IGNlbnR1cnksIGJ1aWx0IG9uIFtFbGVjdHJvbl0oaHR0cHM6\nLy9naXRodWIuY29tL2F0b20vZWxlY3Ryb24pLCBhbmQgYmFzZWQgb24gZXZl\ncnl0aGluZyB3ZSBsb3ZlIGFib3V0IG91ciBmYXZvcml0ZSBlZGl0b3JzLiBX\nZSBkZXNpZ25lZCBpdCB0byBiZSBkZWVwbHkgY3VzdG9taXphYmxlLCBidXQg\nc3RpbGwgYXBwcm9hY2hhYmxlIHVzaW5nIHRoZSBkZWZhdWx0IGNvbmZpZ3Vy\nYXRpb24uCgpWaXNpdCBbYXRvbS5pb10oaHR0cHM6Ly9hdG9tLmlvKSB0byBs\nZWFybiBtb3JlIG9yIHZpc2l0IHRoZSBbQXRvbSBmb3J1bV0oaHR0cHM6Ly9k\naXNjdXNzLmF0b20uaW8pLgoKRm9sbG93IFtAQXRvbUVkaXRvcl0oaHR0cHM6\nLy90d2l0dGVyLmNvbS9hdG9tZWRpdG9yKSBvbiBUd2l0dGVyIGZvciBpbXBv\ncnRhbnQKYW5ub3VuY2VtZW50cy4KClRoaXMgcHJvamVjdCBhZGhlcmVzIHRv\nIHRoZSBDb250cmlidXRvciBDb3ZlbmFudCBbY29kZSBvZiBjb25kdWN0XShD\nT0RFX09GX0NPTkRVQ1QubWQpLgpCeSBwYXJ0aWNpcGF0aW5nLCB5b3UgYXJl\nIGV4cGVjdGVkIHRvIHVwaG9sZCB0aGlzIGNvZGUuIFBsZWFzZSByZXBvcnQg\ndW5hY2NlcHRhYmxlIGJlaGF2aW9yIHRvIGF0b21AZ2l0aHViLmNvbS4KCiMj\nIERvY3VtZW50YXRpb24KCklmIHlvdSB3YW50IHRvIHJlYWQgYWJvdXQgdXNp\nbmcgQXRvbSBvciBkZXZlbG9waW5nIHBhY2thZ2VzIGluIEF0b20sIHRoZSBb\nQXRvbSBGbGlnaHQgTWFudWFsXShodHRwOi8vZmxpZ2h0LW1hbnVhbC5hdG9t\nLmlvKSBpcyBmcmVlIGFuZCBhdmFpbGFibGUgb25saW5lLiBZb3UgY2FuIGZp\nbmQgdGhlIHNvdXJjZSB0byB0aGUgbWFudWFsIGluIFthdG9tL2ZsaWdodC1t\nYW51YWwuYXRvbS5pb10oaHR0cHM6Ly9naXRodWIuY29tL2F0b20vZmxpZ2h0\nLW1hbnVhbC5hdG9tLmlvKS4KClRoZSBbQVBJIHJlZmVyZW5jZV0oaHR0cHM6\nLy9hdG9tLmlvL2RvY3MvYXBpKSBmb3IgZGV2ZWxvcGluZyBwYWNrYWdlcyBp\ncyBhbHNvIGRvY3VtZW50ZWQgb24gQXRvbS5pby4KCiMjIEluc3RhbGxpbmcK\nCiMjIyBQcmVyZXF1aXNpdGVzCi0gW0dpdF0oaHR0cHM6Ly9naXQtc2NtLmNv\nbS8pCgojIyMgbWFjT1MKCkRvd25sb2FkIHRoZSBsYXRlc3QgW0F0b20gcmVs\nZWFzZV0oaHR0cHM6Ly9naXRodWIuY29tL2F0b20vYXRvbS9yZWxlYXNlcy9s\nYXRlc3QpLgoKQXRvbSB3aWxsIGF1dG9tYXRpY2FsbHkgdXBkYXRlIHdoZW4g\nYSBuZXcgcmVsZWFzZSBpcyBhdmFpbGFibGUuCgojIyMgV2luZG93cwoKRG93\nbmxvYWQgdGhlIGxhdGVzdCBbQXRvbSBpbnN0YWxsZXJdKGh0dHBzOi8vZ2l0\naHViLmNvbS9hdG9tL2F0b20vcmVsZWFzZXMvbGF0ZXN0KS4gIEF0b21TZXR1\ncC5leGUgaXMgMzItYml0LCBBdG9tU2V0dXAteDY0LmV4ZSBmb3IgNjQtYml0\nIHN5c3RlbXMuCgpBdG9tIHdpbGwgYXV0b21hdGljYWxseSB1cGRhdGUgd2hl\nbiBhIG5ldyByZWxlYXNlIGlzIGF2YWlsYWJsZS4KCllvdSBjYW4gYWxzbyBk\nb3dubG9hZCBgYXRvbS13aW5kb3dzLnppcGAgKDMyLWJpdCkgb3IgYGF0b20t\neDY0LXdpbmRvd3MuemlwYCAoNjQtYml0KSBmcm9tIHRoZSBbcmVsZWFzZXMg\ncGFnZV0oaHR0cHM6Ly9naXRodWIuY29tL2F0b20vYXRvbS9yZWxlYXNlcy9s\nYXRlc3QpLgpUaGUgYC56aXBgIHZlcnNpb24gd2lsbCBub3QgYXV0b21hdGlj\nYWxseSB1cGRhdGUuCgpVc2luZyBbY2hvY29sYXRleV0oaHR0cHM6Ly9jaG9j\nb2xhdGV5Lm9yZy8pPyBSdW4gYGNpbnN0IEF0b21gIHRvIGluc3RhbGwgdGhl\nIGxhdGVzdCB2ZXJzaW9uIG9mIEF0b20uCgojIyMgRGViaWFuIExpbnV4IChV\nYnVudHUpCgpBdG9tIGlzIG9ubHkgYXZhaWxhYmxlIGZvciA2NC1iaXQgTGlu\ndXggc3lzdGVtcy4KCjEuIERvd25sb2FkIGBhdG9tLWFtZDY0LmRlYmAgZnJv\nbSB0aGUgW0F0b20gcmVsZWFzZXMgcGFnZV0oaHR0cHM6Ly9naXRodWIuY29t\nL2F0b20vYXRvbS9yZWxlYXNlcy9sYXRlc3QpLgoyLiBSdW4gYHN1ZG8gZHBr\nZyAtLWluc3RhbGwgYXRvbS1hbWQ2NC5kZWJgIG9uIHRoZSBkb3dubG9hZGVk\nIHBhY2thZ2UuCjMuIExhdW5jaCBBdG9tIHVzaW5nIHRoZSBpbnN0YWxsZWQg\nYGF0b21gIGNvbW1hbmQuCgpUaGUgTGludXggdmVyc2lvbiBkb2VzIG5vdCBj\ndXJyZW50bHkgYXV0b21hdGljYWxseSB1cGRhdGUgc28geW91IHdpbGwgbmVl\nZCB0bwpyZXBlYXQgdGhlc2Ugc3RlcHMgdG8gdXBncmFkZSB0byBmdXR1cmUg\ncmVsZWFzZXMuCgojIyMgUmVkIEhhdCBMaW51eCAoRmVkb3JhIDIxIGFuZCB1\nbmRlciwgQ2VudE9TLCBSZWQgSGF0KQoKQXRvbSBpcyBvbmx5IGF2YWlsYWJs\nZSBmb3IgNjQtYml0IExpbnV4IHN5c3RlbXMuCgoxLiBEb3dubG9hZCBgYXRv\nbS54ODZfNjQucnBtYCBmcm9tIHRoZSBbQXRvbSByZWxlYXNlcyBwYWdlXSho\ndHRwczovL2dpdGh1Yi5jb20vYXRvbS9hdG9tL3JlbGVhc2VzL2xhdGVzdCku\nCjIuIFJ1biBgc3VkbyB5dW0gbG9jYWxpbnN0YWxsIGF0b20ueDg2XzY0LnJw\nbWAgb24gdGhlIGRvd25sb2FkZWQgcGFja2FnZS4KMy4gTGF1bmNoIEF0b20g\ndXNpbmcgdGhlIGluc3RhbGxlZCBgYXRvbWAgY29tbWFuZC4KClRoZSBMaW51\neCB2ZXJzaW9uIGRvZXMgbm90IGN1cnJlbnRseSBhdXRvbWF0aWNhbGx5IHVw\nZGF0ZSBzbyB5b3Ugd2lsbCBuZWVkIHRvCnJlcGVhdCB0aGVzZSBzdGVwcyB0\nbyB1cGdyYWRlIHRvIGZ1dHVyZSByZWxlYXNlcy4KCiMjIyBGZWRvcmEgMjIr\nCgpBdG9tIGlzIG9ubHkgYXZhaWxhYmxlIGZvciA2NC1iaXQgTGludXggc3lz\ndGVtcy4KCjEuIERvd25sb2FkIGBhdG9tLng4Nl82NC5ycG1gIGZyb20gdGhl\nIFtBdG9tIHJlbGVhc2VzIHBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdG9t\nL2F0b20vcmVsZWFzZXMvbGF0ZXN0KS4KMi4gUnVuIGBzdWRvIGRuZiBpbnN0\nYWxsIC4vYXRvbS54ODZfNjQucnBtYCBvbiB0aGUgZG93bmxvYWRlZCBwYWNr\nYWdlLgozLiBMYXVuY2ggQXRvbSB1c2luZyB0aGUgaW5zdGFsbGVkIGBhdG9t\nYCBjb21tYW5kLgoKVGhlIExpbnV4IHZlcnNpb24gZG9lcyBub3QgY3VycmVu\ndGx5IGF1dG9tYXRpY2FsbHkgdXBkYXRlIHNvIHlvdSB3aWxsIG5lZWQgdG8K\ncmVwZWF0IHRoZXNlIHN0ZXBzIHRvIHVwZ3JhZGUgdG8gZnV0dXJlIHJlbGVh\nc2VzLgoKIyMjIEFyY2hpdmUgZXh0cmFjdGlvbgoKQW4gYXJjaGl2ZSBpcyBh\ndmFpbGFibGUgZm9yIHBlb3BsZSB3aG8gZG9uJ3Qgd2FudCB0byBpbnN0YWxs\nIGBhdG9tYCBhcyByb290LgoKVGhpcyB2ZXJzaW9uIGVuYWJsZXMgeW91IHRv\nIGluc3RhbGwgbXVsdGlwbGUgQXRvbSB2ZXJzaW9ucyBpbiBwYXJhbGxlbC4g\nSXQgaGFzIGJlZW4gYnVpbHQgb24gVWJ1bnR1IDY0LWJpdCwKYnV0IHNob3Vs\nZCBiZSBjb21wYXRpYmxlIHdpdGggb3RoZXIgTGludXggZGlzdHJpYnV0aW9u\ncy4KCjEuIEluc3RhbGwgZGVwZW5kZW5jaWVzIChvbiBVYnVudHUpOiBgc3Vk\nbyBhcHQgaW5zdGFsbCBnaXQgZ2NvbmYyIGdjb25mLXNlcnZpY2UgbGliZ3Rr\nMi4wLTAgbGlidWRldjEgbGliZ2NyeXB0MjAgbGlibm90aWZ5NCBsaWJ4dHN0\nNiBsaWJuc3MzIHB5dGhvbiBndmZzLWJpbiB4ZGctdXRpbHMgbGliY2FwMmAK\nMi4gRG93bmxvYWQgYGF0b20tYW1kNjQudGFyLmd6YCBmcm9tIHRoZSBbQXRv\nbSByZWxlYXNlcyBwYWdlXShodHRwczovL2dpdGh1Yi5jb20vYXRvbS9hdG9t\nL3JlbGVhc2VzL2xhdGVzdCkuCjMuIFJ1biBgdGFyIHhmIGF0b20tYW1kNjQu\ndGFyLmd6YCBpbiB0aGUgZGlyZWN0b3J5IHdoZXJlIHlvdSB3YW50IHRvIGV4\ndHJhY3QgdGhlIEF0b20gZm9sZGVyLgo0LiBMYXVuY2ggQXRvbSB1c2luZyB0\naGUgaW5zdGFsbGVkIGBhdG9tYCBjb21tYW5kIGZyb20gdGhlIG5ld2x5IGV4\ndHJhY3RlZCBkaXJlY3RvcnkuCgpUaGUgTGludXggdmVyc2lvbiBkb2VzIG5v\ndCBjdXJyZW50bHkgYXV0b21hdGljYWxseSB1cGRhdGUgc28geW91IHdpbGwg\nbmVlZCB0bwpyZXBlYXQgdGhlc2Ugc3RlcHMgdG8gdXBncmFkZSB0byBmdXR1\ncmUgcmVsZWFzZXMuCgojIyBCdWlsZGluZwoKKiBbTGludXhdKC4vZG9jcy9i\ndWlsZC1pbnN0cnVjdGlvbnMvbGludXgubWQpCiogW21hY09TXSguL2RvY3Mv\nYnVpbGQtaW5zdHJ1Y3Rpb25zL21hY09TLm1kKQoqIFtGcmVlQlNEXSguL2Rv\nY3MvYnVpbGQtaW5zdHJ1Y3Rpb25zL2ZyZWVic2QubWQpCiogW1dpbmRvd3Nd\nKC4vZG9jcy9idWlsZC1pbnN0cnVjdGlvbnMvd2luZG93cy5tZCkKCiMjIExp\nY2Vuc2UKCltNSVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdG9tL2F0b20vYmxv\nYi9tYXN0ZXIvTElDRU5TRS5tZCkKCldoZW4gdXNpbmcgdGhlIEF0b20gb3Ig\nb3RoZXIgR2l0SHViIGxvZ29zLCBiZSBzdXJlIHRvIGZvbGxvdyB0aGUgW0dp\ndEh1YiBsb2dvIGd1aWRlbGluZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9sb2dv\ncykuCg==\n", 
                "download_url": "https://raw.githubusercontent.com/atom/atom/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/atom/atom/git/blobs/74a5b4cee163baf07a5b48591a07fd0073a02710", 
                "html_url": "https://github.com/atom/atom/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "74a5b4cee163baf07a5b48591a07fd0073a02710", 
                "size": 5089, 
                "type": "file", 
                "url": "https://api.github.com/repos/atom/atom/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2012-01-20T18:18:21Z", 
                "language": "CoffeeScript", 
                "owner": {
                    "avatar_url": "https://avatars1.githubusercontent.com/u/1089146?v=3", 
                    "events_url": "https://api.github.com/users/atom/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/atom/followers", 
                    "following_url": "https://api.github.com/users/atom/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/atom/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/atom", 
                    "id": 1089146, 
                    "login": "atom", 
                    "organizations_url": "https://api.github.com/users/atom/orgs", 
                    "received_events_url": "https://api.github.com/users/atom/received_events", 
                    "repos_url": "https://api.github.com/users/atom/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/atom/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/atom/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/atom"
                }, 
                "pushed_at": "2017-04-25T21:51:51Z", 
                "stargazers_count": 36391, 
                "updated_at": "2017-04-26T02:58:38Z", 
                "watchers_count": 36391
            }
        }, 
        "blueimp/jQuery-File-Upload": {
            "dockerfile": {
                "/server/php/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "php:7.0-apache"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load", 
                        "ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load", 
                        "DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends libpng-dev libjpeg-dev libmagickwand-dev imagemagick && pecl install imagick && docker-php-ext-enable imagick && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ && docker-php-ext-install gd # Uninstall obsolete packages:"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/blueimp/jQuery-File-Upload/git/blobs/56785b8479e1d4ea6fa2aaa81949b051758c2477", 
                    "html": "https://github.com/blueimp/jQuery-File-Upload/blob/master/README.md", 
                    "self": "https://api.github.com/repos/blueimp/jQuery-File-Upload/contents/README.md?ref=master"
                }, 
                "content": "IyBqUXVlcnkgRmlsZSBVcGxvYWQgUGx1Z2luCgojIyBEZW1vCltEZW1vIEZp\nbGUgVXBsb2FkXShodHRwczovL2JsdWVpbXAuZ2l0aHViLmlvL2pRdWVyeS1G\naWxlLVVwbG9hZC8pCgojIyBEZXNjcmlwdGlvbgpGaWxlIFVwbG9hZCB3aWRn\nZXQgd2l0aCBtdWx0aXBsZSBmaWxlIHNlbGVjdGlvbiwgZHJhZyZhbXA7ZHJv\ncCBzdXBwb3J0LCBwcm9ncmVzcyBiYXJzLCB2YWxpZGF0aW9uIGFuZCBwcmV2\naWV3IGltYWdlcywgYXVkaW8gYW5kIHZpZGVvIGZvciBqUXVlcnkuICAKU3Vw\ncG9ydHMgY3Jvc3MtZG9tYWluLCBjaHVua2VkIGFuZCByZXN1bWFibGUgZmls\nZSB1cGxvYWRzIGFuZCBjbGllbnQtc2lkZSBpbWFnZSByZXNpemluZy4gV29y\na3Mgd2l0aCBhbnkgc2VydmVyLXNpZGUgcGxhdGZvcm0gKFBIUCwgUHl0aG9u\nLCBSdWJ5IG9uIFJhaWxzLCBKYXZhLCBOb2RlLmpzLCBHbyBldGMuKSB0aGF0\nIHN1cHBvcnRzIHN0YW5kYXJkIEhUTUwgZm9ybSBmaWxlIHVwbG9hZHMuCgoj\nIyBTZXR1cAoqIFtIb3cgdG8gc2V0dXAgdGhlIHBsdWdpbiBvbiB5b3VyIHdl\nYnNpdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9ibHVlaW1wL2pRdWVyeS1GaWxl\nLVVwbG9hZC93aWtpL1NldHVwKQoqIFtIb3cgdG8gdXNlIG9ubHkgdGhlIGJh\nc2ljIHBsdWdpbiAobWluaW1hbCBzZXR1cCBndWlkZSkuXShodHRwczovL2dp\ndGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmlsZS1VcGxvYWQvd2lraS9CYXNp\nYy1wbHVnaW4pCgojIyBGZWF0dXJlcwoqICoqTXVsdGlwbGUgZmlsZSB1cGxv\nYWQ6KiogIAogIEFsbG93cyB0byBzZWxlY3QgbXVsdGlwbGUgZmlsZXMgYXQg\nb25jZSBhbmQgdXBsb2FkIHRoZW0gc2ltdWx0YW5lb3VzbHkuCiogKipEcmFn\nICYgRHJvcCBzdXBwb3J0OioqICAKICBBbGxvd3MgdG8gdXBsb2FkIGZpbGVz\nIGJ5IGRyYWdnaW5nIHRoZW0gZnJvbSB5b3VyIGRlc2t0b3Agb3IgZmlsZW1h\nbmFnZXIgYW5kIGRyb3BwaW5nIHRoZW0gb24geW91ciBicm93c2VyIHdpbmRv\ndy4KKiAqKlVwbG9hZCBwcm9ncmVzcyBiYXI6KiogIAogIFNob3dzIGEgcHJv\nZ3Jlc3MgYmFyIGluZGljYXRpbmcgdGhlIHVwbG9hZCBwcm9ncmVzcyBmb3Ig\naW5kaXZpZHVhbCBmaWxlcyBhbmQgZm9yIGFsbCB1cGxvYWRzIGNvbWJpbmVk\nLgoqICoqQ2FuY2VsYWJsZSB1cGxvYWRzOioqICAKICBJbmRpdmlkdWFsIGZp\nbGUgdXBsb2FkcyBjYW4gYmUgY2FuY2VsZWQgdG8gc3RvcCB0aGUgdXBsb2Fk\nIHByb2dyZXNzLgoqICoqUmVzdW1hYmxlIHVwbG9hZHM6KiogIAogIEFib3J0\nZWQgdXBsb2FkcyBjYW4gYmUgcmVzdW1lZCB3aXRoIGJyb3dzZXJzIHN1cHBv\ncnRpbmcgdGhlIEJsb2IgQVBJLgoqICoqQ2h1bmtlZCB1cGxvYWRzOioqICAK\nICBMYXJnZSBmaWxlcyBjYW4gYmUgdXBsb2FkZWQgaW4gc21hbGxlciBjaHVu\na3Mgd2l0aCBicm93c2VycyBzdXBwb3J0aW5nIHRoZSBCbG9iIEFQSS4KKiAq\nKkNsaWVudC1zaWRlIGltYWdlIHJlc2l6aW5nOioqICAKICBJbWFnZXMgY2Fu\nIGJlIGF1dG9tYXRpY2FsbHkgcmVzaXplZCBvbiBjbGllbnQtc2lkZSB3aXRo\nIGJyb3dzZXJzIHN1cHBvcnRpbmcgdGhlIHJlcXVpcmVkIEpTIEFQSXMuCiog\nKipQcmV2aWV3IGltYWdlcywgYXVkaW8gYW5kIHZpZGVvOioqICAKICBBIHBy\nZXZpZXcgb2YgaW1hZ2UsIGF1ZGlvIGFuZCB2aWRlbyBmaWxlcyBjYW4gYmUg\nZGlzcGxheWVkIGJlZm9yZSB1cGxvYWRpbmcgd2l0aCBicm93c2VycyBzdXBw\nb3J0aW5nIHRoZSByZXF1aXJlZCBBUElzLgoqICoqTm8gYnJvd3NlciBwbHVn\naW5zIChlLmcuIEFkb2JlIEZsYXNoKSByZXF1aXJlZDoqKiAgCiAgVGhlIGlt\ncGxlbWVudGF0aW9uIGlzIGJhc2VkIG9uIG9wZW4gc3RhbmRhcmRzIGxpa2Ug\nSFRNTDUgYW5kIEphdmFTY3JpcHQgYW5kIHJlcXVpcmVzIG5vIGFkZGl0aW9u\nYWwgYnJvd3NlciBwbHVnaW5zLgoqICoqR3JhY2VmdWwgZmFsbGJhY2sgZm9y\nIGxlZ2FjeSBicm93c2VyczoqKiAgCiAgVXBsb2FkcyBmaWxlcyB2aWEgWE1M\nSHR0cFJlcXVlc3RzIGlmIHN1cHBvcnRlZCBhbmQgdXNlcyBpZnJhbWVzIGFz\nIGZhbGxiYWNrIGZvciBsZWdhY3kgYnJvd3NlcnMuCiogKipIVE1MIGZpbGUg\ndXBsb2FkIGZvcm0gZmFsbGJhY2s6KiogIAogIEFsbG93cyBwcm9ncmVzc2l2\nZSBlbmhhbmNlbWVudCBieSB1c2luZyBhIHN0YW5kYXJkIEhUTUwgZmlsZSB1\ncGxvYWQgZm9ybSBhcyB3aWRnZXQgZWxlbWVudC4KKiAqKkNyb3NzLXNpdGUg\nZmlsZSB1cGxvYWRzOioqICAKICBTdXBwb3J0cyB1cGxvYWRpbmcgZmlsZXMg\ndG8gYSBkaWZmZXJlbnQgZG9tYWluIHdpdGggY3Jvc3Mtc2l0ZSBYTUxIdHRw\nUmVxdWVzdHMgb3IgaWZyYW1lIHJlZGlyZWN0cy4KKiAqKk11bHRpcGxlIHBs\ndWdpbiBpbnN0YW5jZXM6KiogIAogIEFsbG93cyB0byB1c2UgbXVsdGlwbGUg\ncGx1Z2luIGluc3RhbmNlcyBvbiB0aGUgc2FtZSB3ZWJwYWdlLgoqICoqQ3Vz\ndG9taXphYmxlIGFuZCBleHRlbnNpYmxlOioqICAKICBQcm92aWRlcyBhbiBB\nUEkgdG8gc2V0IGluZGl2aWR1YWwgb3B0aW9ucyBhbmQgZGVmaW5lIGNhbGxC\nYWNrIG1ldGhvZHMgZm9yIHZhcmlvdXMgdXBsb2FkIGV2ZW50cy4KKiAqKk11\nbHRpcGFydCBhbmQgZmlsZSBjb250ZW50cyBzdHJlYW0gdXBsb2FkczoqKiAg\nCiAgRmlsZXMgY2FuIGJlIHVwbG9hZGVkIGFzIHN0YW5kYXJkICJtdWx0aXBh\ncnQvZm9ybS1kYXRhIiBvciBmaWxlIGNvbnRlbnRzIHN0cmVhbSAoSFRUUCBQ\nVVQgZmlsZSB1cGxvYWQpLgoqICoqQ29tcGF0aWJsZSB3aXRoIGFueSBzZXJ2\nZXItc2lkZSBhcHBsaWNhdGlvbiBwbGF0Zm9ybToqKiAgCiAgV29ya3Mgd2l0\naCBhbnkgc2VydmVyLXNpZGUgcGxhdGZvcm0gKFBIUCwgUHl0aG9uLCBSdWJ5\nIG9uIFJhaWxzLCBKYXZhLCBOb2RlLmpzLCBHbyBldGMuKSB0aGF0IHN1cHBv\ncnRzIHN0YW5kYXJkIEhUTUwgZm9ybSBmaWxlIHVwbG9hZHMuCgojIyBSZXF1\naXJlbWVudHMKCiMjIyBNYW5kYXRvcnkgcmVxdWlyZW1lbnRzCiogW2pRdWVy\neV0oaHR0cHM6Ly9qcXVlcnkuY29tLykgdi4gMS42KwoqIFtqUXVlcnkgVUkg\nd2lkZ2V0IGZhY3RvcnldKGh0dHBzOi8vYXBpLmpxdWVyeXVpLmNvbS9qUXVl\ncnkud2lkZ2V0Lykgdi4gMS45KyAoaW5jbHVkZWQpOiBSZXF1aXJlZCBmb3Ig\ndGhlIGJhc2ljIEZpbGUgVXBsb2FkIHBsdWdpbiwgYnV0IHZlcnkgbGlnaHR3\nZWlnaHQgd2l0aG91dCBhbnkgb3RoZXIgZGVwZW5kZW5jaWVzIGZyb20gdGhl\nIGpRdWVyeSBVSSBzdWl0ZS4KKiBbalF1ZXJ5IElmcmFtZSBUcmFuc3BvcnQg\ncGx1Z2luXShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmls\nZS1VcGxvYWQvYmxvYi9tYXN0ZXIvanMvanF1ZXJ5LmlmcmFtZS10cmFuc3Bv\ncnQuanMpIChpbmNsdWRlZCk6IFJlcXVpcmVkIGZvciBbYnJvd3NlcnMgd2l0\naG91dCBYSFIgZmlsZSB1cGxvYWQgc3VwcG9ydF0oaHR0cHM6Ly9naXRodWIu\nY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBsb2FkL3dpa2kvQnJvd3Nlci1z\ndXBwb3J0KS4KCiMjIyBPcHRpb25hbCByZXF1aXJlbWVudHMKKiBbSmF2YVNj\ncmlwdCBUZW1wbGF0ZXMgZW5naW5lXShodHRwczovL2dpdGh1Yi5jb20vYmx1\nZWltcC9KYXZhU2NyaXB0LVRlbXBsYXRlcykgdi4gMi41LjQrOiBVc2VkIHRv\nIHJlbmRlciB0aGUgc2VsZWN0ZWQgYW5kIHVwbG9hZGVkIGZpbGVzIGZvciB0\naGUgQmFzaWMgUGx1cyBVSSBhbmQgalF1ZXJ5IFVJIHZlcnNpb25zLgoqIFtK\nYXZhU2NyaXB0IExvYWQgSW1hZ2UgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIu\nY29tL2JsdWVpbXAvSmF2YVNjcmlwdC1Mb2FkLUltYWdlKSB2LiAxLjEzLjAr\nOiBSZXF1aXJlZCBmb3IgdGhlIGltYWdlIHByZXZpZXdzIGFuZCByZXNpemlu\nZyBmdW5jdGlvbmFsaXR5LgoqIFtKYXZhU2NyaXB0IENhbnZhcyB0byBCbG9i\nIHBvbHlmaWxsXShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9KYXZhU2Ny\naXB0LUNhbnZhcy10by1CbG9iKSB2LiAyLjEuMSs6UmVxdWlyZWQgZm9yIHRo\nZSBpbWFnZSBwcmV2aWV3cyBhbmQgcmVzaXppbmcgZnVuY3Rpb25hbGl0eS4K\nKiBbYmx1ZWltcCBHYWxsZXJ5XShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWlt\ncC9HYWxsZXJ5KSB2LiAyLjE1LjErOiBVc2VkIHRvIGRpc3BsYXkgdGhlIHVw\nbG9hZGVkIGltYWdlcyBpbiBhIGxpZ2h0Ym94LgoqIFtCb290c3RyYXBdKGh0\ndHA6Ly9nZXRib290c3RyYXAuY29tLykgdi4gMy4yLjArCiogW0dseXBoaWNv\nbnNdKGh0dHA6Ly9nbHlwaGljb25zLmNvbS8pCgpUaGUgdXNlciBpbnRlcmZh\nY2Ugb2YgYWxsIHZlcnNpb25zIGV4Y2VwdCB0aGUgalF1ZXJ5IFVJIHZlcnNp\nb24gaXMgYnVpbHQgd2l0aCBbQm9vdHN0cmFwXShodHRwOi8vZ2V0Ym9vdHN0\ncmFwLmNvbS8pIGFuZCBpY29ucyBmcm9tIFtHbHlwaGljb25zXShodHRwOi8v\nZ2x5cGhpY29ucy5jb20vKS4KCiMjIyBDcm9zcy1kb21haW4gcmVxdWlyZW1l\nbnRzCltDcm9zcy1kb21haW4gRmlsZSBVcGxvYWRzXShodHRwczovL2dpdGh1\nYi5jb20vYmx1ZWltcC9qUXVlcnktRmlsZS1VcGxvYWQvd2lraS9Dcm9zcy1k\nb21haW4tdXBsb2FkcykgdXNpbmcgdGhlIFtJZnJhbWUgVHJhbnNwb3J0IHBs\ndWdpbl0oaHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUt\nVXBsb2FkL2Jsb2IvbWFzdGVyL2pzL2pxdWVyeS5pZnJhbWUtdHJhbnNwb3J0\nLmpzKSByZXF1aXJlIGEgcmVkaXJlY3QgYmFjayB0byB0aGUgb3JpZ2luIHNl\ncnZlciB0byByZXRyaWV2ZSB0aGUgdXBsb2FkIHJlc3VsdHMuIFRoZSBbZXhh\nbXBsZSBpbXBsZW1lbnRhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2JsdWVp\nbXAvalF1ZXJ5LUZpbGUtVXBsb2FkL2Jsb2IvbWFzdGVyL2pzL21haW4uanMp\nIG1ha2VzIHVzZSBvZiBbcmVzdWx0Lmh0bWxdKGh0dHBzOi8vZ2l0aHViLmNv\nbS9ibHVlaW1wL2pRdWVyeS1GaWxlLVVwbG9hZC9ibG9iL21hc3Rlci9jb3Jz\nL3Jlc3VsdC5odG1sKSBhcyBhIHN0YXRpYyByZWRpcmVjdCBwYWdlIGZvciB0\naGUgb3JpZ2luIHNlcnZlci4KClRoZSByZXBvc2l0b3J5IGFsc28gaW5jbHVk\nZXMgdGhlIFtqUXVlcnkgWERvbWFpblJlcXVlc3QgVHJhbnNwb3J0IHBsdWdp\nbl0oaHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBs\nb2FkL2Jsb2IvbWFzdGVyL2pzL2NvcnMvanF1ZXJ5Lnhkci10cmFuc3BvcnQu\nanMpLCB3aGljaCBlbmFibGVzIGxpbWl0ZWQgY3Jvc3MtZG9tYWluIEFKQVgg\ncmVxdWVzdHMgaW4gTWljcm9zb2Z0IEludGVybmV0IEV4cGxvcmVyIDggYW5k\nIDkgKElFIDEwIHN1cHBvcnRzIGNyb3NzLWRvbWFpbiBYSFIgcmVxdWVzdHMp\nLiAgClRoZSBYRG9tYWluUmVxdWVzdCBvYmplY3QgYWxsb3dzIEdFVCBhbmQg\nUE9TVCByZXF1ZXN0cyBvbmx5IGFuZCBkb2Vzbid0IHN1cHBvcnQgZmlsZSB1\ncGxvYWRzLiBJdCBpcyB1c2VkIG9uIHRoZSBbRGVtb10oaHR0cHM6Ly9ibHVl\naW1wLmdpdGh1Yi5pby9qUXVlcnktRmlsZS1VcGxvYWQvKSB0byBkZWxldGUg\ndXBsb2FkZWQgZmlsZXMgZnJvbSB0aGUgY3Jvc3MtZG9tYWluIGRlbW8gZmls\nZSB1cGxvYWQgc2VydmljZS4KCiMjIyBDdXN0b20gQmFja2VuZHMKCllvdSBj\nYW4gYWRkIHN1cHBvcnQgZm9yIHZhcmlvdXMgYmFja2VuZHMgYnkgYWRoZXJp\nbmcgdG8gdGhlIHNwZWNpZmljYXRpb24gW291dGxpbmVkIGhlcmVdKGh0dHBz\nOi8vZ2l0aHViLmNvbS9ibHVlaW1wL2pRdWVyeS1GaWxlLVVwbG9hZC93aWtp\nL0pTT04tUmVzcG9uc2UpLgoKIyMgQnJvd3NlcnMKCiMjIyBEZXNrdG9wIGJy\nb3dzZXJzClRoZSBGaWxlIFVwbG9hZCBwbHVnaW4gaXMgcmVndWxhcmx5IHRl\nc3RlZCB3aXRoIHRoZSBsYXRlc3QgYnJvd3NlciB2ZXJzaW9ucyBhbmQgc3Vw\ncG9ydHMgdGhlIGZvbGxvd2luZyBtaW5pbWFsIHZlcnNpb25zOgoKKiBHb29n\nbGUgQ2hyb21lCiogQXBwbGUgU2FmYXJpIDQuMCsKKiBNb3ppbGxhIEZpcmVm\nb3ggMy4wKwoqIE9wZXJhIDExLjArCiogTWljcm9zb2Z0IEludGVybmV0IEV4\ncGxvcmVyIDYuMCsKCiMjIyBNb2JpbGUgYnJvd3NlcnMKVGhlIEZpbGUgVXBs\nb2FkIHBsdWdpbiBoYXMgYmVlbiB0ZXN0ZWQgd2l0aCBhbmQgc3VwcG9ydHMg\ndGhlIGZvbGxvd2luZyBtb2JpbGUgYnJvd3NlcnM6CgoqIEFwcGxlIFNhZmFy\naSBvbiBpT1MgNi4wKwoqIEdvb2dsZSBDaHJvbWUgb24gaU9TIDYuMCsKKiBH\nb29nbGUgQ2hyb21lIG9uIEFuZHJvaWQgNC4wKwoqIERlZmF1bHQgQnJvd3Nl\nciBvbiBBbmRyb2lkIDIuMysKKiBPcGVyYSBNb2JpbGUgMTIuMCsKCiMjIyBT\ndXBwb3J0ZWQgZmVhdHVyZXMKRm9yIGEgZGV0YWlsZWQgb3ZlcnZpZXcgb2Yg\ndGhlIGZlYXR1cmVzIHN1cHBvcnRlZCBieSBlYWNoIGJyb3dzZXIgdmVyc2lv\nbiwgcGxlYXNlIGhhdmUgYSBsb29rIGF0IHRoZSBbRXh0ZW5kZWQgYnJvd3Nl\nciBzdXBwb3J0IGluZm9ybWF0aW9uXShodHRwczovL2dpdGh1Yi5jb20vYmx1\nZWltcC9qUXVlcnktRmlsZS1VcGxvYWQvd2lraS9Ccm93c2VyLXN1cHBvcnQp\nLgoKIyMgQ29udHJpYnV0aW5nCioqQnVnIGZpeGVzKiogYW5kICoqbmV3IGZl\nYXR1cmVzKiogY2FuIGJlIHByb3Bvc2VkIHVzaW5nIFtwdWxsIHJlcXVlc3Rz\nXShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmlsZS1VcGxv\nYWQvcHVsbHMpLgpQbGVhc2UgcmVhZCB0aGUgW2NvbnRyaWJ1dGlvbiBndWlk\nZWxpbmVzXShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmls\nZS1VcGxvYWQvYmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kKSBiZWZvcmUg\nc3VibWl0dGluZyBhIHB1bGwgcmVxdWVzdC4KCiMjIFN1cHBvcnQKVGhpcyBw\ncm9qZWN0IGlzIGFjdGl2ZWx5IG1haW50YWluZWQsIGJ1dCB0aGVyZSBpcyBu\nbyBvZmZpY2lhbCBzdXBwb3J0IGNoYW5uZWwuICAKSWYgeW91IGhhdmUgYSBx\ndWVzdGlvbiB0aGF0IGFub3RoZXIgZGV2ZWxvcGVyIG1pZ2h0IGhlbHAgeW91\nIHdpdGgsIHBsZWFzZSBwb3N0IHRvIFtTdGFjayBPdmVyZmxvd10oaHR0cDov\nL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy90YWdnZWQvYmx1ZWltcCtq\ncXVlcnkrZmlsZS11cGxvYWQpIGFuZCB0YWcgeW91ciBxdWVzdGlvbiB3aXRo\nIGBibHVlaW1wIGpxdWVyeSBmaWxlIHVwbG9hZGAuCgojIyBMaWNlbnNlClJl\nbGVhc2VkIHVuZGVyIHRoZSBbTUlUIGxpY2Vuc2VdKGh0dHBzOi8vb3BlbnNv\ndXJjZS5vcmcvbGljZW5zZXMvTUlUKS4K\n", 
                "download_url": "https://raw.githubusercontent.com/blueimp/jQuery-File-Upload/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/blueimp/jQuery-File-Upload/git/blobs/56785b8479e1d4ea6fa2aaa81949b051758c2477", 
                "html_url": "https://github.com/blueimp/jQuery-File-Upload/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "56785b8479e1d4ea6fa2aaa81949b051758c2477", 
                "size": 7134, 
                "type": "file", 
                "url": "https://api.github.com/repos/blueimp/jQuery-File-Upload/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2010-12-01T15:35:32Z", 
                "language": "JavaScript", 
                "owner": {
                    "avatar_url": "https://avatars1.githubusercontent.com/u/244586?v=3", 
                    "events_url": "https://api.github.com/users/blueimp/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/blueimp/followers", 
                    "following_url": "https://api.github.com/users/blueimp/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/blueimp/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/blueimp", 
                    "id": 244586, 
                    "login": "blueimp", 
                    "organizations_url": "https://api.github.com/users/blueimp/orgs", 
                    "received_events_url": "https://api.github.com/users/blueimp/received_events", 
                    "repos_url": "https://api.github.com/users/blueimp/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/blueimp/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/blueimp/subscriptions", 
                    "type": "User", 
                    "url": "https://api.github.com/users/blueimp"
                }, 
                "pushed_at": "2017-03-28T14:44:45Z", 
                "stargazers_count": 26509, 
                "updated_at": "2017-04-26T02:50:14Z", 
                "watchers_count": 26509
            }
        }, 
        "getlantern/lantern": {
            "dockerfile": {
                "/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "WORKDIR /lantern", 
                        "SECRETS /secrets", 
                        "GOROOT /usr/local/go", 
                        "GOPATH /", 
                        "PATH $PATH:$GOROOT/bin", 
                        "GO_PACKAGE_URL https://s3-eu-west-1.amazonaws.com/uaalto/go1.6.2_lantern_20160503_linux_amd64.tar.gz"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora:21"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "\"The Lantern Team\" <team@getlantern.org>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir -p $WORKDIR", 
                        "mkdir -p $SECRETS", 
                        "yum install -y deltarpm && yum update -y && yum clean packages", 
                        "yum install -y git tar gzip curl hostname && yum clean packages", 
                        "yum install -y gcc gcc-c++ libgcc.i686 gcc-c++.i686 pkg-config && yum clean packages", 
                        "yum install -y glibc-devel glibc-static && yum clean packages", 
                        "yum install -y glibc-devel.i686 glib2-static.i686 glibc-2.20-8.fc21.i686 libgcc.i686 && yum clean packages", 
                        "yum install -y yum-utils && rpm --import https://copr-be.cloud.fedoraproject.org/results/lantw44/arm-linux-gnueabi-toolchain/pubkey.gpg && yum-config-manager --add-repo=https://copr.fedoraproject.org/coprs/lantw44/arm-linux-gnueabi-toolchain/repo/fedora-21/lantw44-arm-linux-gnueabi-toolchain-fedora-21.repo && yum install -y arm-linux-gnueabi-gcc arm-linux-gnueabi-binutils arm-linux-gnueabi-glibc && yum clean packages", 
                        "yum install -y mingw32-gcc.x86_64 && yum clean packages", 
                        "yum install -y gtk3-devel libappindicator-gtk3 libappindicator-gtk3-devel && yum clean packages", 
                        "yum install -y pango.i686 pango-devel.i686 gtk3-devel.i686 gdk-pixbuf2-devel.i686 cairo-gobject-devel.i686 atk-devel.i686 libappindicator-gtk3-devel.i686 libdbusmenu-devel.i686 dbus-devel.i686 pkgconfig.i686 && yum clean packages", 
                        "yum install -y ruby ruby-devel make && yum clean packages", 
                        "gem install fpm", 
                        "yum install -y osslsigncode mingw32-nsis && yum clean packages", 
                        "yum install -y bzip2 && yum clean packages", 
                        "curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -", 
                        "yum -y install nodejs && yum clean packages", 
                        "npm install -g gulp", 
                        "curl -sSL $GO_PACKAGE_URL | tar -xvzf - -C /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/lantern", 
                        "volume to be mounted.", 
                        "$WORKDIR"
                    ]
                }, 
                "/src/golang.org/x/net/http2/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"-h\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/curl\"]"
                    ], 
                    "ENV": [
                        "NGHTTP2_VER 895da9a"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get upgrade -y && apt-get install -y git-core build-essential wget", 
                        "apt-get install -y --no-install-recommends autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libevent-dev automake autoconf", 
                        "apt-get install -y --no-install-recommends make binutils autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev libjemalloc-dev cython python3.4-dev python-setuptools", 
                        "cd /root && git clone https://github.com/tatsuhiro-t/nghttp2.git", 
                        "git reset --hard $NGHTTP2_VER", 
                        "autoreconf -i", 
                        "automake", 
                        "autoconf", 
                        "./configure", 
                        "make", 
                        "make install", 
                        "wget http://curl.haxx.se/download/curl-7.45.0.tar.gz", 
                        "tar -zxvf curl-7.45.0.tar.gz", 
                        "./configure --with-ssl --with-nghttp2=/usr/local", 
                        "make", 
                        "make install", 
                        "ldconfig"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/root/nghttp2", 
                        "/root", 
                        "/root/curl-7.45.0"
                    ]
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/getlantern/lantern/git/blobs/ea7fb53e96b50275f77126b8f732382215f645a0", 
                    "html": "https://github.com/getlantern/lantern/blob/devel/README.md", 
                    "self": "https://api.github.com/repos/getlantern/lantern/contents/README.md?ref=devel"
                }, 
                "content": "IyBsYW50ZXJuIFshW1RyYXZpcyBDSSBTdGF0dXNdKGh0dHBzOi8vdHJhdmlz\nLWNpLm9yZy9nZXRsYW50ZXJuL2xhbnRlcm4uc3ZnP2JyYW5jaD1kZXZlbCld\nKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9nZXRsYW50ZXJuL2xhbnRlcm4pJm5i\nc3A7WyFbQ292ZXJhZ2UgU3RhdHVzXShodHRwczovL2NvdmVyYWxscy5pby9y\nZXBvcy9nZXRsYW50ZXJuL2xhbnRlcm4vYmFkZ2UucG5nP2JyYW5jaD1kZXZl\nbCldKGh0dHBzOi8vY292ZXJhbGxzLmlvL3IvZ2V0bGFudGVybi9sYW50ZXJu\nKQoKIyMgW/CflLTok53nga8oTGFudGVybinmnIDmlrDniYjkuIvovb3ngrno\nv5nph4zwn5S0XShodHRwczovL2dpdGh1Yi5jb20vZ2V0bGFudGVybi9mb3J1\nbS9pc3N1ZXMvODMzKQoKKipJZiB5b3UncmUgbG9va2luZyBmb3IgTGFudGVy\nbiBpbnN0YWxsZXJzLCB5b3UgY2FuIGZpbmQgYWxsIG9mIHRoZW0gYXQgdGhl\nIGZvbGxvd2luZyBsaW5rczoqKgotIFtBbmRyb2lkXShodHRwczovL3Jhdy5n\naXRodWJ1c2VyY29udGVudC5jb20vZ2V0bGFudGVybi9sYW50ZXJuLWJpbmFy\naWVzL21hc3Rlci9sYW50ZXJuLWluc3RhbGxlci1iZXRhLmFwaykKLSBbV2lu\nZG93cyBYUCBTUCAzIGFuZCBhYm92ZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNl\ncmNvbnRlbnQuY29tL2dldGxhbnRlcm4vbGFudGVybi1iaW5hcmllcy9tYXN0\nZXIvbGFudGVybi1pbnN0YWxsZXItYmV0YS5leGUpCi0gW09TWCAxMC44IGFu\nZCBhYm92ZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2dl\ndGxhbnRlcm4vbGFudGVybi1iaW5hcmllcy9tYXN0ZXIvbGFudGVybi1pbnN0\nYWxsZXItYmV0YS5kbWcpCi0gW1VidW50dSAxNC4wNCAzMiBiaXRdKGh0dHBz\nOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9nZXRsYW50ZXJuL2xhbnRl\ncm4tYmluYXJpZXMvbWFzdGVyL2xhbnRlcm4taW5zdGFsbGVyLWJldGEtMzIt\nYml0LmRlYikKLSBbVWJ1bnR1IDE0LjA0IDY0IGJpdF0oaHR0cHM6Ly9yYXcu\nZ2l0aHVidXNlcmNvbnRlbnQuY29tL2dldGxhbnRlcm4vbGFudGVybi1iaW5h\ncmllcy9tYXN0ZXIvbGFudGVybi1pbnN0YWxsZXItYmV0YS02NC1iaXQuZGVi\nKQoKKipJZiB5b3UncmUgbG9va2luZyBmb3IgaGVscCwgcGxlYXNlIHZpc2l0\nIGJlbG93IHVzZXIgZm9ydW1zOioqCgp8IFtFbmdsaXNoXShodHRwczovL2dy\nb3Vwcy5nb29nbGUuY29tL2ZvcnVtLyMhZm9ydW0vbGFudGVybi11c2Vycy1l\nbikgfCBb5Lit5paHXShodHRwczovL2dpdGh1Yi5jb20vZ2V0bGFudGVybi9m\nb3J1bSkgfCBb2YHYp9ix2LPbjF0oaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNv\nbS9mb3J1bS8jIWZvcnVtL2xhbnRlcm4tdXNlcnMtZmEpIHwgW2ZyYW7Dp2Fp\nc10oaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9mb3J1bS8jIWZvcnVtL2xh\nbnRlcm4tdXNlcnMtZnIpCgojIyBCdWlsZGluZyBMYW50ZXJuCgojIyMgUHJl\ncmVxdWlzaXRlcwoKKiBbQ3VzdG9tIGZvcmsgb2YgR29dKGh0dHBzOi8vZ2l0\naHViLmNvbS9nZXRsYW50ZXJuL2dvL3RyZWUvbGFudGVybikgaXMKICBjdXJy\nZW50bHkgcmVxdWlyZWQuIFdlJ2xsIGV2ZW50dWFsbHkgc3dpdGNoIHRvIEdv\nIDEuNyB3aGljaCBzdXBwb3J0cyB3aGF0IHdlCiAgbmVlZCBkdWUgdG8gW3Ro\naXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmcvZ28vaXNzdWVzLzEzOTk4\nKS4KKiBBbiBPU1ggb3IgTGludXggaG9zdC4gQnVpbGRpbmcgb24gV2luZG93\ncyBpcyBvbmx5IHBhcnRpYWxseSBzdXBwb3J0ZWQgd2l0aAogIHRoZSBoZWxw\nIG9mIFtDeWd3aW5dKGh0dHBzOi8vd3d3LmN5Z3dpbi5jb20vKS4KKiBbR2l0\nXShodHRwczovL2dpdC1zY20uY29tL2Rvd25sb2FkcykgLSBgYnJldyBpbnN0\nYWxsIGdpdGAsIGBhcHQtZ2V0IGluc3RhbGwgZ2l0YCwgZXRjCiogW0dOVSBN\nYWtlXShodHRwczovL3d3dy5nbnUub3JnL3NvZnR3YXJlL21ha2UvKQoqIFtO\nb2RlanMgJiBOUE1dKGh0dHBzOi8vbm9kZWpzLm9yZy9lbi9kb3dubG9hZC9w\nYWNrYWdlLW1hbmFnZXIvKQoqIEdOVSBDIExpYnJhcnkgKGxpbnV4IG9ubHkp\nIC0gYGFwdC1nZXQgaW5zdGFsbCBsaWJjNi1kZXYtaTM4NmAsIGV0YwoqIFtH\ndWxwXShodHRwOi8vZ3VscGpzLmNvbS8pIC0gYG5wbSBpIGd1bHAtY2xpIC1n\nYAoKVG8gYnVpbGQgYW5kIHJ1biBMYW50ZXJuIGRlc2t0b3AsIGp1c3QgZG86\nCgpgYGBzaApnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL2dldGxhbnRl\ncm4vbGFudGVybi5naXQKY2QgbGFudGVybgptYWtlIGxhbnRlcm4KLi9sYW50\nZXJuCmBgYAoKRHVyaW5nIGRldmVsb3BtZW50LCB5b3UnbGwgbGlrZWx5IHdh\nbnQgdG8gZG8gYSBjbGVhbiBidWlsZCBsaWtlIHRoaXM6CgpgYGBzaAptYWtl\nIGNsZWFuLWRlc2t0b3AgbGFudGVybiAmJiAuL2xhbnRlcm4KYGBgCgojIyBC\ndWlsZGluZyBNb2JpbGUKCiMjIyBNb2JpbGUgUHJlcmVxdWlzaXRlcwoKQnVp\nbGRpbmcgdGhlIG1vYmlsZSBsaWJyYXJ5IGFuZCBhcHAgcmVxdWlyZXMgdGhl\nIGZvbGxvd2luZzoKCjEuIEluc3RhbGwgSmF2YSBKREsgNyBvciA4CjIuIElu\nc3RhbGwgR28gMS42IG9yIGhpZ2hlcgozLiBJbnN0YWxsIFtBbmRyb2lkIFNE\nSyBUb29sc10oaHR0cDovL2RldmVsb3Blci5hbmRyb2lkLmNvbS9zZGsvaW5k\nZXguaHRtbCNPdGhlcikKNC4gSW5zdGFsbCBbTkRLXShodHRwOi8vZGV2ZWxv\ncGVyLmFuZHJvaWQuY29tL25kay9kb3dubG9hZHMvaW5kZXguaHRtbCkKNS4g\nSW5zdGFsbCBbR3JhZGxlXShodHRwOi8vZ3JhZGxlLm9yZy8pCgpNYWtlIHN1\ncmUgdG8gc2V0IHRoZXNlIGVudmlyb25tZW50IHZhcmlhYmxlcyBiZWZvcmUg\ndHJ5aW5nIHRvIGJ1aWxkIGFueSBBbmRyb2lkCmNvbXBvbmVudHMgKHJlcGxh\nY2UgdGhlIHBhdGhzIGJhc2VkIG9uIHdoZXJldmVyIHlvdSd2ZSBpbnN0YWxs\nZWQgdGhlIEFuZHJvaWQKU0RLIGFuZCBOREspLgoKYGBgYmFzaApleHBvcnQg\nQU5EUk9JRF9IT01FPS9vcHQvYWR0LWJ1bmRsZS1tYWMteDg2XzY0LTIwMTMw\nOTE3L3NkawpleHBvcnQgUEFUSD0kQU5EUk9JRF9IT01FL3Rvb2xzOiRBTkRS\nT0lEX0hPTUUvcGxhdGZvcm0tdG9vbHM6JEFORFJPSURfSE9NRS9idWlsZC10\nb29sczokUEFUSApleHBvcnQgTkRLX0hPTUU9L29wdC9hbmRyb2lkLW5kay1y\nMTBlCmV4cG9ydCBQQVRIPSROREtfSE9NRTokUEFUSApgYGAKCiMjIyBHbyBB\nbmRyb2lkIExpYnJhcnkKClRoZSBjb3JlIExhbnRlcm4gZnVuY3Rpb25hbGl0\neSBjYW4gYmUgcGFja2FnZWQgaW50byBhIG5hdGl2ZSBBbmRyb2lkIGxpYnJh\ncnkKd2l0aDoKCmBgYAptYWtlIGFuZHJvaWQtbGliCmBgYAoKIyMjIEphdmEg\nQW5kcm9pZCBTREsKClRoZSBKYXZhLWJhc2VkIEFuZHJvaWQgU0RLIGFsbG93\ncyBlYXN5IGVtYmVkZGluZyBvZiBMYW50ZXJuIGZ1bmN0aW9uYWxpdHkgaW4g\nM3JkCnBhcnR5IEFuZHJvaWQgYXBwcyBzdWNoIGFzIE1hbm90byBUVi4gVGhl\nIFNESyBjYW4gYmUgYnVpbHQgd2l0aDoKCmBgYAptYWtlIGFuZHJvaWQtc2Rr\nCmBgYAoKIyMjIExhbnRlcm4gTW9iaWxlIFRlc3RiZWQKClRoaXMgc2ltcGxl\nIEFuZHJvaWQgYXBwbGljYXRpb24gcHJvdmlkZXMgYSB3YXkgdG8gdGVzdCB0\naGUgQW5kcm9pZCBTREsuIEl0IGNhbgpiZSBidWlsdCB3aXRoOgoKYGBgCm1h\na2UgYW5kcm9pZC10ZXN0YmVkCmBgYAoKIyMjIExhbnRlcm4gTW9iaWxlIEFw\ncAoKCiMjIERlYnVnCgpUbyBjcmVhdGUgYSBkZWJ1ZyBidWlsZCBvZiB0aGUg\nZnVsbCBsYW50ZXJuIG1vYmlsZSBhcHA6CgpgYGAKbWFrZSBhbmRyb2lkLWRl\nYnVnCmBgYAoKVG8gaW5zdGFsbCBvbiB0aGUgZGVmYXVsdCBkZXZpY2U6Cgpg\nYGAKbWFrZSBhbmRyb2lkLWluc3RhbGwKYGBgCgojIyBSZWxlYXNlCgpUbyBj\ncmVhdGUgYSByZWxlYXNlIGJ1aWxkLCBhZGQgdGhlIGZvbGxvd2luZyB0byB5\nb3VyCmBgfi8uZ3JhZGxlL2dyYWRsZS5wcm9wZXJ0aWVzYGAgZmlsZToKCmBg\nYApLRVlTVE9SRV9QV0Q9JEtFWVNUT1JFX1BBU1NXT1JECktFWVNUT1JFX0ZJ\nTEU9a2V5c3RvcmUucmVsZWFzZS5qa3MKS0VZX1BXRD0kS0VZX1BBU1NXT1JE\nCmBgYAoKWW91IGNhbiBmaW5kIHRoZSBleGFjdCB2YWx1ZXMgdG8gYWRkIHRv\nIHlvdXIgZ3JhZGxlLnByb3BlcnRpZXMKW2hlcmVdKGh0dHBzOi8vZ2l0aHVi\nLmNvbS9nZXRsYW50ZXJuL3Rvby1tYW55LXNlY3JldHMvYmxvYi9tYXN0ZXIv\nYW5kcm9pZC9rZXlzdG9yZSkuCgpUaGVuIGl0IGNhbiBiZSBidWlsdCB3aXRo\nOgoKYGBgc2gKU0VDUkVUU19ESVI9JFBBVEhfVE9fVE9PX01BTllfU0VDUkVU\nUyBcClZFUlNJT049Mi4wLjAtYmV0YTEgbWFrZSBhbmRyb2lkLXJlbGVhc2UK\nYGBgCgojIyMgQW5kcm9pZCBUaXBzCiMjIyMgQW5kcm9pZCBTdHVkaW8KVG8g\nZ2V0IHRoZSBidWlsZCB3b3JraW5nIGZvciBBbmRyb2lkIFN0dWRpbywgeW91\nJ2xsIHdhbnQgdG8gYWRkIHRoZSBmb2xsb3dpbmcKZHVtbXkgdmFsdWVzIHRv\nIHlvdXIgYGB+Ly5ncmFkbGUvZ3JhZGxlLnByb3BlcnRpZXNgYCBmaWxlOgoK\nYGBgCmxhbnRlcm5SZXZpc2lvbkRhdGU9IkFwcmlsIDI2LCAyMDE2IgpsYW50\nZXJuVmVyc2lvbj0yLjIuMQpgYGAKCiMjIyMgVW5pbnN0YWxsIGZvciBBbGwg\nVXNlcnMKSWYgeW91IHVzZSBgYWRiYCB0byBpbnN0YWxsIGFuZCBkZWJ1ZyBh\nbiBhcHAgdG8geW91ciBBbmRyb2lkIGRldmljZSBkdXJpbmcKZGV2ZWxvcG1l\nbnQgYW5kIHRoZW4gc3Vic2VxdWVudGx5IGJ1aWxkIGEgc2lnbmVkIEFQSyBh\nbmQgdHJ5IHRvIGluc3RhbGwgaXQgb24KdGhhdCBzYW1lIGRldmljZSwgeW91\nIG1heSByZWNlaXZlIGFuIHVuaGVscGZ1bCBlcnJvciBzYXlpbmcgIkFwcCBO\nb3QgSW5zdGFsbGVkIi4KVGhpcyB0eXBpY2FsbHkgbWVhbnMgdGhhdCB5b3Ug\ndHJpZWQgdG8gaW5zdGFsbCB0aGUgc2FtZSBhcHAgYnV0IHNpZ25lZCB3aXRo\nIGEKZGlmZmVyZW50IGtleS4gIFRoZSBzb2x1dGlvbiBpcyB0byB1bmluc3Rh\nbGwgdGhlIGFwcCBmaXJzdCwgYnV0ICoqeW91IGhhdmUgdG8KdW5pbnN0YWxs\nIGl0IGZvciBhbGwgdXNlcnMqKi4gWW91IGNhbiBkbyB0aGlzIGJ5IHNlbGVj\ndGluZyAiVW5pbnN0YWxsIGZvciBhbGwKdXNlcnMiIGZyb206CgpgYGAKU2V0\ndGluZ3MgLT4gQXBwcyAtPiBbUGljayB0aGUgQXBwXSAtPiBIYW1idXJnZXIg\nTWVudSAoLi4uKSAtPiBVbmluc3RhbGwgZm9yIGFsbCB1c2Vycy4KYGBgCgpJ\nZiB5b3UgZm9yZ2V0IHRvIGRvIHRoaXMgYW5kIGp1c3QgdW5pbnN0YWxsIG5v\ncm1hbGx5LCB5b3UnbGwgc3RpbGwgZW5jb3VudGVyIHRoZQplcnJvci4gVG8g\nZml4IHRoaXMsIHlvdSdsbCBoYXZlIHRvIHJ1biB0aGUgYXBwIHdpdGggYGFk\nYmAgYWdhaW4gYW5kIHRoZW4KdW5pbnN0YWxsIGZvciBhbGwgdXNlcnMuCgoj\nIyMjIEdldHRpbmcgSFRUUCBDb25uZWN0aW9ucyB0byBVc2UgUHJveHkKCklu\nIGFuZHJvaWQsIHByb2dyYW1tYXRpYyBhY2Nlc3MgdG8gSFRUUCByZXNvdXJj\nZXMgdHlwaWNhbGx5IHVzZXMgdGhlCmBIdHRwVVJMQ29ubmVjdGlvbmAgY2xh\nc3MuICBZb3UgY2FuIHRlbGwgaXQgdG8gdXNlIGEgcHJveHkgYnkgc2V0dGlu\nZyBzb21lCnN5c3RlbSBwcm9wZXJ0aWVzOgoKYGBgamF2YQpTeXN0ZW0uc2V0\nUHJvcGVydHkoImh0dHAucHJveHlIb3N0IiwgaG9zdCk7ClN5c3RlbS5zZXRQ\ncm9wZXJ0eSgiaHR0cC5wcm94eVBvcnQiLCBwb3J0KTsKU3lzdGVtLnNldFBy\nb3BlcnR5KCJodHRwcy5wcm94eUhvc3QiLCBob3N0KTsKU3lzdGVtLnNldFBy\nb3BlcnR5KCJodHRwcy5wcm94eVBvcnQiLCBwb3J0KTsKYGBgCgpZb3UgY2Fu\nIGRpc2FibGUgcHJveHlpbmcgYnkgY2xlYXJpbmcgdGhvc2UgcHJvcGVydGll\nczoKCmBgYGphdmEKU3lzdGVtLmNsZWFyUHJvcGVydHkoImh0dHAucHJveHlI\nb3N0Iik7ClN5c3RlbS5jbGVhclByb3BlcnR5KCJodHRwLnByb3h5UG9ydCIp\nOwpTeXN0ZW0uY2xlYXJQcm9wZXJ0eSgiaHR0cHMucHJveHlIb3N0Iik7ClN5\nc3RlbS5jbGVhclByb3BlcnR5KCJodHRwcy5wcm94eVBvcnQiKTsKYGBgCgpI\nb3dldmVyLCB0aGVyZSBpcyBvbmUgYmlnIGNhdmVhdCAtICoqYEh0dHBVUkxD\nb25uZWN0aW9uYCB1c2VzIGtlZXAtYWxpdmVzIHRvCnJldXNlIGV4aXN0aW5n\nIFRDUCBjb25uZWN0aW9ucyoqLiBUaGVzZSBUQ1AgY29ubmVjdGlvbnMgd2ls\nbCBzdGlsbCBiZSB1c2luZyB0aGUKb2xkIHByb3h5IHNldHRpbmdzLiBUaGlz\nIGhhcyBzZXZlcmFsIGltcGxpY2F0aW9uczoKCioqU2V0IHRoZSBwcm94eSBz\nZXR0aW5ncyBhcyBlYXJseSBpbiB0aGUgYXBwbGljYXRpb24ncyBsaWZlY3lj\nbGUgYXMgcG9zc2libGUqKiwKaWRlYWxseSBiZWZvcmUgYW55IGBIdHRwVVJM\nQ29ubmVjdGlvbmBzIGhhdmUgYmVlbiBvcGVuZWQuCgoqKkRvbid0IGV4cGVj\ndCB0aGUgc2V0dGluZ3MgdG8gdGFrZSBlZmZlY3QgaW1tZWRpYXRlbHkqKiBp\nZiBzb21lCmBIdHRwVVJMQ29ubmVjdGlvbmBzIGhhdmUgYWxyZWFkeSBiZWVu\nIG9wZW5lZC4KCioqRGlzYWJsZSBrZWVwLWFsaXZlcyBpZiB5b3UgbmVlZCB0\nbyoqLCB3aGljaCB5b3UgY2FuIGRvIGxpa2UgdGhpczoKCmBgYGphdmEKSHR0\ncFVSTENvbm5lY3Rpb24gdXJsQ29ubmVjdGlvbiA9IChIdHRwVVJMQ29ubmVj\ndGlvbikgdXJsLm9wZW5Db25uZWN0aW9uKCk7Ci8vIE5lZWQgdG8gZm9yY2Ug\nY2xvc2luZyBzbyB0aGF0IG9sZCBjb25uZWN0aW9ucyAod2l0aCBvbGQgcHJv\neHkgc2V0dGluZ3MpIGRvbid0IGdldCByZXVzZWQuCnVybENvbm5lY3Rpb24u\nc2V0UmVxdWVzdFByb3BlcnR5KCJDb25uZWN0aW9uIiwgImNsb3NlIik7CmBg\nYAoKIyMgQnVpbGRpbmcgTGFudGVybiBmb3IgcnVubmluZyBvbiBhIHNlcnZl\ncgpUbyBydW4gTGFudGVybiBvbiBhIHNlcnZlciwgeW91IHNpbXBseSBuZWVk\nIHRvIHNldCBhIGZsYWcgdG8gYnVpbGQgaXQgaW4gaGVhZGxlc3MgbW9kZSBh\nbmQgdGhlbiB0ZWxsIGl0IHRvIHJ1biBvbiBhbnkgbG9jYWwgYWRkcmVzcyBh\ncyBvcHBvc2VkIHRvIGJpbmRpbmcgdG8gbG9jYWxob3N0IChzbyB0aGF0IGl0\nJ3MgYWNjZXNzaWJsZSBmcm9tIG90aGVyIG1hY2hpbmVzKS4gWW91IGNhbiBk\nbyB0aGlzIGFzIGZvbGxvd3M6CgoxLiBgYGBIRUFETEVTUz10cnVlIG1ha2Ug\nZG9ja2VyLWxpbnV4YGBgIG9yLCBpZiB5b3UncmUgYWxyZWFkeSBydW5uaW5n\nIG9uIExpbnV4IGp1c3QgYGBgSEVBRExFU1M9dHJ1ZSBtYWtlIGxpbnV4YGBg\nCjEuIGBgYC4vbGFudGVybl9saW51eF9hbWQ2NCAtLWFkZHIgMC4wLjAuMDo4\nNzg3YGBgIG9yIGBgYC4vbGFudGVybl9saW51eF8zODYgLS1hZGRyIDAuMC4w\nLjA6ODc4N2BgYAoKIyMgT3RoZXIKIyMjIEdlbmVyYXRpbmcgYXNzZXRzCgpg\nYGBzaAptYWtlIGdlbmFzc2V0cwpgYGAKCklmIHRoZSBlbnZpcm9ubWVudCB2\nYXJpYWJsZSBgVVBEQVRFX0RJU1Q9dHJ1ZWAgaXMgc2V0LCBgbWFrZSBnZW5h\nc3NldHNgIGFsc28KdXBkYXRlcyB0aGUgcmVzb3VyY2VzIGluIHRoZSBkaXN0\nIGZvbGRlci4KCkFuIGFubm90YXRlZCB0YWcgY2FuIGJlIGFkZGVkIGxpa2Ug\ndGhpczoKCmBgYHNoCmdpdCB0YWcgLWEgdjEuMC4wIC1tIlRhZ2dlZCAxLjAu\nMCIKZ2l0IHB1c2ggLS10YWdzCmBgYAoKVXNlIGBtYWtlIGNyZWF0ZS10YWdg\nIGFzIGEgc2hvcnRjdXQgZm9yIGNyZWF0aW5nIGFuZCB1cGxvYWRpbmcgdGFn\nczoKCmBgYApWRVJTSU9OPScyLjAuMC1iZXRhNScgbWFrZSBjcmVhdGUtdGFn\nCmBgYAoKSWYgeW91IHdhbnQgdG8gYm90aCBjcmVhdGUgYSBwYWNrYWdlIGFu\nZCB1cGxvYWQgYSB0YWcsIHJ1biB0aGUgYGNyZWF0ZS10YWdgIHRhc2sKcmln\naHQgYWZ0ZXIgdGhlIGBwYWNrYWdlc2AgdGFzazoKCmBgYApbLi4uZW52IHZh\ncmlhYmxlcy4uLl0gbWFrZSBwYWNrYWdlcyBjcmVhdGUtdGFnCmBgYAoKIyMj\nIFVwZGF0aW5nIEljb25zCgpUaGUgaWNvbnMgdXNlZCBmb3IgdGhlIHN5c3Rl\nbSB0cmF5IGFyZSBzdG9yZWQgaW4KYHNyYy9naXRodWIvZ2V0bGFudGVybi9s\nYW50ZXJuL2ljb25zYC4gVG8gYXBwbHkgY2hhbmdlcyB0byB0aGUgaWNvbnMs\nIG1ha2UKeW91ciB1cGRhdGVzIGluIHRoZSBpY29ucyBmb2xkZXIgYW5kIHRo\nZW4gcnVuIGBtYWtlIHVwZGF0ZS1pY29uc2AuCgojIyMgQ29udGludW91cyBJ\nbnRlZ3JhdGlvbiB3aXRoIFRyYXZpcyBDSQoKQ29udGludW91cyBidWlsZHMg\nYXJlIHJ1biBvbiBUcmF2aXMgQ0kuIFRoZXNlIGJ1aWxkcyB1c2UgdGhlIGAu\ndHJhdmlzLnltbGAKY29uZmlndXJhdGlvbi4gIFRoZSBnaXRodWIuY29tL2dl\ndGxhbnRlcm4vY2YgdW5pdCB0ZXN0cyByZXF1aXJlIGFuIGVudnZhcnMuYmFz\naAp0byBiZSBwb3B1bGF0ZWQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWRm\nbGFyZS4gVGhlIG9yaWdpbmFsIGBlbnZ2YXJzLmJhc2hgIGlzCmF2YWlsYWJs\nZQpbaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL2dldGxhbnRlcm4vdG9vLW1h\nbnktc2VjcmV0cy9ibG9iL21hc3Rlci9lbnZ2YXJzLmJhc2gpLgpBbiBlbmNy\neXB0ZWQgdmVyc2lvbiBpcyBjaGVja2VkIGluIGFzIGBlbnZ2YXJzLmJhc2gu\nZW5jYCwgd2hpY2ggd2FzIGVuY3J5cHRlZApwZXIgdGhlIGluc3RydWN0aW9u\ncyBbaGVyZV0oaHR0cHM6Ly9kb2NzLnRyYXZpcy1jaS5jb20vdXNlci9lbmNy\neXB0aW5nLWZpbGVzLykuCgoKIyMgRG9jdW1lbnRhdGlvbiBmb3IgZGV2ZWxv\ncGVycwoKIyMjIERldiBSRUFETUUKClBsZWFzZSwgZ28gdG8gW1JFQURNRS1k\nZXZdKFJFQURNRS1kZXYubWQpIGZvciBhbiBpbi1kZXB0aCBleHBsYW5hdGlv\nbiBvZiB0aGUgTGFudGVybiBpbnRlcm5hbHMgYW5kIGNsb3VkIHNlcnZpY2Vz\nLgoKIyMjIFJlbGVhc2UgUkVBRE1FCgpQbGVhc2UgdmlzaXQgW1JFQURNRS1y\nZWxlYXNlXShSRUFETUUtcmVsZWFzZS5tZCkgZm9yIGRldGFpbHMgb24gYnVp\nbGRpbmcgcmVsZWFzZSB2ZXJzaW9ucyBvZiBMYW50ZXJuLgoKIyMjIFRyYW5z\nbGF0aW9ucyBSRUFETUUKCk1vcmUgaW5mbyBmb3IgZGVhbGluZyB3aXRoIHRy\nYW5zbGF0aW9ucyBpcyBhdmFpbGFibGUgaW4gW1JFQURNRS10cmFuc2xhdGlv\nbnNdKFJFQURNRS10cmFuc2xhdGlvbnMubWQpLgoKIyMjIENvbnRyaWJ1dGlu\nZyBjaGFuZ2VzCkxhbnRlcm4gaXMgYSBbZ29zdF0oaHR0cHM6Ly9naXRodWIu\nY29tL2dldGxhbnRlcm4vZ29zdCkgcHJvamVjdCB0aGF0CnByb3ZpZGVzIHJl\ncGVhdGFibGUgYnVpbGRzIGFuZCBjb25zb2xpZGF0ZWQgcHVsbCByZXF1ZXN0\ncyBmb3IgbGFudGVybi4KCkdvIGNvZGUgaW4gTGFudGVybiBtdXN0IHBhc3Mg\nc2V2ZXJhbCB0ZXN0czoKCiogW2VycmNoZWNrXShodHRwczovL2dpdGh1Yi5j\nb20va2lzaWVsay9lcnJjaGVjaykKKiBbZ29saW50XShodHRwczovL2dpdGh1\nYi5jb20vZ29sYW5nL2xpbnQpCiogR28gdmV0CiogR28gdGVzdCAtcmFjZQoK\nWW91IGNhbiBmaW5kIGEgZ2VuZXJpYyBbZ2l0LWhvb2tdKGh0dHBzOi8vZ2l0\naHViLmNvbS9nZXRsYW50ZXJuL2xhbnRlcm4vYmxvYi9kZXZlbC9wcmUtcHVz\naCkKZmlsZSwgd2hpY2ggY2FuIGJlIHVzZWQgYXMgYSBwcmUtcHVzaCAob3Ig\ncHJlLWNvbW1pdCkgaG9vayB0byBhdXRvbWF0aWNhbGx5CmVuc3VyZSB0aGVz\nZSB0ZXN0cyBhcmUgcGFzc2VkIGJlZm9yZSBjb21taXR0aW5nIGFueSBjb2Rl\nLiBPbmx5IEdvIHBhY2thZ2VzIGluCmBzcmMvZ2l0aHViLmNvbS9nZXRsYW50\nZXJuYCB3aWxsIGJlIHRlc3RlZCwgYW5kIG9ubHkgdGhvc2UgdGhhdCBoYXZl\nIGNoYW5nZXMgaW4KdGhlbS4KCkluc3RhbGwgYnkgY29weWluZyBpdCBpbnRv\nIHRoZSBsb2NhbCBgLmdpdC9ob29rcy9gIGRpcmVjdG9yeSwgd2l0aCB0aGUg\nYHByZS1wdXNoYApmaWxlIG5hbWUgaWYgeW91IHdhbnQgdG8gcnVuIGl0IGJl\nZm9yZSBwdXNoaW5nLiBBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIGNvcHkKW3By\nZS1jb21taXQuaG9va10oaHR0cHM6Ly9naXRodWIuY29tL2dldGxhbnRlcm4v\nbGFudGVybi9ibG9iL2RldmVsL3ByZS1jb21taXQpCnRvIGBwcmUtY29tbWl0\nYCB0byBydW4gaXQgYmVmb3JlIGVhY2ggY29tbWl0LgoKYGBgYmFzaApsbiAt\ncyAiJChwd2QpL3ByZWhvb2suc2giIC5naXQvaG9va3MvcHJlaG9vay5zaAps\nbiAtcyAiJChwd2QpL3ByZS1wdXNoIiAuZ2l0L2hvb2tzL3ByZS1wdXNoCmBg\nYAoKKipJbXBvcnRhbnQgbm90aWNlKioKCklmIHlvdSAqbXVzdCogY29tbWl0\nIHdpdGhvdXQgcnVubmluZyB0aGUgaG9va3MsIHlvdSBjYW4gcnVuIGdpdCB3\naXRoIHRoZQpgLS1uby12ZXJpZnlgIGZsYWcuCgoKClsxXTogaHR0cHM6Ly9o\nZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvY3JlYXRpbmctYW4tYWNjZXNzLXRv\na2VuLWZvci1jb21tYW5kLWxpbmUtdXNlLwo=\n", 
                "download_url": "https://raw.githubusercontent.com/getlantern/lantern/devel/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/getlantern/lantern/git/blobs/ea7fb53e96b50275f77126b8f732382215f645a0", 
                "html_url": "https://github.com/getlantern/lantern/blob/devel/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "ea7fb53e96b50275f77126b8f732382215f645a0", 
                "size": 10196, 
                "type": "file", 
                "url": "https://api.github.com/repos/getlantern/lantern/contents/README.md?ref=devel"
            }, 
            "repo": {
                "created_at": "2011-02-17T22:12:29Z", 
                "language": "Go", 
                "owner": {
                    "avatar_url": "https://avatars2.githubusercontent.com/u/624178?v=3", 
                    "events_url": "https://api.github.com/users/getlantern/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/getlantern/followers", 
                    "following_url": "https://api.github.com/users/getlantern/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/getlantern/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/getlantern", 
                    "id": 624178, 
                    "login": "getlantern", 
                    "organizations_url": "https://api.github.com/users/getlantern/orgs", 
                    "received_events_url": "https://api.github.com/users/getlantern/received_events", 
                    "repos_url": "https://api.github.com/users/getlantern/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/getlantern/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/getlantern/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/getlantern"
                }, 
                "pushed_at": "2017-04-01T20:02:12Z", 
                "stargazers_count": 23006, 
                "updated_at": "2017-04-26T03:18:20Z", 
                "watchers_count": 23006
            }
        }, 
        "kubernetes/kubernetes": {
            "dockerfile": {
                "/build/build-image/Dockerfile": {
                    "ADD": [
                        "localtime /etc/localtime", 
                        "rsyncd.password /", 
                        "rsyncd.sh /"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "HOME /go/src/k8s.io/kubernetes", 
                        "KUBE_OUTPUT_SUBPATH _output/dockerized", 
                        "KUBE_GIT_VERSION_FILE ${HOME}/.dockerized-kube-version-defs"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "gcr.io/google_containers/kube-cross:KUBE_BUILD_IMAGE_CROSS_TAG"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "touch /kube-build-image", 
                        "chmod -R a+rwx /usr/local/go/pkg", 
                        "mkdir /var/run/kubernetes && chmod a+rwx /var/run/kubernetes", 
                        "chmod a+r /etc/localtime", 
                        "chmod a+r /rsyncd.password", 
                        "chmod a+rx /rsyncd.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "${HOME}"
                    ]
                }, 
                "/build/build-image/cross/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GOARM 7", 
                        "KUBE_DYNAMIC_CROSSPLATFORMS armhf arm64 s390x ppc64el", 
                        "KUBE_CROSSPLATFORMS linux/386 linux/arm linux/arm64 linux/ppc64le linux/s390x darwin/amd64 darwin/386 windows/amd64 windows/386", 
                        "TMPDIR /tmp.k8s"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "golang:1.8.1"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "for platform in ${KUBE_CROSSPLATFORMS}; do GOOS=${platform%/*} GOARCH=${platform##*/} go install std; done", 
                        "apt-get update && apt-get install -y g++ rsync apt-utils file patch && apt-get clean && rm -rf /var/lib/apt/lists/*", 
                        "mkdir -p /usr/local/src/protobuf && cd /usr/local/src/protobuf && curl -sSL https://github.com/google/protobuf/releases/download/v3.0.0-beta-2/protobuf-cpp-3.0.0-beta-2.tar.gz | tar -xzv && cd protobuf-3.0.0-beta-2 && ./configure && make install && ldconfig && cd .. && rm -rf protobuf-3.0.0-beta-2 && protoc --version", 
                        "echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\" > /etc/apt/sources.list.d/cgocrosscompiling.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5 3B4FE6ACC0B21F32 && apt-get update && apt-get install -y build-essential && for platform in ${KUBE_DYNAMIC_CROSSPLATFORMS}; do apt-get install -y crossbuild-essential-${platform}; done && apt-get clean && rm -rf /var/lib/apt/lists/*", 
                        "mkdir $TMPDIR && chmod a+rwx $TMPDIR && chmod o+t $TMPDIR && go get golang.org/x/tools/cmd/cover golang.org/x/tools/cmd/goimports github.com/tools/godep", 
                        "export ETCD_VERSION=v3.0.17; mkdir -p /usr/local/src/etcd && cd /usr/local/src/etcd && curl -fsSL https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz | tar -xz && ln -s ../src/etcd/etcd-${ETCD_VERSION}-linux-amd64/etcd /usr/local/bin/"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/build/debian-base/Dockerfile": {
                    "ADD": [
                        "rootfs.tar /"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/bin/sh\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/build/debian-iptables/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "turns into COPY", 
                        "qemu-ARCH-static /usr/bin/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "BASEIMAGE"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "clean-install iptables ebtables conntrack"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/build/pause/Dockerfile": {
                    "ADD": [
                        "bin/pause-${ARCH} /pause"
                    ], 
                    "ARG": [
                        "ARCH"
                    ], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/pause\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/addons/addon-manager/Dockerfile": {
                    "ADD": [
                        "kube-addons.sh /opt/", 
                        "namespace.yaml /opt/", 
                        "kubectl /usr/local/bin/"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/opt/kube-addons.sh\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "BASEIMAGE"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/addons/fluentd-elasticsearch/es-image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/run.sh\"]"
                    ], 
                    "COPY": [
                        "template-k8s-logstash.json /elasticsearch/config/templates/template-k8s-logstash.json", 
                        "config /elasticsearch/config", 
                        "run.sh /", 
                        "elasticsearch_logging_discovery /"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "DEBIAN_FRONTEND noninteractive", 
                        "ELASTICSEARCH_VERSION 2.4.1"
                    ], 
                    "EXPOSE": [
                        "9200 9300"
                    ], 
                    "FROM": [
                        "java:openjdk-8-jre"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y curl gosu && apt-get clean", 
                        "set -x && cd / && mkdir /elasticsearch && curl -O https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/$ELASTICSEARCH_VERSION/elasticsearch-$ELASTICSEARCH_VERSION.tar.gz && tar xf elasticsearch-$ELASTICSEARCH_VERSION.tar.gz -C /elasticsearch --strip-components=1 && rm elasticsearch-$ELASTICSEARCH_VERSION.tar.gz", 
                        "mkdir -p /elasticsearch/config/templates", 
                        "useradd --no-create-home --user-group elasticsearch && mkdir /data && chown -R elasticsearch:elasticsearch /elasticsearch"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/addons/fluentd-elasticsearch/fluentd-es-image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "td-agent.conf /etc/td-agent/td-agent.conf", 
                        "build.sh /tmp/build.sh"
                    ], 
                    "ENTRYPOINT": [
                        "[\"td-agent\"]"
                    ], 
                    "ENV": [
                        "DEBIAN_FRONTEND noninteractive", 
                        "LD_PRELOAD /opt/td-agent/embedded/lib/libjemalloc.so"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "gcr.io/google_containers/ubuntu-slim:0.6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "ulimit -n 65536", 
                        "/tmp/build.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/addons/fluentd-elasticsearch/kibana-image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/run.sh\"]"
                    ], 
                    "COPY": [
                        "run.sh /run.sh"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "DEBIAN_FRONTEND noninteractive", 
                        "KIBANA_VERSION 4.6.1"
                    ], 
                    "EXPOSE": [
                        "5601"
                    ], 
                    "FROM": [
                        "gcr.io/google_containers/ubuntu-slim:0.6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y curl && apt-get clean", 
                        "set -x && cd / && mkdir /kibana && curl -O https://download.elastic.co/kibana/kibana/kibana-$KIBANA_VERSION-linux-x86_64.tar.gz && tar xf kibana-$KIBANA_VERSION-linux-x86_64.tar.gz -C /kibana --strip-components=1 && rm kibana-$KIBANA_VERSION-linux-x86_64.tar.gz"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/addons/python-image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "python:2.7-slim"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "pip install pyyaml"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/addons/registry/images/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/bin/boot\"]"
                    ], 
                    "COPY": [
                        "rootfs /"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "nginx:1.11"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y curl --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/gce/gci/mounter/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/bin/mount\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y netbase nfs-common=1:1.2.8-9ubuntu12 glusterfs-client=3.7.6-1ubuntu1"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/images/etcd-empty-dir-cleanup/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "etcdctl etcd-empty-dir-cleanup.sh /"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/etcd-empty-dir-cleanup.sh\"]"
                    ], 
                    "ENV": [
                        "ETCDCTL /etcdctl", 
                        "SLEEP_SECOND 3600"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "chmod a+rx /etcdctl /etcd-empty-dir-cleanup.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "nobody:nogroup"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/images/etcd-version-monitor/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "etcd-version-monitor /etcd-version-monitor"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "9101"
                    ], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [
                        "maintainer \"Shyam JVS <shyamjvs@google.com>\""
                    ], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/images/etcd/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "etcd* etcdctl* /usr/local/bin/", 
                        "migrate-if-needed.sh attachlease rollback /usr/local/bin/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "2379 2380 4001 7001"
                    ], 
                    "FROM": [
                        "BASEIMAGE"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/images/hyperkube/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "turns into COPY", 
                        "qemu-ARCH-static /usr/bin/", 
                        "cni-bin/bin /opt/cni/bin", 
                        "hyperkube /hyperkube"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "BASEIMAGE"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "DEBIAN_FRONTEND=noninteractive apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get -yy -q install iptables ebtables ethtool ca-certificates conntrack util-linux socat git jq nfs-common glusterfs-client cifs-utils && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y && DEBIAN_FRONTEND=noninteractive apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* # CACHEBUST", 
                        "cp /usr/bin/nsenter /nsenter", 
                        "/hyperkube --make-symlinks", 
                        "ln -s /hyperkube /apiserver && ln -s /hyperkube /controller-manager && ln -s /hyperkube /federation-apiserver && ln -s /hyperkube /federation-controller-manager && ln -s /hyperkube /kubectl && ln -s /hyperkube /kubelet && ln -s /hyperkube /proxy && ln -s /hyperkube /scheduler && ln -s /hyperkube /usr/local/bin/kube-apiserver && ln -s /hyperkube /usr/local/bin/kube-controller-manager && ln -s /hyperkube /usr/local/bin/federation-apiserver && ln -s /hyperkube /usr/local/bin/federation-controller-manager && ln -s /hyperkube /usr/local/bin/kubectl && ln -s /hyperkube /usr/local/bin/kubelet && ln -s /hyperkube /usr/local/bin/kube-proxy && ln -s /hyperkube /usr/local/bin/kube-scheduler"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/cluster/images/kubemark/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "kubemark.sh /kubemark.sh", 
                        "kubemark /kubemark"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "chmod a+x /kubemark.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/cluster-dns/images/backend/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"python\", \"server.py\"]"
                    ], 
                    "COPY": [
                        ". /dns-backend"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "python:2.7-slim"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/dns-backend"
                    ]
                }, 
                "/examples/cluster-dns/images/frontend/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"python\", \"client.py\"]"
                    ], 
                    "COPY": [
                        ". /dns-frontend"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "python:2.7-slim"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "pip install requests"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/dns-frontend"
                    ]
                }, 
                "/examples/explorer/Dockerfile": {
                    "ADD": [
                        "explorer explorer", 
                        "README.md README.md"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/explorer\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/guestbook-go/Dockerfile": {
                    "ADD": [
                        "./guestbook_bin /app/guestbook", 
                        "./public/index.html /app/public/index.html", 
                        "./public/script.js /app/public/script.js", 
                        "./public/style.css /app/public/style.css"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"./guestbook\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "3000"
                    ], 
                    "FROM": [
                        "busybox:ubuntu-14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/app"
                    ]
                }, 
                "/examples/guestbook/php-redis/Dockerfile": {
                    "ADD": [
                        "guestbook.php /var/www/html/guestbook.php", 
                        "controllers.js /var/www/html/controllers.js", 
                        "index.html /var/www/html/index.html"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "php:5-apache"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get install -y php-pear", 
                        "pear channel-discover pear.nrk.io", 
                        "pear install nrk/Predis", 
                        "sed -i 's#ErrorLog /proc/self/fd/2#ErrorLog \"|$/bin/cat 1>\\&2\"#' /etc/apache2/apache2.conf", 
                        "sed -i 's#CustomLog /proc/self/fd/1 combined#CustomLog \"|/bin/cat\" combined#' /etc/apache2/apache2.conf"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/guestbook/redis-slave/Dockerfile": {
                    "ADD": [
                        "run.sh /run.sh"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "/run.sh"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "redis"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "chmod a+x /run.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/https-nginx/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "index2.html /usr/share/nginx/html/index2.html", 
                        "auto-reload-nginx.sh /home/auto-reload-nginx.sh"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "nginx"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "chmod +r /usr/share/nginx/html/index2.html", 
                        "chmod +x /home/auto-reload-nginx.sh", 
                        "apt-get update && apt-get install -y inotify-tools"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/k8petstore/redis-master/Dockerfile": {
                    "ADD": [
                        "etc_redis_redis.conf /etc/redis/redis.conf"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"redis-server\", \"/etc/redis/redis.conf\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "6379"
                    ], 
                    "FROM": [
                        "redis"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/k8petstore/redis-slave/Dockerfile": {
                    "ADD": [
                        "run.sh /run.sh"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "/run.sh"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "redis"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/k8petstore/redis/Dockerfile": {
                    "ADD": [
                        "etc_redis_redis.conf /etc/redis/redis.conf"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "\"redis-server /etc/redis/redis.conf\""
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "6379"
                    ], 
                    "FROM": [
                        "redis"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/data"
                    ]
                }, 
                "/examples/k8petstore/web-server/Dockerfile": {
                    "ADD": [
                        "./src /gopath/src/k8petstore", 
                        "./static /tmp/static", 
                        "./test.sh /opt/test.sh"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "/gopath/bin/k8petstore"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "STATIC_FILES /tmp/static"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "golang:latest"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir /gopath/bin/", 
                        "chmod 777 /opt/test.sh", 
                        "export GOPATH=/gopath/ && go get k8petstore", 
                        "export GOPATH=/gopath/ && go install k8petstore"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/gopath/src"
                    ]
                }, 
                "/examples/kubectl-container/Dockerfile": {
                    "ADD": [
                        "kubectl kubectl"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/kubectl\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/meteor/dockerbase/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[]"
                    ], 
                    "COPY": [
                        ". /appsrc"
                    ], 
                    "ENTRYPOINT": [
                        "MONGO_URL=mongodb://$MONGO_SERVICE_HOST:$MONGO_SERVICE_PORT /usr/local/bin/node main.js"
                    ], 
                    "ENV": [
                        "PORT 8080"
                    ], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "node:0.10"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [
                        "WORKDIR /appsrc", 
                        "COPY . /appsrc", 
                        "RUN curl https://install.meteor.com/ | sh && meteor build ../app --directory --architecture os.linux.x86_64 && rm -rf /appsrc", 
                        "WORKDIR /app/bundle", 
                        "RUN (cd programs/server && npm install)"
                    ], 
                    "RUN": [
                        "curl https://install.meteor.com/ | sh && meteor build ../app --directory --architecture os.linux.x86_64 && rm -rf /appsrc", 
                        "(cd programs/server && npm install)"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/appsrc", 
                        "/app/bundle"
                    ]
                }, 
                "/examples/phabricator/php-phabricator/Dockerfile": {
                    "ADD": [
                        "000-default.conf /etc/apache2/sites-available/000-default.conf", 
                        "run.sh /run.sh"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/run.sh\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "80"
                    ], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get -y install git apache2 dpkg-dev python-pygments php5 php5-mysql php5-gd php5-dev php5-curl php-apc php5-cli php5-json php5-xhprof", 
                        "a2enmod rewrite", 
                        "apt-get source php5", 
                        "(cd `ls -1F | grep '^php5-.*/$'`/ext/pcntl && phpize && ./configure && make && sudo make install)", 
                        "mkdir /home/www-data", 
                        "cd /home/www-data && git clone https://github.com/phacility/libphutil.git", 
                        "cd /home/www-data && git clone https://github.com/phacility/arcanist.git", 
                        "cd /home/www-data && git clone https://github.com/phacility/phabricator.git", 
                        "chown -R www-data /home/www-data", 
                        "chgrp -R www-data /home/www-data", 
                        "chmod a+x /*.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/storage/cassandra/image/Dockerfile": {
                    "ADD": [
                        "files /"
                    ], 
                    "ARG": [
                        "BUILD_DATE", 
                        "VCS_REF", 
                        "CASSANDRA_VERSION", 
                        "DEV_CONTAINER"
                    ], 
                    "CMD": [
                        "[\"/sbin/dumb-init\", \"/bin/bash\", \"/run.sh\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "CASSANDRA_HOME=/usr/local/apache-cassandra-${CASSANDRA_VERSION} CASSANDRA_CONF=/etc/cassandra CASSANDRA_DATA=/cassandra_data CASSANDRA_LOGS=/var/log/cassandra JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 PATH=${PATH}:/usr/lib/jvm/java-8-openjdk-amd64/bin:/usr/local/apache-cassandra-${CASSANDRA_VERSION}/bin  DI_VERSION=1.2.0 DI_SHA=81231da1cd074fdc81af62789fead8641ef3f24b6b07366a1c34e5b059faf363"
                    ], 
                    "EXPOSE": [
                        "7000 7001 7199 9042 9160"
                    ], 
                    "FROM": [
                        "gcr.io/google_containers/ubuntu-slim:0.6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [
                        "org.label-schema.build-date=$BUILD_DATE org.label-schema.docker.dockerfile=\"/Dockerfile\" org.label-schema.license=\"Apache License 2.0\" org.label-schema.name=\"k8s-for-greeks/docker-cassandra-k8s\" org.label-schema.url=\"https://github.com/k8s-for-greeks/\" org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-type=\"Git\" org.label-schema.vcs-url=\"https://github.com/k8s-for-greeks/docker-cassandra-k8s\""
                    ], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "set -e && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && apt-get update && apt-get -qq -y --force-yes install --no-install-recommends openjdk-8-jre-headless libjemalloc1 localepurge wget && mirror_url=$( wget -q -O - http://www.apache.org/dyn/closer.cgi/cassandra/ | sed -n 's#.*href=\"\\(http://ftp.[^\"]*\\)\".*#\\1#p' | head -n 1 ) && wget -q -O - ${mirror_url}/${CASSANDRA_VERSION}/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz | tar -xzf - -C /usr/local && wget -q -O - https://github.com/Yelp/dumb-init/releases/download/v${DI_VERSION}/dumb-init_${DI_VERSION}_amd64 > /sbin/dumb-init && echo \"$DI_SHA  /sbin/dumb-init\" | sha256sum -c - && chmod +x /sbin/dumb-init && chmod +x /ready-probe.sh && mkdir -p /cassandra_data/data && mkdir -p /etc/cassandra && mv /logback.xml /cassandra.yaml /jvm.options /etc/cassandra/ && mv /usr/local/apache-cassandra-${CASSANDRA_VERSION}/conf/cassandra-env.sh /etc/cassandra/ && adduser --disabled-password --no-create-home --gecos '' --disabled-login cassandra && chown cassandra: /ready-probe.sh && if [ -n \"$DEV_CONTAINER\" ]; then apt-get -y --no-install-recommends install python; else rm -rf  $CASSANDRA_HOME/pylib; fi && apt-get -y purge wget localepurge && apt-get autoremove && apt-get clean && rm -rf $CASSANDRA_HOME/*.txt $CASSANDRA_HOME/doc $CASSANDRA_HOME/javadoc $CASSANDRA_HOME/tools/*.yaml $CASSANDRA_HOME/tools/bin/*.bat $CASSANDRA_HOME/bin/*.bat doc man info locale common-licenses ~/.bashrc /var/lib/apt/lists/* /var/log/* /var/cache/debconf/* /etc/systemd /lib/lsb /lib/udev /usr/share/doc/ /usr/share/doc-base/ /usr/share/man/ /tmp/* /usr/lib/jvm/java-8-openjdk-amd64/jre/plugin /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/javaws /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/jjs /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/orbd /usr/lib/jvm/java-8-openjdk-amd64/bin/pack200 /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/policytool /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/rmid /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/rmiregistry /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/servertool /usr/lib/jvm/java-8-openjdk-amd64/bin/tnameserv /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/unpack200 /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/javaws.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/deploy* /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/desktop /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/*javafx* /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/*jfx* /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libdecora_sse.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libprism_*.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libfxplugins.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libglass.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libgstreamer-lite.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libjavafx*.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libjfx*.so /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jfxrt.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/oblique-fonts /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/plugin.jar /usr/lib/jvm/java-8-openjdk-amd64/man"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/storage/mysql-galera/image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"mysqld\"]"
                    ], 
                    "COPY": [
                        "my.cnf /etc/mysql/my.cnf", 
                        "cluster.cnf /etc/mysql/conf.d/cluster.cnf", 
                        "docker-entrypoint.sh /entrypoint.sh"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/entrypoint.sh\"]"
                    ], 
                    "ENV": [
                        "PERCONA_XTRADB_VERSION 5.6", 
                        "MYSQL_VERSION 5.6", 
                        "TERM linux"
                    ], 
                    "EXPOSE": [
                        "3306 4444 4567 4568"
                    ], 
                    "FROM": [
                        "ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "groupadd -r mysql && useradd -r -g mysql mysql", 
                        "apt-get update", 
                        "DEBIAN_FRONTEND=noninteractive apt-get install -y perl --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "apt-key adv --keyserver keys.gnupg.net --recv-keys 8507EFA5", 
                        "echo \"deb http://repo.percona.com/apt trusty main\" > /etc/apt/sources.list.d/percona.list", 
                        "echo \"deb-src http://repo.percona.com/apt trusty main\" >> /etc/apt/sources.list.d/percona.list", 
                        "{ echo percona-server-server-5.6 percona-server-server/data-dir select ''; echo percona-server-server-5.6 percona-server-server/root_password password ''; } | debconf-set-selections && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y percona-xtradb-cluster-client-\"${MYSQL_VERSION}\" percona-xtradb-cluster-common-\"${MYSQL_VERSION}\" percona-xtradb-cluster-server-\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* && rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql && chown -R mysql:mysql /var/lib/mysql"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/storage/redis/image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"/run.sh\" ]"
                    ], 
                    "COPY": [
                        "redis-master.conf /redis-master/redis.conf", 
                        "redis-slave.conf /redis-slave/redis.conf", 
                        "run.sh /run.sh"
                    ], 
                    "ENTRYPOINT": [
                        "[ \"bash\", \"-c\" ]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "alpine:3.4"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apk add --no-cache redis sed bash"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/storage/rethinkdb/image/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "\"/usr/bin/run.sh\""
                    ], 
                    "COPY": [
                        "./run.sh /usr/bin/run.sh"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "rethinkdb:1.16.0"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -yq curl && rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/* && curl -L http://stedolan.github.io/jq/download/linux64/jq > /usr/bin/jq && chmod u+x /usr/bin/jq", 
                        "chmod u+x /usr/bin/run.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/volumes/nfs/nfs-data/Dockerfile": {
                    "ADD": [
                        "run_nfs.sh /usr/local/bin/", 
                        "index.html /tmp/index.html"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/run_nfs.sh\", \"/exports\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "2049/tcp 20048/tcp 111/tcp 111/udp"
                    ], 
                    "FROM": [
                        "centos"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum -y install /usr/bin/ps nfs-utils && yum clean all", 
                        "mkdir -p /exports", 
                        "chmod 644 /tmp/index.html"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/hack/gen-swagger-doc/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build.gradle build/", 
                        "gen-swagger-docs.sh build/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"build/gen-swagger-docs.sh\"]"
                    ], 
                    "ENV": [
                        "GRADLE_USER_HOME=/gradle-cache"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "java:7-jre"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y asciidoctor unzip --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "wget -O /tmp/gradle.zip https://services.gradle.org/distributions/gradle-2.5-bin.zip && mkdir -p build/ && unzip /tmp/gradle.zip -d build/ && rm /tmp/gradle.zip && mkdir -p gradle-cache/", 
                        "mkdir -p /output /swagger-source && wget https://raw.githubusercontent.com/kubernetes/kubernetes/master/api/swagger-spec/v1.json -O /swagger-source/v1.json && wget https://raw.githubusercontent.com/GoogleCloudPlatform/kubernetes/master/pkg/api/v1/register.go -O /register.go && build/gen-swagger-docs.sh v1 && rm -rf /output/* /swagger-source/* /register.go", 
                        "chmod -R 777 build/ && chmod -R 777 gradle-cache/"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/staging/src/k8s.io/kube-aggregator/artifacts/simple-image/Dockerfile": {
                    "ADD": [
                        "kube-aggregator /"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/kube-aggregator\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/staging/src/k8s.io/sample-apiserver/artifacts/simple-image/Dockerfile": {
                    "ADD": [
                        "kube-sample-apiserver /"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/kube-sample-apiserver\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/e2e_node/conformance/build/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "ginkgo /usr/local/bin/", 
                        "e2e_node.test /usr/local/bin"
                    ], 
                    "ENTRYPOINT": [
                        "ginkgo --focus=\"$FOCUS\" --skip=\"$SKIP\" --nodes=$PARALLELISM --flakeAttempts=$FLAKE_ATTEMPTS /usr/local/bin/e2e_node.test -- --conformance=true --prepull-images=false --report-dir=\"$REPORT_PATH\" $TEST_ARGS"
                    ], 
                    "ENV": [
                        "FOCUS=\"\\[Conformance\\]\" SKIP=\"\\[Flaky\\]|\\[Serial\\]\" PARALLELISM=8 REPORT_PATH=\"/var/result\" FLAKE_ATTEMPTS=2 TEST_ARGS=\"\""
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "BASEIMAGE"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/clusterapi-tester/Dockerfile": {
                    "ADD": [
                        "main main"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/main\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/dnsutils/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apk add --no-cache bind-tools"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/entrypoint-tester/Dockerfile": {
                    "ADD": [
                        "ep ep", 
                        "ep ep-2"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"default\", \"arguments\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/ep\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/fakegitserver/Dockerfile": {
                    "ADD": [
                        "GITHASH.txt /", 
                        "gitserver /"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/gitserver\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/goproxy/Dockerfile": {
                    "ADD": [
                        "goproxy goproxy"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/goproxy\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/hostexec/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "rm -f /fifo && mkfifo /fifo && exec cat </fifo"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "alpine:3.2"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/iperf/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "gcr.io/google_containers/ubuntu-slim:0.6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends iperf bash && apt-get clean -y && rm -rf /var/lib/apt/lists/* && ln -s /usr/bin/iperf /usr/local/bin/iperf", 
                        "ls -altrh /usr/local/bin/iperf"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/jessie-dnsutils/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get -q update && apt-get install -y dnsutils && apt-get clean"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/logs-generator/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "/logs-generator --logtostderr --log-lines-total=${LOGS_GENERATOR_LINES_TOTAL} --run-duration=${LOGS_GENERATOR_DURATION}"
                    ], 
                    "COPY": [
                        "logs-generator /"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "gcr.io/google_containers/ubuntu-slim:0.6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/mount-tester-user/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "gcr.io/google_containers/mounttest:0.8"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "1001"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/mount-tester/Dockerfile": {
                    "ADD": [
                        "mt mt"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/mt\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/n-way-http/Dockerfile": {
                    "ADD": [
                        "server server"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/server\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/net/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "net /net"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apk update && apk add curl"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/netexec/Dockerfile": {
                    "ADD": [
                        "netexec netexec", 
                        "netexec.go netexec.go"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/netexec\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080", 
                        "8081"
                    ], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir /uploads"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/network-tester/Dockerfile": {
                    "ADD": [
                        "webserver webserver"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/webserver\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/pets/redis/Dockerfile": {
                    "ADD": [
                        "on-start.sh /", 
                        "install.sh /"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y wget make gcc", 
                        "wget -qO /redis-3.2.0.tar.gz http://download.redis.io/releases/redis-3.2.0.tar.gz && tar -xzf /redis-3.2.0.tar.gz -C /tmp/ && rm /redis-3.2.0.tar.gz", 
                        "cd /tmp/redis-3.2.0 && make distclean && mkdir -p /redis && make install INSTALL_BIN=/redis && mv /tmp/redis-3.2.0/redis.conf /redis/redis.conf && rm -rf /tmp/redis-3.2.0", 
                        "wget -qO /peer-finder https://storage.googleapis.com/kubernetes-release/pets/peer-finder", 
                        "chmod -c 755 /install.sh /on-start.sh /peer-finder"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/pets/zookeeper/Dockerfile": {
                    "ADD": [
                        "on-start.sh /", 
                        "install.sh /"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y wget netcat", 
                        "wget -qO /peer-finder https://storage.googleapis.com/kubernetes-release/pets/peer-finder", 
                        "wget -q -O /zookeeper-3.5.0-alpha.tar.gz http://apache.mirrors.pair.com/zookeeper/zookeeper-3.5.0-alpha/zookeeper-3.5.0-alpha.tar.gz && tar -xzf /zookeeper-3.5.0-alpha.tar.gz -C /tmp/ && mv /tmp/zookeeper-3.5.0-alpha /zookeeper && rm /zookeeper-3.5.0-alpha.tar.gz", 
                        "chmod -c 755 /install.sh /on-start.sh /peer-finder"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/port-forward-tester/Dockerfile": {
                    "ADD": [
                        "portforwardtester portforwardtester", 
                        "portforwardtester.go portforwardtester.go"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/portforwardtester\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/porter/Dockerfile": {
                    "ADD": [
                        "localhost.crt localhost.crt", 
                        "localhost.key localhost.key", 
                        "porter porter"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/porter\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/redis/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"redis-server\", \"/etc/redis.conf\"]"
                    ], 
                    "COPY": [
                        "redis.conf /etc/redis.conf"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "6379"
                    ], 
                    "FROM": [
                        "alpine:3.5"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apk add --no-cache redis"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/resource-consumer/Dockerfile": {
                    "ADD": [
                        "consumer /consumer", 
                        "consume-cpu /consume-cpu"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/consumer\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "jess/stress"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/resource-consumer/controller/Dockerfile": {
                    "ADD": [
                        "controller /controller"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/controller\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8080"
                    ], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/serve_hostname/Dockerfile": {
                    "ADD": [
                        "serve_hostname /serve_hostname"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/serve_hostname\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "9376"
                    ], 
                    "FROM": [
                        "BASEIMAGE"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/volumes-tester/ceph/Dockerfile": {
                    "ADD": [
                        "install.sh /usr/local/bin/", 
                        "init.sh /usr/local/bin/", 
                        "index.html /tmp/"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/init.sh\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "6789/tcp"
                    ], 
                    "FROM": [
                        "centos:6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "/usr/local/bin/install.sh", 
                        "chmod 644 /tmp/index.html"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/volumes-tester/gluster/Dockerfile": {
                    "ADD": [
                        "glusterd.vol /etc/glusterfs/", 
                        "run_gluster.sh /usr/local/bin/", 
                        "index.html /vol/"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/run_gluster.sh\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "24007/tcp 49152/tcp"
                    ], 
                    "FROM": [
                        "centos"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum -y install hostname centos-release-gluster && yum -y install glusterfs-server && yum clean all", 
                        "chmod 644 /vol/index.html"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/volumes-tester/iscsi/Dockerfile": {
                    "ADD": [
                        "run_iscsid.sh /usr/local/bin/", 
                        "initiatorname.iscsi /etc/iscsi/", 
                        "block.tar.gz /", 
                        "saveconfig.json /etc/target/"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/run_iscsid.sh\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "3260/tcp"
                    ], 
                    "FROM": [
                        "fedora"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum install -y iscsi-initiator-utils targetcli net-tools strace && yum clean all"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/volumes-tester/nfs/Dockerfile": {
                    "ADD": [
                        "run_nfs.sh /usr/local/bin/", 
                        "index.html /tmp/index.html"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/exports\", \"/\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/run_nfs.sh\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [
                        "2049/tcp 20048/tcp"
                    ], 
                    "FROM": [
                        "centos"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum -y install /usr/bin/ps nfs-utils && yum clean all", 
                        "mkdir -p /exports", 
                        "chmod 644 /tmp/index.html"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/images/volumes-tester/rbd/Dockerfile": {
                    "ADD": [
                        "./bootstrap.sh /bootstrap.sh", 
                        "./mon.sh /mon.sh", 
                        "./osd.sh /osd.sh", 
                        "./ceph.conf.sh /ceph.conf.sh", 
                        "./keyring /var/lib/ceph/mon/keyring", 
                        "./block.tar.gz /"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "/bootstrap.sh"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "6789"
                    ], 
                    "FROM": [
                        "fedora"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum install -y wget ceph ceph-fuse strace && yum clean all"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/test/soak/cauldron/Dockerfile": {
                    "ADD": [
                        "cauldron cauldron", 
                        "cauldron.go cauldron.go"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/cauldron\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/vendor/golang.org/x/net/http2/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"-h\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/curl\"]"
                    ], 
                    "ENV": [
                        "NGHTTP2_VER 895da9a"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get upgrade -y && apt-get install -y git-core build-essential wget", 
                        "apt-get install -y --no-install-recommends autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libevent-dev automake autoconf", 
                        "apt-get install -y --no-install-recommends make binutils autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev libjemalloc-dev cython python3.4-dev python-setuptools", 
                        "cd /root && git clone https://github.com/tatsuhiro-t/nghttp2.git", 
                        "git reset --hard $NGHTTP2_VER", 
                        "autoreconf -i", 
                        "automake", 
                        "autoconf", 
                        "./configure", 
                        "make", 
                        "make install", 
                        "wget http://curl.haxx.se/download/curl-7.45.0.tar.gz", 
                        "tar -zxvf curl-7.45.0.tar.gz", 
                        "./configure --with-ssl --with-nghttp2=/usr/local", 
                        "make", 
                        "make install", 
                        "ldconfig"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/root/nghttp2", 
                        "/root", 
                        "/root/curl-7.45.0"
                    ]
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/kubernetes/kubernetes/git/blobs/e859cd7a11826eba20661cbf45df762a2d61af99", 
                    "html": "https://github.com/kubernetes/kubernetes/blob/master/README.md", 
                    "self": "https://api.github.com/repos/kubernetes/kubernetes/contents/README.md?ref=master"
                }, 
                "content": "IyBLdWJlcm5ldGVzCgpbIVtTdWJtaXQgUXVldWUgV2lkZ2V0XV1bU3VibWl0\nIFF1ZXVlXSBbIVtHb0RvYyBXaWRnZXRdXVtHb0RvY10KCjxpbWcgc3JjPSJo\ndHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy9rdWJlcm5ldGVzL3Jhdy9t\nYXN0ZXIvbG9nby9sb2dvLnBuZyIgd2lkdGg9IjEwMCI+CgotLS0tCgpLdWJl\ncm5ldGVzIGlzIGFuIG9wZW4gc291cmNlIHN5c3RlbSBmb3IgbWFuYWdpbmcg\nW2NvbnRhaW5lcml6ZWQgYXBwbGljYXRpb25zXQphY3Jvc3MgbXVsdGlwbGUg\naG9zdHMsIHByb3ZpZGluZyBiYXNpYyBtZWNoYW5pc21zIGZvciBkZXBsb3lt\nZW50LCBtYWludGVuYW5jZSwKYW5kIHNjYWxpbmcgb2YgYXBwbGljYXRpb25z\nLgoKS3ViZXJuZXRlcyBidWlsZHMgdXBvbiBhIGRlY2FkZSBhbmQgYSBoYWxm\nIG9mIGV4cGVyaWVuY2UgYXQgR29vZ2xlIHJ1bm5pbmcKcHJvZHVjdGlvbiB3\nb3JrbG9hZHMgYXQgc2NhbGUgdXNpbmcgYSBzeXN0ZW0gY2FsbGVkIFtCb3Jn\nXSwKY29tYmluZWQgd2l0aCBiZXN0LW9mLWJyZWVkIGlkZWFzIGFuZCBwcmFj\ndGljZXMgZnJvbSB0aGUgY29tbXVuaXR5LgoKS3ViZXJuZXRlcyBpcyBob3N0\nZWQgYnkgdGhlIENsb3VkIE5hdGl2ZSBDb21wdXRpbmcgRm91bmRhdGlvbiAo\nW0NOQ0ZdKS4KSWYgeW91IGFyZSBhIGNvbXBhbnkgdGhhdCB3YW50cyB0byBo\nZWxwIHNoYXBlIHRoZSBldm9sdXRpb24gb2YKdGVjaG5vbG9naWVzIHRoYXQg\nYXJlIGNvbnRhaW5lci1wYWNrYWdlZCwgZHluYW1pY2FsbHktc2NoZWR1bGVk\nCmFuZCBtaWNyb3NlcnZpY2VzLW9yaWVudGVkLCBjb25zaWRlciBqb2luaW5n\nIHRoZSBDTkNGLgpGb3IgZGV0YWlscyBhYm91dCB3aG8ncyBpbnZvbHZlZCBh\nbmQgaG93IEt1YmVybmV0ZXMgcGxheXMgYSByb2xlLApyZWFkIHRoZSBDTkNG\nIFthbm5vdW5jZW1lbnRdLgoKLS0tLQoKIyMgVG8gc3RhcnQgdXNpbmcgS3Vi\nZXJuZXRlcwoKU2VlIG91ciBkb2N1bWVudGF0aW9uIG9uIFtrdWJlcm5ldGVz\nLmlvXS4KClRyeSBvdXIgW2ludGVyYWN0aXZlIHR1dG9yaWFsXS4KClRha2Ug\nYSBmcmVlIGNvdXJzZSBvbiBbU2NhbGFibGUgTWljcm9zZXJ2aWNlcyB3aXRo\nIEt1YmVybmV0ZXNdLgoKIyMgVG8gc3RhcnQgZGV2ZWxvcGluZyBLdWJlcm5l\ndGVzCgpUaGUgW2NvbW11bml0eSByZXBvc2l0b3J5XSBob3N0cyBhbGwgaW5m\nb3JtYXRpb24gYWJvdXQKYnVpbGRpbmcgS3ViZXJuZXRlcyBmcm9tIHNvdXJj\nZSwgaG93IHRvIGNvbnRyaWJ1dGUgY29kZQphbmQgZG9jdW1lbnRhdGlvbiwg\nd2hvIHRvIGNvbnRhY3QgYWJvdXQgd2hhdCwgZXRjLgoKSWYgeW91IHdhbnQg\ndG8gYnVpbGQgS3ViZXJuZXRlcyByaWdodCBhd2F5IHRoZXJlIGFyZSB0d28g\nb3B0aW9uczoKCiMjIyMjIFlvdSBoYXZlIGEgd29ya2luZyBbR28gZW52aXJv\nbm1lbnRdLgoKYGBgCiQgZ28gZ2V0IC1kIGs4cy5pby9rdWJlcm5ldGVzCiQg\nY2QgJEdPUEFUSC9zcmMvazhzLmlvL2t1YmVybmV0ZXMKJCBtYWtlCmBgYAoK\nIyMjIyMgWW91IGhhdmUgYSB3b3JraW5nIFtEb2NrZXIgZW52aXJvbm1lbnRd\nLgoKYGBgCiQgZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5l\ndGVzL2t1YmVybmV0ZXMKJCBjZCBrdWJlcm5ldGVzCiQgbWFrZSBxdWljay1y\nZWxlYXNlCmBgYAoKSWYgeW91IGFyZSBsZXNzIGltcGF0aWVudCwgaGVhZCBv\ndmVyIHRvIHRoZSBbZGV2ZWxvcGVyJ3MgZG9jdW1lbnRhdGlvbl0uCgojIyBT\ndXBwb3J0CgpJZiB5b3UgbmVlZCBzdXBwb3J0LCBzdGFydCB3aXRoIHRoZSBb\ndHJvdWJsZXNob290aW5nIGd1aWRlXQphbmQgd29yayB5b3VyIHdheSB0aHJv\ndWdoIHRoZSBwcm9jZXNzIHRoYXQgd2UndmUgb3V0bGluZWQuCgpUaGF0IHNh\naWQsIGlmIHlvdSBoYXZlIHF1ZXN0aW9ucywgcmVhY2ggb3V0IHRvIHVzCltv\nbmUgd2F5IG9yIGFub3RoZXJdW2NvbW11bmljYXRpb25dLgoKW2Fubm91bmNl\nbWVudF06IGh0dHBzOi8vY25jZi5pby9uZXdzL2Fubm91bmNlbWVudC8yMDE1\nLzA3L25ldy1jbG91ZC1uYXRpdmUtY29tcHV0aW5nLWZvdW5kYXRpb24tZHJp\ndmUtYWxpZ25tZW50LWFtb25nLWNvbnRhaW5lcgpbQm9yZ106IGh0dHBzOi8v\ncmVzZWFyY2guZ29vZ2xlLmNvbS9wdWJzL3B1YjQzNDM4Lmh0bWwKW0NOQ0Zd\nOiBodHRwczovL3d3dy5jbmNmLmlvL2Fib3V0Cltjb21tdW5pY2F0aW9uXTog\naHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29tbXVuaXR5L2Jsb2Iv\nbWFzdGVyL2NvbW11bmljYXRpb24ubWQKW2NvbW11bml0eSByZXBvc2l0b3J5\nXTogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29tbXVuaXR5Cltj\nb250YWluZXJpemVkIGFwcGxpY2F0aW9uc106IGh0dHBzOi8va3ViZXJuZXRl\ncy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3doYXQtaXMta3ViZXJuZXRl\ncy8KW2RldmVsb3BlcidzIGRvY3VtZW50YXRpb25dOiBodHRwczovL2dpdGh1\nYi5jb20va3ViZXJuZXRlcy9jb21tdW5pdHkvdHJlZS9tYXN0ZXIvY29udHJp\nYnV0b3JzL2RldmVsCltEb2NrZXIgZW52aXJvbm1lbnRdOiBodHRwczovL2Rv\nY3MuZG9ja2VyLmNvbS9lbmdpbmUKW0dvIGVudmlyb25tZW50XTogaHR0cHM6\nLy9nb2xhbmcub3JnL2RvYy9pbnN0YWxsCltHb0RvY106IGh0dHBzOi8vZ29k\nb2Mub3JnL2s4cy5pby9rdWJlcm5ldGVzCltHb0RvYyBXaWRnZXRdOiBodHRw\nczovL2dvZG9jLm9yZy9rOHMuaW8va3ViZXJuZXRlcz9zdGF0dXMuc3ZnCltp\nbnRlcmFjdGl2ZSB0dXRvcmlhbF06IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2Rv\nY3MvdHV0b3JpYWxzL2t1YmVybmV0ZXMtYmFzaWNzCltrdWJlcm5ldGVzLmlv\nXTogaHR0cDovL2t1YmVybmV0ZXMuaW8KW1NjYWxhYmxlIE1pY3Jvc2Vydmlj\nZXMgd2l0aCBLdWJlcm5ldGVzXTogaHR0cHM6Ly93d3cudWRhY2l0eS5jb20v\nY291cnNlL3NjYWxhYmxlLW1pY3Jvc2VydmljZXMtd2l0aC1rdWJlcm5ldGVz\nLS11ZDYxNQpbU3VibWl0IFF1ZXVlXTogaHR0cDovL3N1Ym1pdC1xdWV1ZS5r\nOHMuaW8vIy9lMmUKW1N1Ym1pdCBRdWV1ZSBXaWRnZXRdOiBodHRwOi8vc3Vi\nbWl0LXF1ZXVlLms4cy5pby9oZWFsdGguc3ZnP3Y9MQpbdHJvdWJsZXNob290\naW5nIGd1aWRlXTogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdGFza3Mv\nZGVidWctYXBwbGljYXRpb24tY2x1c3Rlci90cm91Ymxlc2hvb3RpbmcvIAoK\nWyFbQW5hbHl0aWNzXShodHRwczovL2t1YmVybmV0ZXMtc2l0ZS5hcHBzcG90\nLmNvbS9VQS0zNjAzNzMzNS0xMC9HaXRIdWIvUkVBRE1FLm1kP3BpeGVsKV0o\nKQo=\n", 
                "download_url": "https://raw.githubusercontent.com/kubernetes/kubernetes/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/kubernetes/kubernetes/git/blobs/e859cd7a11826eba20661cbf45df762a2d61af99", 
                "html_url": "https://github.com/kubernetes/kubernetes/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "e859cd7a11826eba20661cbf45df762a2d61af99", 
                "size": 3242, 
                "type": "file", 
                "url": "https://api.github.com/repos/kubernetes/kubernetes/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2014-06-06T22:56:04Z", 
                "language": "Go", 
                "owner": {
                    "avatar_url": "https://avatars1.githubusercontent.com/u/13629408?v=3", 
                    "events_url": "https://api.github.com/users/kubernetes/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/kubernetes/followers", 
                    "following_url": "https://api.github.com/users/kubernetes/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/kubernetes/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/kubernetes", 
                    "id": 13629408, 
                    "login": "kubernetes", 
                    "organizations_url": "https://api.github.com/users/kubernetes/orgs", 
                    "received_events_url": "https://api.github.com/users/kubernetes/received_events", 
                    "repos_url": "https://api.github.com/users/kubernetes/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/kubernetes/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/kubernetes/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/kubernetes"
                }, 
                "pushed_at": "2017-04-26T03:02:45Z", 
                "stargazers_count": 22654, 
                "updated_at": "2017-04-26T03:20:25Z", 
                "watchers_count": 22654
            }
        }, 
        "moby/moby": {
            "dockerfile": {
                "/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "APT_MIRROR=deb.debian.org"
                    ], 
                    "CMD": [], 
                    "COPY": [
                        "keys/launchpad-ppa-zfs.asc /go/src/github.com/docker/docker/keys/", 
                        "contrib/download-frozen-image-v2.sh /go/src/github.com/docker/docker/contrib/", 
                        "hack/dockerfile/binaries-commits /tmp/binaries-commits", 
                        "hack/dockerfile/install-binaries.sh /tmp/install-binaries.sh", 
                        ". /go/src/github.com/docker/docker"
                    ], 
                    "ENTRYPOINT": [
                        "[\"hack/dind\"]"
                    ], 
                    "ENV": [
                        "LVM2_VERSION 2.02.103", 
                        "OSX_SDK MacOSX10.11.sdk", 
                        "OSX_CROSS_COMMIT a9317c18a3a457ca0a657f08cc4d0d43c6cf8953", 
                        "PATH /osxcross/target/bin:$PATH", 
                        "SECCOMP_VERSION 2.3.2", 
                        "GO_VERSION 1.7.5", 
                        "PATH /go/bin:/usr/local/go/bin:$PATH", 
                        "GOPATH /go", 
                        "DOCKER_CROSSPLATFORMS linux/386 linux/arm darwin/amd64 freebsd/amd64 freebsd/386 freebsd/arm windows/amd64 windows/386 solaris/amd64", 
                        "GO_TOOLS_COMMIT 823804e1ae08dbb14eb807afc7db9993bc9e3cc3", 
                        "GO_LINT_COMMIT 32a87160691b3c96046c0c678fe57c5bef761456", 
                        "CRIU_VERSION 2.12.1", 
                        "REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd", 
                        "REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827", 
                        "NOTARY_VERSION v0.5.0", 
                        "DOCKER_PY_COMMIT 4a08d04aef0595322e1b5ac7c52f28a931da85a5", 
                        "GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list", 
                        "apt-key add /go/src/github.com/docker/docker/keys/launchpad-ppa-zfs.asc", 
                        "echo deb http://ppa.launchpad.net/zfs-native/stable/ubuntu trusty main > /etc/apt/sources.list.d/zfs.list", 
                        "apt-get update && apt-get install -y apparmor apt-utils aufs-tools automake bash-completion binutils-mingw-w64 bsdmainutils btrfs-tools build-essential clang cmake createrepo curl dpkg-sig gcc-mingw-w64 git iptables jq less libapparmor-dev libcap-dev libltdl-dev libnl-3-dev libprotobuf-c0-dev libprotobuf-dev libsystemd-journal-dev libtool libzfs-dev mercurial net-tools pkg-config protobuf-compiler protobuf-c-compiler python-dev python-mock python-pip python-websocket tar ubuntu-zfs vim vim-common xfsprogs zip --no-install-recommends && pip install awscli==1.10.15", 
                        "mkdir -p /usr/local/lvm2 && curl -fsSL \"https://mirrors.kernel.org/sourceware/lvm2/LVM2.${LVM2_VERSION}.tgz\" | tar -xzC /usr/local/lvm2 --strip-components=1", 
                        "cd /usr/local/lvm2 && ./configure --build=\"$(gcc -print-multiarch)\" --enable-static_link && make device-mapper && make install_device-mapper", 
                        "set -x && export OSXCROSS_PATH=\"/osxcross\" && git clone https://github.com/tpoechtrager/osxcross.git $OSXCROSS_PATH && ( cd $OSXCROSS_PATH && git checkout -q $OSX_CROSS_COMMIT) && curl -sSL https://s3.dockerproject.org/darwin/v2/${OSX_SDK}.tar.xz -o \"${OSXCROSS_PATH}/tarballs/${OSX_SDK}.tar.xz\" && UNATTENDED=yes OSX_VERSION_MIN=10.6 ${OSXCROSS_PATH}/build.sh", 
                        "set -x && export SECCOMP_PATH=\"$(mktemp -d)\" && curl -fsSL \"https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz\" | tar -xzC \"$SECCOMP_PATH\" --strip-components=1 && ( cd \"$SECCOMP_PATH\" && ./configure --prefix=/usr/local && make && make install && ldconfig ) && rm -rf \"$SECCOMP_PATH\"", 
                        "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar -xzC /usr/local", 
                        "git clone https://github.com/golang/tools.git /go/src/golang.org/x/tools && (cd /go/src/golang.org/x/tools && git checkout -q $GO_TOOLS_COMMIT)", 
                        "git clone https://github.com/golang/lint.git /go/src/github.com/golang/lint && (cd /go/src/github.com/golang/lint && git checkout -q $GO_LINT_COMMIT) && go install -v github.com/golang/lint/golint", 
                        "apt-get install libnet-dev -y && mkdir -p /usr/src/criu && curl -sSL https://github.com/xemul/criu/archive/v${CRIU_VERSION}.tar.gz | tar -v -C /usr/src/criu/ -xz --strip-components=1 && cd /usr/src/criu && make && make install-criu", 
                        "set -x && export GOPATH=\"$(mktemp -d)\" && git clone https://github.com/docker/distribution.git \"$GOPATH/src/github.com/docker/distribution\" && (cd \"$GOPATH/src/github.com/docker/distribution\" && git checkout -q \"$REGISTRY_COMMIT\") && GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\" go build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry && (cd \"$GOPATH/src/github.com/docker/distribution\" && git checkout -q \"$REGISTRY_COMMIT_SCHEMA1\") && GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\" go build -o /usr/local/bin/registry-v2-schema1 github.com/docker/distribution/cmd/registry && rm -rf \"$GOPATH\"", 
                        "set -x && export GOPATH=\"$(mktemp -d)\" && git clone https://github.com/docker/notary.git \"$GOPATH/src/github.com/docker/notary\" && (cd \"$GOPATH/src/github.com/docker/notary\" && git checkout -q \"$NOTARY_VERSION\") && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary github.com/docker/notary/cmd/notary && rm -rf \"$GOPATH\"", 
                        "git clone https://github.com/docker/docker-py.git /docker-py && cd /docker-py && git checkout -q $DOCKER_PY_COMMIT && pip install docker-pycreds==0.2.1 && pip install -r test-requirements.txt", 
                        "pip install yamllint==1.5.0", 
                        "git clone https://github.com/go-swagger/go-swagger.git /go/src/github.com/go-swagger/go-swagger && (cd /go/src/github.com/go-swagger/go-swagger && git checkout -q $GO_SWAGGER_COMMIT) && go install -v github.com/go-swagger/go-swagger/cmd/swagger", 
                        "git config --global user.email 'docker-dummy@example.com'", 
                        "groupadd -r docker", 
                        "useradd --create-home --gid docker unprivilegeduser", 
                        "ln -sfv $PWD/.bashrc ~/.bashrc", 
                        "echo \"source $PWD/hack/make/.integration-test-helpers\" >> /etc/bash.bashrc", 
                        "ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker", 
                        "./contrib/download-frozen-image-v2.sh /docker-frozen-images buildpack-deps:jessie@sha256:85b379ec16065e4fe4127eb1c5fb1bcc03c559bd36dbb2e22ff496de55925fa6 busybox:latest@sha256:32f093055929dbc23dec4d03e09dfe971f5973a9ca5cf059cbfb644c206aa83f debian:jessie@sha256:72f784399fd2719b4cb4e16ef8e369a39dc67f53d978cd3e2e7bf4e502c7b793 hello-world:latest@sha256:c5515758d4c5e1e838e9cd307f6c6a0d620b5e07e6f927b07d05f6d12a1ac8d7", 
                        "/tmp/install-binaries.sh tomlv vndr runc containerd tini proxy bindata"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/go/src/github.com/docker/docker"
                    ]
                }, 
                "/builder/dockerfile/parser/testfile-line/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GOPATH \\"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "brimstone/ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "-v /var/run/docker.sock:/var/run/docker.sock", 
                        "apt-get update && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean && apt-get install -y --no-install-recommends git golang ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists && go get -v github.com/brimstone/consuldock && mv $GOPATH/bin/consuldock /usr/local/bin/consuldock && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty && apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') && rm /tmp/dpkg.* && rm -rf $GOPATH"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles-negative/env_no_value/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "PATH"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles-negative/shykes-nested-json/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"echo\", [ \"nested json\" ] ]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/ADD-COPY-with-JSON/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/brimstone-consuldock/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/local/bin/consuldock\"]"
                    ], 
                    "ENV": [
                        "GOPATH /go"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "brimstone/ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "brimstone@the.narro.ws"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "-v /var/run/docker.sock:/var/run/docker.sock", 
                        "apt-get update && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean && apt-get install -y --no-install-recommends git golang ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists && go get -v github.com/brimstone/consuldock && mv $GOPATH/bin/consuldock /usr/local/bin/consuldock && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty && apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') && rm /tmp/dpkg.* && rm -rf $GOPATH"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/brimstone-docker-consul/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/consul\", \"agent\", \"-server\", \"-data-dir=/consul\", \"-client=0.0.0.0\", \"-ui-dir=/webui\"]"
                    ], 
                    "ENV": [
                        "GOPATH /go"
                    ], 
                    "EXPOSE": [
                        "8500 8600 8400 8301 8302"
                    ], 
                    "FROM": [
                        "brimstone/ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y unzip wget && apt-get clean && rm -rf /var/lib/apt/lists", 
                        "cd /tmp && wget https://dl.bintray.com/mitchellh/consul/0.3.1_web_ui.zip -O web_ui.zip && unzip web_ui.zip && mv dist /webui && rm web_ui.zip", 
                        "apt-get update && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean && apt-get install -y --no-install-recommends unzip wget && apt-get clean && rm -rf /var/lib/apt/lists && cd /tmp && wget https://dl.bintray.com/mitchellh/consul/0.3.1_web_ui.zip -O web_ui.zip && unzip web_ui.zip && mv dist /webui && rm web_ui.zip && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty && apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') && rm /tmp/dpkg.*", 
                        "apt-get update && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean && apt-get install -y --no-install-recommends git golang ca-certificates build-essential && apt-get clean && rm -rf /var/lib/apt/lists && go get -v github.com/hashicorp/consul && mv $GOPATH/bin/consul /usr/bin/consul && dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty && apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') && rm /tmp/dpkg.* && rm -rf $GOPATH"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/continue-at-eof/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "alpine:3.5"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "something \\"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/continueIndent/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "echo helloworldgoodnight  moonlight\\", 
                        "echo hello  world", 
                        "echo hello  \\", 
                        "echo hello \\", 
                        "echo hello  \\", 
                        "echo hi world \\", 
                        "echo goodbye\\", 
                        "echo good\\", 
                        "echo hello \\"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/cpuguy83-nagios/Dockerfile": {
                    "ADD": [
                        "http://downloads.sourceforge.net/project/nagios/nagios-3.x/nagios-3.5.1/nagios-3.5.1.tar.gz?r=http%3A%2F%2Fwww.nagios.org%2Fdownload%2Fcore%2Fthanks%2F%3Ft%3D1398863696&ts=1398863718&use_mirror=superb-dca3 /tmp/nagios.tar.gz", 
                        "http://www.nagios-plugins.org/download/nagios-plugins-1.5.tar.gz /tmp/", 
                        "nagios.init /etc/sv/nagios/run", 
                        "apache.init /etc/sv/apache/run", 
                        "postfix.init /etc/sv/postfix/run", 
                        "postfix.stop /etc/sv/postfix/finish", 
                        "start.sh /usr/local/bin/start_nagios"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/local/bin/start_nagios\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "NAGIOS_HOME /opt/nagios", 
                        "NAGIOS_USER nagios", 
                        "NAGIOS_GROUP nagios", 
                        "NAGIOS_CMDUSER nagios", 
                        "NAGIOS_CMDGROUP nagios", 
                        "NAGIOSADMIN_USER nagiosadmin", 
                        "NAGIOSADMIN_PASS nagios", 
                        "APACHE_RUN_USER nagios", 
                        "APACHE_RUN_GROUP nagios", 
                        "NAGIOS_TIMEZONE UTC", 
                        "APACHE_LOCK_DIR /var/run", 
                        "APACHE_LOG_DIR /var/log/apache2"
                    ], 
                    "EXPOSE": [
                        "80"
                    ], 
                    "FROM": [
                        "cpuguy83/ubuntu"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -i 's/universe/universe multiverse/' /etc/apt/sources.list", 
                        "apt-get update && apt-get install -y iputils-ping netcat build-essential snmp snmpd snmp-mibs-downloader php5-cli apache2 libapache2-mod-php5 runit bc postfix bsd-mailx", 
                        "( egrep -i  \"^${NAGIOS_GROUP}\" /etc/group || groupadd $NAGIOS_GROUP ) && ( egrep -i \"^${NAGIOS_CMDGROUP}\" /etc/group || groupadd $NAGIOS_CMDGROUP )", 
                        "( id -u $NAGIOS_USER || useradd --system $NAGIOS_USER -g $NAGIOS_GROUP -d $NAGIOS_HOME ) && ( id -u $NAGIOS_CMDUSER || useradd --system -d $NAGIOS_HOME -g $NAGIOS_CMDGROUP $NAGIOS_CMDUSER )", 
                        "cd /tmp && tar -zxvf nagios.tar.gz && cd nagios  && ./configure --prefix=${NAGIOS_HOME} --exec-prefix=${NAGIOS_HOME} --enable-event-broker --with-nagios-command-user=${NAGIOS_CMDUSER} --with-command-group=${NAGIOS_CMDGROUP} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} && make all && make install && make install-config && make install-commandmode && cp sample-config/httpd.conf /etc/apache2/conf.d/nagios.conf", 
                        "cd /tmp && tar -zxvf nagios-plugins-1.5.tar.gz && cd nagios-plugins-1.5 && ./configure --prefix=${NAGIOS_HOME} && make && make install", 
                        "sed -i.bak 's/.*\\=www\\-data//g' /etc/apache2/envvars", 
                        "export DOC_ROOT=\"DocumentRoot $(echo $NAGIOS_HOME/share)\"; sed -i \"s,DocumentRoot.*,$DOC_ROOT,\" /etc/apache2/sites-enabled/000-default", 
                        "ln -s ${NAGIOS_HOME}/bin/nagios /usr/local/bin/nagios && mkdir -p /usr/share/snmp/mibs && chmod 0755 /usr/share/snmp/mibs && touch /usr/share/snmp/mibs/.foo", 
                        "echo \"use_timezone=$NAGIOS_TIMEZONE\" >> ${NAGIOS_HOME}/etc/nagios.cfg && echo \"SetEnv TZ \\\"${NAGIOS_TIMEZONE}\\\"\" >> /etc/apache2/conf.d/nagios.conf", 
                        "mkdir -p ${NAGIOS_HOME}/etc/conf.d && mkdir -p ${NAGIOS_HOME}/etc/monitor && ln -s /usr/share/snmp/mibs ${NAGIOS_HOME}/libexec/mibs", 
                        "echo \"cfg_dir=${NAGIOS_HOME}/etc/conf.d\" >> ${NAGIOS_HOME}/etc/nagios.cfg", 
                        "echo \"cfg_dir=${NAGIOS_HOME}/etc/monitor\" >> ${NAGIOS_HOME}/etc/nagios.cfg", 
                        "download-mibs && echo \"mibs +ALL\" > /etc/snmp/snmp.conf", 
                        "sed -i 's,/bin/mail,/usr/bin/mail,' /opt/nagios/etc/objects/commands.cfg && sed -i 's,/usr/usr,/usr,' /opt/nagios/etc/objects/commands.cfg", 
                        "cp /etc/services /var/spool/postfix/etc/", 
                        "mkdir -p /etc/sv/nagios && mkdir -p /etc/sv/apache && rm -rf /etc/sv/getty-5 && mkdir -p /etc/sv/postfix"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "nagios", 
                        "nagios", 
                        "nagiosadmin", 
                        "nagios", 
                        "|| useradd --system $NAGIOS_USER -g $NAGIOS_GROUP -d $NAGIOS_HOME ) && ( id -u $NAGIOS_CMDUSER || useradd --system -d $NAGIOS_HOME -g $NAGIOS_CMDGROUP $NAGIOS_CMDUSER )"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/docker/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "groupadd -r docker", 
                        "useradd --create-home --gid docker unprivilegeduser"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/env/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "name value", 
                        "name=value", 
                        "name=value name2=value2", 
                        "name=\"value value1\"", 
                        "name=value\\ value2", 
                        "name=\"value'quote space'value2\"", 
                        "name='value\"double quote\"value2'", 
                        "name=value\\ value2 name2=value2\\ value3", 
                        "name=\"a\\\"b\"", 
                        "name=\"a\\'b\"", 
                        "name='a\\'b'", 
                        "name='a\\'b''", 
                        "name='a\\\"b'", 
                        "name=\"''\"", 
                        "name=value name1=value1 name2=\"value2a value2b\" name3=\"value3a\\n\\\"value3b\\\"\" name4=\"value4a\\\\nvalue4b\" \\"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/escape-after-comment/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GOPATH \\"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "image"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "foo@bar.com"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/escape-nonewline/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GOPATH `"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "image"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "foo@bar.com"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/escape/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GOPATH `"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "image"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "foo@bar.com"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/escapes/Dockerfile": {
                    "ADD": [
                        "\\conf\\\\\" /.znc"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"\\/usr\\\\\\\"/bin/znc\", \"-f\", \"-r\" ]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Erik \\\\Hollensbe <erik@hollensbe.org>\\\""
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get \\update && apt-get \\\"install znc -y", 
                        "foo bar baz"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/flags/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "--doit [ \"a\", \"b\" ]", 
                        "--doit=true -- [ \"a\", \"b\" ]", 
                        "--doit -- [ ]"
                    ], 
                    "COPY": [
                        "foo /tmp/", 
                        "--user=me foo /tmp/", 
                        "--doit=true foo /tmp/", 
                        "--user=me --doit=true foo /tmp/", 
                        "--doit=true -- foo /tmp/", 
                        "-- foo /tmp/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/health/Dockerfile": {
                    "ADD": [
                        "check.sh main.sh /app/"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "/app/main.sh", 
                        "/app/check.sh --quiet", 
                        "a b", 
                        "[\"foo\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian"
                    ], 
                    "HEALTHCHECK": [
                        "--interval=5s --timeout=3s --retries=3 CMD /app/check.sh --quiet", 
                        "CMD", 
                        "CMD   a b", 
                        "--timeout=3s CMD [\"foo\"]", 
                        "CONNECT TCP 7000"
                    ], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/influxdb/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "/usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "8083", 
                        "8086", 
                        "8090", 
                        "8099"
                    ], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install wget -y", 
                        "wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb", 
                        "dpkg -i influxdb_latest_amd64.deb", 
                        "rm -r /opt/influxdb/shared"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/jeztah-invalid-json-json-inside-string-double/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "\"[\\\"echo\\\", \\\"Phew, I just managed to escaped those double quotes\\\"]\""
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/jeztah-invalid-json-json-inside-string/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "'[\"echo\", \"Well, JSON in a string is JSON too?\"]'"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/jeztah-invalid-json-single-quotes/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "['echo','single quotes are invalid JSON']"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/jeztah-invalid-json-unterminated-bracket/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"echo\", \"Please, close the brackets when you're done\""
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/jeztah-invalid-json-unterminated-string/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"echo\", \"look ma, no quote!]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/json/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[]", 
                        "[\"\"]", 
                        "[\"a\"]", 
                        "[\"a\",\"b\"]", 
                        "[ \"a\", \"b\" ]", 
                        "[\t\"a\",\t\"b\"\t]", 
                        "[\"abc 123\", \"\u2665\", \"\u2603\", \"\\\" \\\\ \\/ \\b \\f \\n \\r \\t \\u0000\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/kartar-entrypoint-oddities/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[ \"/usr/bin/redis-server\" ]"
                    ], 
                    "ENV": [
                        "REFRESHED_AT 2014-06-01"
                    ], 
                    "EXPOSE": [
                        "6379"
                    ], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "James Turnbull \"james@example.com\""
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get -y install redis-server redis-tools"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/lk4d4-the-edge-case-generator/Dockerfile": {
                    "ADD": [
                        ". /"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "\\", 
                        "[\"echo\", \"test\"]", 
                        "echo test", 
                        "echo \"test\"", 
                        "echo 'test'", 
                        "echo 'test' | wc -"
                    ], 
                    "COPY": [
                        ". /", 
                        ". copy"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "\\", 
                        "SCUBA 1 DUBA 3", 
                        "SCUBA \"1 DUBA 3\""
                    ], 
                    "EXPOSE": [
                        "3000", 
                        "9000 5000 6000"
                    ], 
                    "FROM": [
                        "busybox:buildroot-2014.02"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "docker <docker@docker.io>"
                    ], 
                    "ONBUILD": [
                        "RUN [\"echo\", \"test\"]", 
                        "RUN echo test", 
                        "COPY . /"
                    ], 
                    "RUN": [
                        "[\"echo\", \"test\"]", 
                        "echo test", 
                        "Commands \\", 
                        "[\"ls\", \"-la\"]", 
                        "[\"echo\", \"'1234'\"]", 
                        "echo \"1234\"", 
                        "echo 1234", 
                        "echo '1234' && echo \"456\" && echo 789", 
                        "sh -c 'echo root:testpass > /tmp/passwd'", 
                        "mkdir -p /test /test2 /test3/test"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "docker", 
                        "docker:root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/test"
                    ]
                }, 
                "/builder/dockerfile/parser/testfiles/mail/Dockerfile": {
                    "ADD": [
                        ".muttrc /", 
                        ".offlineimaprc /", 
                        ".tmux.conf /", 
                        "mutt /.mutt", 
                        "vim /.vim", 
                        "vimrc /.vimrc", 
                        "crontab /etc/crontab"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "setsid cron; tmux -2"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -qy && apt-get install mutt offlineimap vim-nox abook elinks curl tmux cron zsh -y", 
                        "chmod 644 /etc/crontab", 
                        "mkdir /Mail", 
                        "mkdir /.offlineimap", 
                        "echo \"export TERM=screen-256color\" >/.zshenv"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/multiple-volumes/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "foo"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/mumble/Dockerfile": {
                    "ADD": [
                        "./mumble-server.ini /etc/mumble-server.ini"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "/usr/sbin/murmurd"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install libcap2-bin mumble-server -y"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/nginx/Dockerfile": {
                    "ADD": [
                        "etc /etc/nginx"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/sbin/nginx\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "80"
                    ], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Erik Hollensbe <erik@hollensbe.org>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install nginx-full -y", 
                        "rm -rf /etc/nginx", 
                        "chown -R root:root /etc/nginx", 
                        "/usr/sbin/nginx -qt", 
                        "mkdir /www"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/tf2/Dockerfile": {
                    "ADD": [
                        "./script /steam/script", 
                        "./server.cfg /steam/tf2/tf/cfg/server.cfg", 
                        "./ctf_2fort.cfg /steam/tf2/tf/cfg/ctf_2fort.cfg", 
                        "./sourcemod.cfg /steam/tf2/tf/cfg/sourcemod/sourcemod.cfg", 
                        "./configs /steam/tf2/tf/addons/sourcemod/configs"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "cd /steam/tf2 && ./srcds_run -port 27015 +ip 0.0.0.0 +map ctf_2fort -autoupdate -steam_dir /steam -steamcmd_script /steam/script +tf_bot_quota 12 +tf_bot_quota_mode fill"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "27015", 
                        "27005", 
                        "26901", 
                        "27020"
                    ], 
                    "FROM": [
                        "ubuntu:12.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install libc6-dev-i386 curl unzip -y", 
                        "mkdir -p /steam", 
                        "curl http://media.steampowered.com/client/steamcmd_linux.tar.gz | tar vxz -C /steam", 
                        "/steam/steamcmd.sh +runscript /steam/script", 
                        "curl http://mirror.pointysoftware.net/alliedmodders/mmsource-1.10.0-linux.tar.gz | tar vxz -C /steam/tf2/tf", 
                        "curl http://mirror.pointysoftware.net/alliedmodders/sourcemod-1.5.3-linux.tar.gz | tar vxz -C /steam/tf2/tf", 
                        "rm -r /steam/tf2/tf/addons/sourcemod/configs", 
                        "mkdir -p /steam/tf2/tf/addons/sourcemod/translations/en", 
                        "cp /steam/tf2/tf/addons/sourcemod/translations/*.txt /steam/tf2/tf/addons/sourcemod/translations/en"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/weechat/Dockerfile": {
                    "ADD": [
                        ".weechat /.weechat", 
                        ".tmux.conf /"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "zsh -c weechat"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -qy && apt-get install tmux zsh weechat-curses -y", 
                        "echo \"export TERM=screen-256color\" >/.zshenv"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/builder/dockerfile/parser/testfiles/znc/Dockerfile": {
                    "ADD": [
                        "conf /.znc"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"/usr/bin/znc\", \"-f\", \"-r\" ]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:14.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Erik Hollensbe <erik@hollensbe.org>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install znc -y"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/aarch64/debian-jessie/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH /usr/src/go/bin:$PATH", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux seccomp", 
                        "RUNC_BUILDTAGS apparmor selinux seccomp"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "aarch64/debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "echo deb http://ftp.debian.org/debian jessie-backports main > /etc/apt/sources.list.d/backports.list", 
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libsystemd-journal-dev golang-1.6-go libseccomp-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "update-alternatives --install /usr/bin/go go /usr/lib/go-1.6/bin/go 100", 
                        "mkdir /usr/src/go && curl -fsSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/src/go -xz --strip-components=1 && cd /usr/src/go/src && GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" ./make.bash"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/aarch64/debian-stretch/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH /usr/src/go/bin:$PATH", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux seccomp", 
                        "RUNC_BUILDTAGS apparmor selinux seccomp"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "aarch64/debian:stretch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libsystemd-dev golang-go libseccomp-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "mkdir /usr/src/go && curl -fsSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/src/go -xz --strip-components=1 && cd /usr/src/go/src && GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" ./make.bash"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/aarch64/ubuntu-trusty/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH /usr/src/go/bin:$PATH", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "aarch64/ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libsystemd-journal-dev golang-1.6-go --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "update-alternatives --install /usr/bin/go go /usr/lib/go-1.6/bin/go 100", 
                        "mkdir /usr/src/go && curl -fsSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/src/go -xz --strip-components=1 && cd /usr/src/go/src && GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" ./make.bash"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/aarch64/ubuntu-xenial/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH /usr/src/go/bin:$PATH", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux seccomp", 
                        "RUNC_BUILDTAGS apparmor selinux seccomp"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "aarch64/ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libsystemd-dev golang-go libseccomp-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "mkdir /usr/src/go && curl -fsSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/src/go -xz --strip-components=1 && cd /usr/src/go/src && GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" ./make.bash"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/debian-jessie/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "APT_MIRROR=deb.debian.org"
                    ], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list", 
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev  pkg-config vim-common libsystemd-journal-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/debian-stretch/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "APT_MIRROR=deb.debian.org"
                    ], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:stretch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list", 
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config vim-common libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/debian-wheezy/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "APT_MIRROR=deb.debian.org"
                    ], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:wheezy-backports"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list", 
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list.d/backports.list", 
                        "apt-get update && apt-get install -y -t wheezy-backports btrfs-tools --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "apt-get update && apt-get install -y apparmor bash-completion  build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev  pkg-config vim-common --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/ubuntu-trusty/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev  pkg-config vim-common libsystemd-journal-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/ubuntu-xenial/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config vim-common libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/ubuntu-yakkety/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:yakkety"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config vim-common libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/amd64/ubuntu-zesty/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:zesty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config vim-common libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/armhf/debian-jessie/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "APT_MIRROR=deb.debian.org"
                    ], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "armhf/debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list", 
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev  pkg-config vim-common libsystemd-journal-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-armv6l.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/armhf/raspbian-jessie/Dockerfile": {
                    "ADD": [], 
                    "ARG": [
                        "APT_MIRROR=deb.debian.org"
                    ], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "GOARM 6", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "resin/rpi-raspbian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list", 
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev  pkg-config vim-common libsystemd-journal-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-armv6l.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/armhf/ubuntu-trusty/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "armhf/ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev  pkg-config vim-common libsystemd-journal-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-armv6l.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/armhf/ubuntu-xenial/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "armhf/ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config vim-common libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-armv6l.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/armhf/ubuntu-yakkety/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "armhf/ubuntu:yakkety"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config vim-common libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-armv6l.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/ppc64le/ubuntu-trusty/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ppc64le/ubuntu:trusty"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libsystemd-journal-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-ppc64le.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/ppc64le/ubuntu-xenial/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ppc64le/ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libseccomp-dev libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-ppc64le.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/ppc64le/ubuntu-yakkety/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ppc64le/ubuntu:yakkety"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev pkg-config vim-common libseccomp-dev libsystemd-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-ppc64le.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/s390x/ubuntu-xenial/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 selinux", 
                        "RUNC_BUILDTAGS apparmor selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "s390x/ubuntu:xenial"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config libsystemd-dev vim-common --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-s390x.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/deb/s390x/ubuntu-yakkety/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS apparmor pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS apparmor selinux seccomp"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "s390x/ubuntu:yakkety"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y apparmor bash-completion btrfs-tools build-essential cmake curl ca-certificates debhelper dh-apparmor dh-systemd git libapparmor-dev libdevmapper-dev libltdl-dev libseccomp-dev pkg-config libsystemd-dev vim-common --no-install-recommends && rm -rf /var/lib/apt/lists/*", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-s390x.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/amazonlinux-latest/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "amazonlinux:latest"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum groupinstall -y \"Development Tools\"", 
                        "yum install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel  tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/centos-7/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "centos:7"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum groupinstall -y \"Development Tools\"", 
                        "yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs", 
                        "yum install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel systemd-devel tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/fedora-24/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora:24"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "dnf -y upgrade", 
                        "dnf install -y @development-tools fedora-packager", 
                        "dnf install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel systemd-devel tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/fedora-25/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "fedora:25"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "dnf -y upgrade", 
                        "dnf install -y @development-tools fedora-packager", 
                        "dnf install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel systemd-devel tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/opensuse-13.2/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 selinux", 
                        "RUNC_BUILDTAGS selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "opensuse:13.2"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "zypper --non-interactive install ca-certificates* curl gzip rpm-build", 
                        "zypper --non-interactive install libbtrfs-devel device-mapper-devel glibc-static  libselinux-devel libtool-ltdl-devel pkg-config selinux-policy selinux-policy-devel systemd-devel tar git cmake vim systemd-rpm-macros", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/oraclelinux-6/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 selinux", 
                        "RUNC_BUILDTAGS selinux", 
                        "CGO_CPPFLAGS -D__EXPORTED_HEADERS__ -I/usr/src/kernels/4.1.12-32.el6uek.x86_64/arch/x86/include/generated/uapi -I/usr/src/kernels/4.1.12-32.el6uek.x86_64/arch/x86/include/uapi -I/usr/src/kernels/4.1.12-32.el6uek.x86_64/include/generated/uapi -I/usr/src/kernels/4.1.12-32.el6uek.x86_64/include/uapi -I/usr/src/kernels/4.1.12-32.el6uek.x86_64/include"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "oraclelinux:6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum install -y yum-utils && curl -o /etc/yum.repos.d/public-yum-ol6.repo http://yum.oracle.com/public-yum-ol6.repo && yum-config-manager -q --enable ol6_UEKR4", 
                        "yum install -y kernel-uek-devel-4.1.12-32.el6uek", 
                        "yum groupinstall -y \"Development Tools\"", 
                        "yum install -y btrfs-progs-devel device-mapper-devel glibc-static  libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel  tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/oraclelinux-7/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "oraclelinux:7"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum groupinstall -y \"Development Tools\"", 
                        "yum install -y --enablerepo=ol7_optional_latest btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel systemd-devel tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/amd64/photon-1.0/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "photon:1.0"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "tdnf install -y wget curl ca-certificates gzip make rpm-build sed gcc linux-api-headers glibc-devel binutils libseccomp libltdl-devel elfutils", 
                        "tdnf install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkg-config selinux-policy selinux-policy-devel systemd-devel tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/armhf/centos-7/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.4", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "multiarch/centos:7.2.1511-armhfp-clean"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "yum install -y yum-plugin-ovl", 
                        "yum groupinstall --skip-broken -y \"Development Tools\"", 
                        "yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs", 
                        "yum install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel sqlite-devel systemd-devel tar git cmake vim-common", 
                        "curl -fSL \"https://golang.org/dl/go${GO_VERSION}.linux-armv6l.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/builder/rpm/ppc64le/fedora-24/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [
                        "GO_VERSION 1.7.5", 
                        "PATH $PATH:/usr/local/go/bin", 
                        "AUTO_GOPATH 1", 
                        "DOCKER_BUILDTAGS pkcs11 seccomp selinux", 
                        "RUNC_BUILDTAGS seccomp selinux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ppc64le/fedora:24"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "dnf -y upgrade", 
                        "dnf install -y @development-tools fedora-packager", 
                        "dnf install -y btrfs-progs-devel device-mapper-devel glibc-static libseccomp-devel libselinux-devel libtool-ltdl-devel pkgconfig selinux-policy selinux-policy-devel systemd-devel tar git cmake", 
                        "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-ppc64le.tar.gz\" | tar xzC /usr/local"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/desktop-integration/chromium/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/bin/chromium\", \"--no-sandbox\", \"--user-data-dir=/data\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Jessica Frazelle <jess@docker.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y chromium chromium-l10n libcanberra-gtk-module libexif-dev --no-install-recommends"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/desktop-integration/gparted/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/usr/sbin/gparted\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "debian:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Jessica Frazelle <jess@docker.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y gparted libcanberra-gtk-module --no-install-recommends"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/httpserver/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"./httpserver\"]"
                    ], 
                    "COPY": [
                        "httpserver ."
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "80/tcp"
                    ], 
                    "FROM": [
                        "busybox"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/contrib/nnp-test/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        ". /usr/src/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "buildpack-deps:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "gcc -g -Wall -static nnp-test.c -o /usr/bin/nnp-test", 
                        "chmod +s /usr/bin/nnp-test"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/usr/src/"
                    ]
                }, 
                "/contrib/syscall-test/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        ". /usr/src/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "buildpack-deps:jessie"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "gcc -g -Wall -static userns.c -o /usr/bin/userns-test && gcc -g -Wall -static ns.c -o /usr/bin/ns-test && gcc -g -Wall -static acct.c -o /usr/bin/acct-test && gcc -g -Wall -static setuid.c -o /usr/bin/setuid-test && gcc -g -Wall -static setgid.c -o /usr/bin/setgid-test && gcc -g -Wall -static socket.c -o /usr/bin/socket-test && gcc -g -Wall -static raw.c -o /usr/bin/raw-test && gcc -g -Wall -static appletalk.c -o /usr/bin/appletalk-test", 
                        "[ \"$(uname -m)\" = \"x86_64\" ] && gcc -s -m32 -nostdlib exit32.s -o /usr/bin/exit32-test || true"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/usr/src/"
                    ]
                }, 
                "/docs/yaml/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "cannot be nil so we set it to empty string", 
                        "[\"\"]"
                    ], 
                    "COPY": [
                        "docs /docs"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "scratch"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/hack/integration-cli-on-swarm/agent/Dockerfile": {
                    "ADD": [
                        ". /go/src/github.com/docker/docker/hack/integration-cli-on-swarm/agent"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/master\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "golang:1.7"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "go build -o /master github.com/docker/docker/hack/integration-cli-on-swarm/agent/master"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/man/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "glide.yaml /manvendor/", 
                        "glide.lock /manvendor/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"man/generate.sh\"]"
                    ], 
                    "ENV": [
                        "GOPATH=$GOPATH:/manvendor"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "golang:1.7.5-alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apk add -U git bash curl gcc musl-dev make", 
                        "mkdir -p /go/src /go/bin /go/pkg", 
                        "export GLIDE=v0.11.1; export TARGET=/go/src/github.com/Masterminds; mkdir -p ${TARGET} && git clone https://github.com/Masterminds/glide.git ${TARGET}/glide && cd ${TARGET}/glide && git checkout $GLIDE && make build && cp ./glide /usr/bin/glide && cd / && rm -rf /go/src/* /go/bin/* /go/pkg/*", 
                        "glide install && mv vendor src", 
                        "go build -o /usr/bin/go-md2man github.com/cpuguy83/go-md2man"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/manvendor/", 
                        "/go/src/github.com/docker/docker/"
                    ]
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/moby/moby/git/blobs/f768ff844995a77a0d3411f0b2db4227426a2ac1", 
                    "html": "https://github.com/moby/moby/blob/master/README.md", 
                    "self": "https://api.github.com/repos/moby/moby/contents/README.md?ref=master"
                }, 
                "content": "IyMjIERvY2tlciB1c2Vycywgc2VlIFtNb2J5IGFuZCBEb2NrZXJdKGh0dHBz\nOi8vbW9ieXByb2plY3Qub3JnLyNtb2J5LWFuZC1kb2NrZXIpIHRvIGNsYXJp\nZnkgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBwcm9qZWN0cwoKIyMj\nIERvY2tlciBtYWludGFpbmVycyBhbmQgY29udHJpYnV0b3JzLCBzZWUgW1Ry\nYW5zaXRpb25pbmcgdG8gTW9ieV0oI3RyYW5zaXRpb25pbmctdG8tbW9ieSkg\nZm9yIG1vcmUgZGV0YWlscwoKVGhlIE1vYnkgUHJvamVjdAo9PT09PT09PT09\nPT09PT09CgohW01vYnkgUHJvamVjdCBsb2dvXShkb2NzL3N0YXRpY19maWxl\ncy9tb2J5LXByb2plY3QtbG9nby5wbmcgIlRoZSBNb2J5IFByb2plY3QiKQoK\nTW9ieSBpcyBhbiBvcGVuLXNvdXJjZSBwcm9qZWN0IGNyZWF0ZWQgYnkgRG9j\na2VyIHRvIGFkdmFuY2UgdGhlIHNvZnR3YXJlIGNvbnRhaW5lcml6YXRpb24g\nbW92ZW1lbnQuCkl0IHByb3ZpZGVzIGEg4oCcTGVnbyBzZXTigJ0gb2YgZG96\nZW5zIG9mIGNvbXBvbmVudHMsIHRoZSBmcmFtZXdvcmsgZm9yIGFzc2VtYmxp\nbmcgdGhlbSBpbnRvIGN1c3RvbSBjb250YWluZXItYmFzZWQgc3lzdGVtcywg\nYW5kIGEgcGxhY2UgZm9yIGFsbCBjb250YWluZXIgZW50aHVzaWFzdHMgdG8g\nZXhwZXJpbWVudCBhbmQgZXhjaGFuZ2UgaWRlYXMuCgojIE1vYnkKCiMjIE92\nZXJ2aWV3CgpBdCB0aGUgY29yZSBvZiBNb2J5IGlzIGEgZnJhbWV3b3JrIHRv\nIGFzc2VtYmxlIHNwZWNpYWxpemVkIGNvbnRhaW5lciBzeXN0ZW1zLgpJdCBw\ncm92aWRlczoKCi0gQSBsaWJyYXJ5IG9mIGNvbnRhaW5lcml6ZWQgY29tcG9u\nZW50cyBmb3IgYWxsIHZpdGFsIGFzcGVjdHMgb2YgYSBjb250YWluZXIgc3lz\ndGVtOiBPUywgY29udGFpbmVyIHJ1bnRpbWUsIG9yY2hlc3RyYXRpb24sIGlu\nZnJhc3RydWN0dXJlIG1hbmFnZW1lbnQsIG5ldHdvcmtpbmcsIHN0b3JhZ2Us\nIHNlY3VyaXR5LCBidWlsZCwgaW1hZ2UgZGlzdHJpYnV0aW9uLCBldGMuCi0g\nVG9vbHMgdG8gYXNzZW1ibGUgdGhlIGNvbXBvbmVudHMgaW50byBydW5uYWJs\nZSBhcnRpZmFjdHMgZm9yIGEgdmFyaWV0eSBvZiBwbGF0Zm9ybXMgYW5kIGFy\nY2hpdGVjdHVyZXM6IGJhcmUgbWV0YWwgKGJvdGggeDg2IGFuZCBBcm0pOyBl\neGVjdXRhYmxlcyBmb3IgTGludXgsIE1hYyBhbmQgV2luZG93czsgVk0gaW1h\nZ2VzIGZvciBwb3B1bGFyIGNsb3VkIGFuZCB2aXJ0dWFsaXphdGlvbiBwcm92\naWRlcnMuCi0gQSBzZXQgb2YgcmVmZXJlbmNlIGFzc2VtYmxpZXMgd2hpY2gg\nY2FuIGJlIHVzZWQgYXMtaXMsIG1vZGlmaWVkLCBvciB1c2VkIGFzIGluc3Bp\ncmF0aW9uIHRvIGNyZWF0ZSB5b3VyIG93bi4KCkFsbCBNb2J5IGNvbXBvbmVu\ndHMgYXJlIGNvbnRhaW5lcnMsIHNvIGNyZWF0aW5nIG5ldyBjb21wb25lbnRz\nIGlzIGFzIGVhc3kgYXMgYnVpbGRpbmcgYSBuZXcgT0NJLWNvbXBhdGlibGUg\nY29udGFpbmVyLgoKIyMgUHJpbmNpcGxlcwoKTW9ieSBpcyBhbiBvcGVuIHBy\nb2plY3QgZ3VpZGVkIGJ5IHN0cm9uZyBwcmluY2lwbGVzLCBidXQgbW9kdWxh\nciwgZmxleGlibGUgYW5kIHdpdGhvdXQgdG9vIHN0cm9uZyBhbiBvcGluaW9u\nIG9uIHVzZXIgZXhwZXJpZW5jZSwgc28gaXQgaXMgb3BlbiB0byB0aGUgY29t\nbXVuaXR5IHRvIGhlbHAgc2V0IGl0cyBkaXJlY3Rpb24uClRoZSBndWlkaW5n\nIHByaW5jaXBsZXMgYXJlOgoKLSBCYXR0ZXJpZXMgaW5jbHVkZWQgYnV0IHN3\nYXBwYWJsZTogTW9ieSBpbmNsdWRlcyBlbm91Z2ggY29tcG9uZW50cyB0byBi\ndWlsZCBmdWxseSBmZWF0dXJlZCBjb250YWluZXIgc3lzdGVtLCBidXQgaXRz\nIG1vZHVsYXIgYXJjaGl0ZWN0dXJlIGVuc3VyZXMgdGhhdCBtb3N0IG9mIHRo\nZSBjb21wb25lbnRzIGNhbiBiZSBzd2FwcGVkIGJ5IGRpZmZlcmVudCBpbXBs\nZW1lbnRhdGlvbnMuCi0gVXNhYmxlIHNlY3VyaXR5OiBNb2J5IHdpbGwgcHJv\ndmlkZSBzZWN1cmUgZGVmYXVsdHMgd2l0aG91dCBjb21wcm9taXNpbmcgdXNh\nYmlsaXR5LgotIENvbnRhaW5lciBjZW50cmljOiBNb2J5IGlzIGJ1aWx0IHdp\ndGggY29udGFpbmVycywgZm9yIHJ1bm5pbmcgY29udGFpbmVycy4KCldpdGgg\nTW9ieSwgeW91IHNob3VsZCBiZSBhYmxlIHRvIGRlc2NyaWJlIGFsbCB0aGUg\nY29tcG9uZW50cyBvZiB5b3VyIGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9uLCBm\ncm9tIHRoZSBoaWdoLWxldmVsIGNvbmZpZ3VyYXRpb24gZmlsZXMgZG93biB0\nbyB0aGUga2VybmVsIHlvdSB3b3VsZCBsaWtlIHRvIHVzZSBhbmQgYnVpbGQg\nYW5kIGRlcGxveSBpdCBlYXNpbHkuCgpNb2J5IHVzZXMgW2NvbnRhaW5lcmRd\nKGh0dHBzOi8vZ2l0aHViLmNvbS9jb250YWluZXJkL2NvbnRhaW5lcmQpIGFz\nIHRoZSBkZWZhdWx0IGNvbnRhaW5lciBydW50aW1lLgoKIyMgQXVkaWVuY2UK\nCk1vYnkgaXMgcmVjb21tZW5kZWQgZm9yIGFueW9uZSB3aG8gd2FudHMgdG8g\nYXNzZW1ibGUgYSBjb250YWluZXItYmFzZWQgc3lzdGVtLiBUaGlzIGluY2x1\nZGVzOgoKLSBIYWNrZXJzIHdobyB3YW50IHRvIGN1c3RvbWl6ZSBvciBwYXRj\naCB0aGVpciBEb2NrZXIgYnVpbGQKLSBTeXN0ZW0gZW5naW5lZXJzIG9yIGlu\ndGVncmF0b3JzIGJ1aWxkaW5nIGEgY29udGFpbmVyIHN5c3RlbQotIEluZnJh\nc3RydWN0dXJlIHByb3ZpZGVycyBsb29raW5nIHRvIGFkYXB0IGV4aXN0aW5n\nIGNvbnRhaW5lciBzeXN0ZW1zIHRvIHRoZWlyIGVudmlyb25tZW50Ci0gQ29u\ndGFpbmVyIGVudGh1c2lhc3RzIHdobyB3YW50IHRvIGV4cGVyaW1lbnQgd2l0\naCB0aGUgbGF0ZXN0IGNvbnRhaW5lciB0ZWNoCi0gT3Blbi1zb3VyY2UgZGV2\nZWxvcGVycyBsb29raW5nIHRvIHRlc3QgdGhlaXIgcHJvamVjdCBpbiBhIHZh\ncmlldHkgb2YgZGlmZmVyZW50IHN5c3RlbXMKLSBBbnlvbmUgY3VyaW91cyBh\nYm91dCBEb2NrZXIgaW50ZXJuYWxzIGFuZCBob3cgaXTigJlzIGJ1aWx0CgpN\nb2J5IGlzIE5PVCByZWNvbW1lbmRlZCBmb3I6CgotIEFwcGxpY2F0aW9uIGRl\ndmVsb3BlcnMgbG9va2luZyBmb3IgYW4gZWFzeSB3YXkgdG8gcnVuIHRoZWly\nIGFwcGxpY2F0aW9ucyBpbiBjb250YWluZXJzLiBXZSByZWNvbW1lbmQgRG9j\na2VyIENFIGluc3RlYWQuCi0gRW50ZXJwcmlzZSBJVCBhbmQgZGV2ZWxvcG1l\nbnQgdGVhbXMgbG9va2luZyBmb3IgYSByZWFkeS10by11c2UsIGNvbW1lcmNp\nYWxseSBzdXBwb3J0ZWQgY29udGFpbmVyIHBsYXRmb3JtLiBXZSByZWNvbW1l\nbmQgRG9ja2VyIEVFIGluc3RlYWQuCi0gQW55b25lIGN1cmlvdXMgYWJvdXQg\nY29udGFpbmVycyBhbmQgbG9va2luZyBmb3IgYW4gZWFzeSB3YXkgdG8gbGVh\ncm4uIFdlIHJlY29tbWVuZCB0aGUgZG9ja2VyLmNvbSB3ZWJzaXRlIGluc3Rl\nYWQuCgojIFRyYW5zaXRpb25pbmcgdG8gTW9ieQoKRG9ja2VyIGlzIHRyYW5z\naXRpb25pbmcgYWxsIG9mIGl0cyBvcGVuIHNvdXJjZSBjb2xsYWJvcmF0aW9u\ncyB0byB0aGUgTW9ieSBwcm9qZWN0IGdvaW5nIGZvcndhcmQuCkR1cmluZyB0\naGUgdHJhbnNpdGlvbiwgYWxsIG9wZW4gc291cmNlIGFjdGl2aXR5IHNob3Vs\nZCBjb250aW51ZSBhcyB1c3VhbC4KCldlIGFyZSBwcm9wb3NpbmcgdGhlIGZv\nbGxvd2luZyBsaXN0IG9mIGNoYW5nZXM6CgotIHNwbGl0dGluZyB1cCB0aGUg\nZW5naW5lIGludG8gbW9yZSBvcGVuIGNvbXBvbmVudHMKLSByZW1vdmluZyB0\naGUgZG9ja2VyIFVJLCBTREsgZXRjIHRvIGtlZXAgdGhlbSBpbiB0aGUgRG9j\na2VyIG9yZwotIGNsYXJpZnlpbmcgdGhhdCB0aGUgcHJvamVjdCBpcyBub3Qg\nbGltaXRlZCB0byB0aGUgZW5naW5lLCBidXQgdG8gdGhlIGFzc2VtYmx5IG9m\nIGFsbCB0aGUgaW5kaXZpZHVhbCBjb21wb25lbnRzIG9mIHRoZSBEb2NrZXIg\ncGxhdGZvcm0KLSBvcGVuLXNvdXJjZSBuZXcgdG9vbHMgJiBjb21wb25lbnRz\nIHdoaWNoIHdlIGN1cnJlbnRseSB1c2UgdG8gYXNzZW1ibGUgdGhlIERvY2tl\nciBwcm9kdWN0LCBidXQgY291bGQgYmVuZWZpdCB0aGUgY29tbXVuaXR5Ci0g\nZGVmaW5pbmcgYW4gb3BlbiwgY29tbXVuaXR5LWNlbnRyaWMgZ292ZXJuYW5j\nZSBpbnNwaXJlZCBieSB0aGUgRmVkb3JhIHByb2plY3QgKGEgdmVyeSBzdWNj\nZXNzZnVsIGV4YW1wbGUgb2YgYmFsYW5jaW5nIHRoZSBuZWVkcyBvZiB0aGUg\nY29tbXVuaXR5IHdpdGggdGhlIGNvbnN0cmFpbnRzIG9mIHRoZSBwcmltYXJ5\nIGNvcnBvcmF0ZSBzcG9uc29yKQoKLS0tLS0KCkxlZ2FsCj09PT09CgoqQnJv\ndWdodCB0byB5b3UgY291cnRlc3kgb2Ygb3VyIGxlZ2FsIGNvdW5zZWwuIEZv\nciBtb3JlIGNvbnRleHQsCnBsZWFzZSBzZWUgdGhlIFtOT1RJQ0VdKGh0dHBz\nOi8vZ2l0aHViLmNvbS9tb2J5L21vYnkvYmxvYi9tYXN0ZXIvTk9USUNFKSBk\nb2N1bWVudCBpbiB0aGlzIHJlcG8uKgoKVXNlIGFuZCB0cmFuc2ZlciBvZiBN\nb2J5IG1heSBiZSBzdWJqZWN0IHRvIGNlcnRhaW4gcmVzdHJpY3Rpb25zIGJ5\nIHRoZQpVbml0ZWQgU3RhdGVzIGFuZCBvdGhlciBnb3Zlcm5tZW50cy4KCkl0\nIGlzIHlvdXIgcmVzcG9uc2liaWxpdHkgdG8gZW5zdXJlIHRoYXQgeW91ciB1\nc2UgYW5kL29yIHRyYW5zZmVyIGRvZXMgbm90CnZpb2xhdGUgYXBwbGljYWJs\nZSBsYXdzLgoKRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSBzZWUgaHR0\ncHM6Ly93d3cuYmlzLmRvYy5nb3YKCgpMaWNlbnNpbmcKPT09PT09PT09Ck1v\nYnkgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJz\naW9uIDIuMC4gU2VlCltMSUNFTlNFXShodHRwczovL2dpdGh1Yi5jb20vbW9i\neS9tb2J5L2Jsb2IvbWFzdGVyL0xJQ0VOU0UpIGZvciB0aGUgZnVsbApsaWNl\nbnNlIHRleHQuCg==\n", 
                "download_url": "https://raw.githubusercontent.com/moby/moby/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/moby/moby/git/blobs/f768ff844995a77a0d3411f0b2db4227426a2ac1", 
                "html_url": "https://github.com/moby/moby/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "f768ff844995a77a0d3411f0b2db4227426a2ac1", 
                "size": 4780, 
                "type": "file", 
                "url": "https://api.github.com/repos/moby/moby/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2013-01-18T18:10:57Z", 
                "language": "Go", 
                "owner": {
                    "avatar_url": "https://avatars2.githubusercontent.com/u/27259197?v=3", 
                    "events_url": "https://api.github.com/users/moby/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/moby/followers", 
                    "following_url": "https://api.github.com/users/moby/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/moby/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/moby", 
                    "id": 27259197, 
                    "login": "moby", 
                    "organizations_url": "https://api.github.com/users/moby/orgs", 
                    "received_events_url": "https://api.github.com/users/moby/received_events", 
                    "repos_url": "https://api.github.com/users/moby/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/moby/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/moby/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/moby"
                }, 
                "pushed_at": "2017-04-26T03:21:02Z", 
                "stargazers_count": 43049, 
                "updated_at": "2017-04-26T03:13:39Z", 
                "watchers_count": 43049
            }
        }, 
        "rust-lang/rust": {
            "dockerfile": {
                "/src/ci/docker/arm-android/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "install-ndk.sh install-sdk.sh accept-licenses.sh /android/", 
                        "start-emulator.sh /android/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\", \"/android/start-emulator.sh\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/android/ndk-arm-9/bin:/android/sdk/tools:/android/sdk/platform-tools", 
                        "RUST_CONFIGURE_ARGS --target=arm-linux-androideabi --arm-linux-androideabi-ndk=/android/ndk-arm-9", 
                        "SCRIPT python2.7 ../x.py test --target arm-linux-androideabi"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "dpkg --add-architecture i386 && apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake unzip expect openjdk-9-jre-headless sudo libstdc++6:i386 xz-utils libssl-dev pkg-config", 
                        "sh /android/install-ndk.sh", 
                        "sh /android/install-sdk.sh", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-unknown-linux-gnu && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/android/"
                    ]
                }, 
                "/src/ci/docker/armhf-gnu/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "vexpress_config /build/.config", 
                        "rcS rootfs/etc/init.d/rcS", 
                        "addentropy.c /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-", 
                        "RUST_CONFIGURE_ARGS --target=arm-unknown-linux-gnueabihf --qemu-armhf-rootfs=/tmp/rootfs", 
                        "SCRIPT python2.7 ../x.py test --target arm-unknown-linux-gnueabihf", 
                        "NO_CHANGE_USER=1"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update -y && apt-get install -y --no-install-recommends bc bzip2 ca-certificates cmake cpio curl file g++ gcc-arm-linux-gnueabihf git libc6-dev libc6-dev-armhf-cross make python2.7 qemu-system-arm xz-utils", 
                        "curl https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.42.tar.xz | tar xJf - && cd /build/linux-4.4.42 && cp /build/.config . && make -j$(nproc) all && cp arch/arm/boot/zImage /tmp && cd /build &&  rm -rf linux-4.4.42", 
                        "curl https://www.busybox.net/downloads/busybox-1.21.1.tar.bz2 | tar xjf - && cd busybox-1.21.1 && make defconfig && sed -i 's/.*CONFIG_STATIC.*/CONFIG_STATIC=y/' .config && make -j$(nproc) && make install && mv _install /tmp/rootfs && cd /build && rm -rf busybox-1.12.1", 
                        "mkdir rootfs/ubuntu", 
                        "curl http://cdimage.ubuntu.com/ubuntu-base/releases/16.04/release/ubuntu-base-16.04-core-armhf.tar.gz | tar xzf - -C rootfs/ubuntu && cd rootfs && mkdir proc sys dev etc etc/init.d", 
                        "chmod +x rootfs/etc/init.d/rcS", 
                        "arm-linux-gnueabihf-gcc addentropy.c -o rootfs/addentropy -static", 
                        "curl -O http://ftp.nl.debian.org/debian/dists/jessie/main/installer-armhf/current/images/device-tree/vexpress-v2p-ca15-tc1.dtb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/build", 
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/cross/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-rumprun.sh /tmp/", 
                        "build-arm-musl.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "TARGETS=asmjs-unknown-emscripten", 
                        "TARGETS=$TARGETS,wasm32-unknown-emscripten", 
                        "TARGETS=$TARGETS,x86_64-rumprun-netbsd", 
                        "TARGETS=$TARGETS,mips-unknown-linux-musl", 
                        "TARGETS=$TARGETS,mipsel-unknown-linux-musl", 
                        "TARGETS=$TARGETS,arm-unknown-linux-musleabi", 
                        "TARGETS=$TARGETS,arm-unknown-linux-musleabihf", 
                        "TARGETS=$TARGETS,armv7-unknown-linux-musleabihf", 
                        "TARGETS=$TARGETS,sparc64-unknown-linux-gnu", 
                        "CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc CC_mips_unknown_linux_musl=mips-openwrt-linux-gcc CC_sparc64_unknown_linux_gnu=sparc64-linux-gnu-gcc", 
                        "STAGING_DIR=/tmp", 
                        "RUST_CONFIGURE_ARGS --enable-extended --target=$TARGETS --musl-root-arm=/usr/local/arm-linux-musleabi --musl-root-armhf=/usr/local/arm-linux-musleabihf --musl-root-armv7=/usr/local/armv7-linux-musleabihf", 
                        "SCRIPT python2.7 ../x.py dist --target $TARGETS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo xz-utils zlib1g-dev g++-arm-linux-gnueabi g++-arm-linux-gnueabihf gcc-sparc64-linux-gnu libc6-dev-sparc64-cross bzip2 patch libssl-dev pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "./build-rumprun.sh", 
                        "./build-arm-musl.sh", 
                        "mkdir /usr/local/mips-linux-musl", 
                        "curl -L https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/OpenWrt-Toolchain-ar71xx-generic_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2 | tar xjf - -C /usr/local/mips-linux-musl --strip-components=2", 
                        "for file in /usr/local/mips-linux-musl/bin/mips-openwrt-linux-*; do ln -s $file /usr/local/bin/`basename $file`; done", 
                        "mkdir /usr/local/mipsel-linux-musl", 
                        "curl -L https://s3.amazonaws.com/rust-lang-ci/libc/OpenWrt-Toolchain-malta-le_gcc-5.3.0_musl-1.1.15.Linux-x86_64.tar.bz2 | tar xjf - -C /usr/local/mipsel-linux-musl --strip-components=2", 
                        "for file in /usr/local/mipsel-linux-musl/bin/mipsel-openwrt-linux-*; do ln -s $file /usr/local/bin/`basename $file`; done"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-aarch64-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "aarch64-linux-gnu.config build-toolchains.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/aarch64-unknown-linux-gnueabi/bin", 
                        "CC_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-gcc AR_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-ar CXX_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-g++", 
                        "HOSTS=aarch64-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-toolchains.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-android/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "install-ndk.sh /android/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/android/ndk-arm-9/bin:/android/sdk/tools:/android/sdk/platform-tools", 
                        "TARGETS=arm-linux-androideabi", 
                        "TARGETS=$TARGETS,armv7-linux-androideabi", 
                        "TARGETS=$TARGETS,i686-linux-android", 
                        "TARGETS=$TARGETS,aarch64-linux-android", 
                        "TARGETS=$TARGETS,x86_64-linux-android", 
                        "RUST_CONFIGURE_ARGS --target=$TARGETS --enable-extended --arm-linux-androideabi-ndk=/android/ndk-arm-9 --armv7-linux-androideabi-ndk=/android/ndk-arm-9 --i686-linux-android-ndk=/android/ndk-x86-9 --aarch64-linux-android-ndk=/android/ndk-arm64-21 --x86_64-linux-android-ndk=/android/ndk-x86_64-21", 
                        "SCRIPT python2.7 ../x.py dist --target $TARGETS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "dpkg --add-architecture i386 && apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake unzip expect openjdk-9-jre sudo libstdc++6:i386 xz-utils libssl-dev pkg-config", 
                        "sh /android/install-ndk.sh", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/android/"
                    ]
                }, 
                "/src/ci/docker/dist-arm-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "arm-linux-gnueabi.config build-toolchains.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/arm-unknown-linux-gnueabi/bin", 
                        "CC_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-gcc AR_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-ar CXX_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-g++", 
                        "HOSTS=arm-unknown-linux-gnueabi", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-toolchains.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-armhf-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "arm-linux-gnueabihf.config build-toolchains.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/arm-unknown-linux-gnueabihf/bin", 
                        "CC_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-gcc AR_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-ar CXX_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-g++", 
                        "HOSTS=arm-unknown-linux-gnueabihf", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-toolchains.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-armv7-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-toolchains.sh armv7-linux-gnueabihf.config /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/armv7-unknown-linux-gnueabihf/bin", 
                        "CC_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-gcc AR_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-ar CXX_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-g++", 
                        "HOSTS=armv7-unknown-linux-gnueabihf", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-toolchains.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-fuchsia/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "shared.sh build-toolchain.sh compiler-rt-dso-handle.patch /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "AR_x86_64_unknown_fuchsia=x86_64-unknown-fuchsia-ar CC_x86_64_unknown_fuchsia=x86_64-unknown-fuchsia-clang CXX_x86_64_unknown_fuchsia=x86_64-unknown-fuchsia-clang++ AR_aarch64_unknown_fuchsia=aarch64-unknown-fuchsia-ar CC_aarch64_unknown_fuchsia=aarch64-unknown-fuchsia-clang CXX_aarch64_unknown_fuchsia=aarch64-unknown-fuchsia-clang++", 
                        "TARGETS=x86_64-unknown-fuchsia", 
                        "TARGETS=$TARGETS,aarch64-unknown-fuchsia", 
                        "RUST_CONFIGURE_ARGS --target=$TARGETS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --target $TARGETS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make ninja-build file curl ca-certificates python2.7-dev git sudo bzip2 xz-utils swig libedit-dev libncurses5-dev patch", 
                        "curl -L https://cmake.org/files/v3.8/cmake-3.8.0-rc1-Linux-x86_64.tar.gz | tar xzf - -C /usr/local --strip-components=1", 
                        "/tmp/build-toolchain.sh", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-i586-gnu-i686-musl/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "musl-libunwind-patch.patch build-musl.sh /build/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --target=i686-unknown-linux-musl,i586-unknown-linux-gnu --musl-root-i686=/musl-i686 --enable-extended", 
                        "CFLAGS_i686_unknown_linux_musl=-Wa,-mrelax-relocations=no", 
                        "SCRIPT python2.7 ../x.py test --target i686-unknown-linux-musl --target i586-unknown-linux-gnu && python2.7 ../x.py dist --target i686-unknown-linux-musl --target i586-unknown-linux-gnu"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++-multilib make file curl ca-certificates python2.7 git cmake xz-utils sudo gdb patch libssl-dev pkg-config", 
                        "sh /build/build-musl.sh && rm -rf /build", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/build/"
                    ]
                }, 
                "/src/ci/docker/dist-i686-freebsd/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "AR_i686_unknown_freebsd=i686-unknown-freebsd10-ar CC_i686_unknown_freebsd=i686-unknown-freebsd10-gcc CXX_i686_unknown_freebsd=i686-unknown-freebsd10-g++", 
                        "HOSTS=i686-unknown-freebsd", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo bzip2 xz-utils wget libssl-dev pkg-config", 
                        "/tmp/build-toolchain.sh i686", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/dist-i686-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "shared.sh build-binutils.sh /tmp/", 
                        "build-openssl.sh /tmp/", 
                        "build-curl.sh /tmp/", 
                        "build-gcc.sh /tmp/", 
                        "build-python.sh /tmp/", 
                        "build-git.sh /tmp/", 
                        "build-cmake.sh /tmp/", 
                        "build-headers.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/rustroot/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=/rustroot/bin:$PATH", 
                        "LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib", 
                        "PKG_CONFIG_PATH=/rustroot/lib/pkgconfig", 
                        "HOSTS=i686-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended --enable-sanitizers", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS", 
                        "DIST_SRC 1", 
                        "LIBCURL_NO_PKG_CONFIG 1"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "centos:5"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf", 
                        "sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo", 
                        "sed -i 's|#\\(baseurl.*\\)mirror.centos.org/centos/$releasever|\\1vault.centos.org/5.11|' /etc/yum.repos.d/*.repo", 
                        "yum upgrade -y && yum install -y curl bzip2 gcc gcc-c++ make glibc-devel perl zlib-devel file xz which pkgconfig wget autoconf gettext", 
                        "./build-openssl.sh", 
                        "./build-curl.sh", 
                        "./build-binutils.sh", 
                        "./build-gcc.sh", 
                        "./build-python.sh", 
                        "./build-git.sh", 
                        "./build-cmake.sh", 
                        "./build-headers.sh", 
                        "curl -Lo /rustroot/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 && chmod +x /rustroot/dumb-init", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/build", 
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-mips-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "HOSTS=mips-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils g++-mips-linux-gnu libssl-dev pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/dist-mips64-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "HOSTS=mips64-unknown-linux-gnuabi64", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils g++-mips64-linux-gnuabi64 libssl-dev pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/dist-mips64el-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "HOSTS=mips64el-unknown-linux-gnuabi64", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils g++-mips64el-linux-gnuabi64 libssl-dev pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/dist-mipsel-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "HOSTS=mipsel-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils g++-mipsel-linux-gnu libssl-dev pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/dist-powerpc-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "patches/ /tmp/patches/", 
                        "powerpc-linux-gnu.config build-powerpc-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/powerpc-unknown-linux-gnu/bin", 
                        "CC_powerpc_unknown_linux_gnu=powerpc-unknown-linux-gnu-gcc AR_powerpc_unknown_linux_gnu=powerpc-unknown-linux-gnu-ar CXX_powerpc_unknown_linux_gnu=powerpc-unknown-linux-gnu-g++", 
                        "HOSTS=powerpc-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS", 
                        "NO_LLVM_ASSERTIONS 1"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-powerpc-toolchain.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-powerpc64-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "patches/ /tmp/patches/", 
                        "shared.sh powerpc64-linux-gnu.config build-powerpc64-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/powerpc64-unknown-linux-gnu/bin", 
                        "AR_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-ar CC_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-gcc CXX_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-g++", 
                        "HOSTS=powerpc64-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-powerpc64-toolchain.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-powerpc64le-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "shared.sh build-powerpc64le-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "AR_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-ar CC_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-gcc CXX_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-g++", 
                        "HOSTS=powerpc64le-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "apt-get install -y --no-install-recommends rpm2cpio cpio", 
                        "./build-powerpc64le-toolchain.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-s390x-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "patches/ /tmp/patches/", 
                        "s390x-linux-gnu.config build-s390x-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/s390x-ibm-linux-gnu/bin", 
                        "CC_s390x_unknown_linux_gnu=s390x-ibm-linux-gnu-gcc AR_s390x_unknown_linux_gnu=s390x-ibm-linux-gnu-ar CXX_s390x_unknown_linux_gnu=s390x-ibm-linux-gnu-g++", 
                        "HOSTS=s390x-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-s390x-toolchain.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-x86_64-freebsd/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "AR_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-ar CC_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-gcc CXX_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-g++", 
                        "HOSTS=x86_64-unknown-freebsd", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo bzip2 xz-utils wget libssl-dev pkg-config", 
                        "/tmp/build-toolchain.sh x86_64", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/dist-x86_64-linux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "shared.sh build-binutils.sh /tmp/", 
                        "build-openssl.sh /tmp/", 
                        "build-curl.sh /tmp/", 
                        "build-gcc.sh /tmp/", 
                        "build-python.sh /tmp/", 
                        "build-git.sh /tmp/", 
                        "build-cmake.sh /tmp/", 
                        "build-headers.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/rustroot/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=/rustroot/bin:$PATH", 
                        "LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib", 
                        "PKG_CONFIG_PATH=/rustroot/lib/pkgconfig", 
                        "HOSTS=x86_64-unknown-linux-gnu", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended --enable-sanitizers", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS", 
                        "DIST_SRC 1", 
                        "LIBCURL_NO_PKG_CONFIG 1"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "centos:5"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf", 
                        "sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo", 
                        "sed -i 's|#\\(baseurl.*\\)mirror.centos.org/centos/$releasever|\\1vault.centos.org/5.11|' /etc/yum.repos.d/*.repo", 
                        "yum upgrade -y && yum install -y curl bzip2 gcc gcc-c++ make glibc-devel perl zlib-devel file xz which pkgconfig wget autoconf gettext", 
                        "./build-openssl.sh", 
                        "./build-curl.sh", 
                        "./build-binutils.sh", 
                        "./build-gcc.sh", 
                        "./build-python.sh", 
                        "./build-git.sh", 
                        "./build-cmake.sh", 
                        "./build-headers.sh", 
                        "curl -Lo /rustroot/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 && chmod +x /rustroot/dumb-init", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/build", 
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/dist-x86_64-musl/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-musl.sh /build/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --target=x86_64-unknown-linux-musl --musl-root-x86_64=/musl-x86_64 --enable-extended", 
                        "CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no", 
                        "SCRIPT python2.7 ../x.py test --target x86_64-unknown-linux-musl && python2.7 ../x.py dist --target x86_64-unknown-linux-musl"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake xz-utils sudo gdb patch libssl-dev pkg-config", 
                        "sh /build/build-musl.sh && rm -rf /build", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/build/"
                    ]
                }, 
                "/src/ci/docker/dist-x86_64-netbsd/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-netbsd-toolchain.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/x-tools/x86_64-unknown-netbsd/bin", 
                        "AR_x86_64_unknown_netbsd=x86_64--netbsd-ar CC_x86_64_unknown_netbsd=x86_64--netbsd-gcc-sysroot CXX_x86_64_unknown_netbsd=x86_64--netbsd-g++-sysroot", 
                        "HOSTS=x86_64-unknown-netbsd", 
                        "RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended", 
                        "SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends automake bison bzip2 ca-certificates cmake curl file flex g++ gawk gdb git gperf help2man libncurses-dev libtool-bin make patch python2.7 sudo texinfo wget xz-utils libssl-dev pkg-config", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && cd make-3.81 && ./configure --prefix=/usr && make && make install && cd .. && rm -rf make-3.81", 
                        "curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | tar xjf - && cd crosstool-ng && ./configure --prefix=/usr/local && make -j$(nproc) && make install && cd .. && rm -rf crosstool-ng", 
                        "groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild", 
                        "mkdir /x-tools && chown rustbuild:rustbuild /x-tools", 
                        "./build-netbsd-toolchain.sh", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [
                        "rustbuild", 
                        "root"
                    ], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/emscripten/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "build-emscripten.sh /tmp/"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "PATH=$PATH:/tmp/emsdk_portable", 
                        "PATH=$PATH:/tmp/emsdk_portable/clang/tag-e1.37.10/build_tag-e1.37.10_32/bin", 
                        "PATH=$PATH:/tmp/emsdk_portable/node/4.1.1_32bit/bin", 
                        "PATH=$PATH:/tmp/emsdk_portable/emscripten/tag-1.37.10", 
                        "EMSCRIPTEN=/tmp/emsdk_portable/emscripten/tag-1.37.10", 
                        "RUST_CONFIGURE_ARGS --target=asmjs-unknown-emscripten", 
                        "SCRIPT emcc && python2.7 ../x.py test --target asmjs-unknown-emscripten"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python git cmake sudo gdb xz-utils lib32stdc++6", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb", 
                        "./build-emscripten.sh"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/tmp"
                    ]
                }, 
                "/src/ci/docker/i686-gnu-nopt/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu --disable-optimize-tests", 
                        "RUST_CHECK_TARGET check"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++-multilib make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/i686-gnu/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu", 
                        "SCRIPT python2.7 ../x.py test"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++-multilib make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-aux/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu", 
                        "RUST_CHECK_TARGET check-aux"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake libssl-dev sudo xz-utils pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-debug/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --enable-debug --enable-optimize", 
                        "SCRIPT python2.7 ../x.py build"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-distcheck/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu", 
                        "SCRIPT python2.7 ../x.py test distcheck", 
                        "DIST_SRC 1"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils libssl-dev pkg-config", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-full-bootstrap/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --enable-full-bootstrap", 
                        "SCRIPT python2.7 ../x.py build"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-incremental/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu", 
                        "RUSTFLAGS -Zincremental=/tmp/rust-incr-cache", 
                        "RUST_CHECK_TARGET check"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-llvm-3.7/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --llvm-root=/usr/lib/llvm-3.7", 
                        "RUST_CHECK_TARGET check"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb llvm-3.7-tools libedit-dev zlib1g-dev xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu-nopt/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --disable-optimize-tests", 
                        "RUST_CHECK_TARGET check"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/src/ci/docker/x86_64-gnu/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [
                        "[\"/usr/bin/dumb-init\", \"--\"]"
                    ], 
                    "ENV": [
                        "RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --enable-sanitizers", 
                        "SCRIPT python2.7 ../x.py test"
                    ], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo gdb xz-utils", 
                        "curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-04-sccache-x86_64-unknown-linux-musl && chmod +x /usr/local/bin/sccache", 
                        "curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && dpkg -i dumb-init_*.deb && rm dumb-init_*.deb"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/rust-lang/rust/git/blobs/f387b4be6008f4b4722e9264d73921179fa8a91f", 
                    "html": "https://github.com/rust-lang/rust/blob/master/README.md", 
                    "self": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=master"
                }, 
                "content": "IyBUaGUgUnVzdCBQcm9ncmFtbWluZyBMYW5ndWFnZQoKVGhpcyBpcyB0aGUg\nbWFpbiBzb3VyY2UgY29kZSByZXBvc2l0b3J5IGZvciBbUnVzdF0uIEl0IGNv\nbnRhaW5zIHRoZSBjb21waWxlciwKc3RhbmRhcmQgbGlicmFyeSwgYW5kIGRv\nY3VtZW50YXRpb24uCgpbUnVzdF06IGh0dHBzOi8vd3d3LnJ1c3QtbGFuZy5v\ncmcKCiMjIFF1aWNrIFN0YXJ0CgpSZWFkIFsiSW5zdGFsbGluZyBSdXN0Il0g\nZnJvbSBbVGhlIEJvb2tdLgoKWyJJbnN0YWxsaW5nIFJ1c3QiXTogaHR0cHM6\nLy9kb2MucnVzdC1sYW5nLm9yZy9ib29rL2dldHRpbmctc3RhcnRlZC5odG1s\nI2luc3RhbGxpbmctcnVzdApbVGhlIEJvb2tdOiBodHRwczovL2RvYy5ydXN0\nLWxhbmcub3JnL2Jvb2svaW5kZXguaHRtbAoKIyMgQnVpbGRpbmcgZnJvbSBT\nb3VyY2UKCjEuIE1ha2Ugc3VyZSB5b3UgaGF2ZSBpbnN0YWxsZWQgdGhlIGRl\ncGVuZGVuY2llczoKCiAgICogYGcrK2AgNC43IG9yIGxhdGVyIG9yIGBjbGFu\nZysrYCAzLnggb3IgbGF0ZXIKICAgKiBgcHl0aG9uYCAyLjcgKGJ1dCBub3Qg\nMy54KQogICAqIEdOVSBgbWFrZWAgMy44MSBvciBsYXRlcgogICAqIGBjbWFr\nZWAgMy40LjMgb3IgbGF0ZXIKICAgKiBgY3VybGAKICAgKiBgZ2l0YAoKMi4g\nQ2xvbmUgdGhlIFtzb3VyY2VdIHdpdGggYGdpdGA6CgogICBgYGBzaAogICAk\nIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vcnVzdC1sYW5nL3J1c3Qu\nZ2l0CiAgICQgY2QgcnVzdAogICBgYGAKCltzb3VyY2VdOiBodHRwczovL2dp\ndGh1Yi5jb20vcnVzdC1sYW5nL3J1c3QKCjMuIEJ1aWxkIGFuZCBpbnN0YWxs\nOgoKICAgIGBgYHNoCiAgICAkIC4veC5weSBidWlsZCAmJiBzdWRvIC4veC5w\neSBkaXN0IC0taW5zdGFsbAogICAgYGBgCgogICAgPiAqKipOb3RlOioqKiBJ\nbnN0YWxsIGxvY2F0aW9ucyBjYW4gYmUgYWRqdXN0ZWQgYnkgY29weWluZyB0\naGUgY29uZmlnIGZpbGUKICAgID4gZnJvbSBgLi9zcmMvYm9vdHN0cmFwL2Nv\nbmZpZy50b21sLmV4YW1wbGVgIHRvIGAuL2NvbmZpZy50b21sYCwgYW5kCiAg\nICA+IGFkanVzdGluZyB0aGUgYHByZWZpeGAgb3B0aW9uIHVuZGVyIGBbaW5z\ndGFsbF1gLiBWYXJpb3VzIG90aGVyIG9wdGlvbnMgYXJlCiAgICA+IGFsc28g\nc3VwcG9ydGVkLCBhbmQgYXJlIGRvY3VtZW50ZWQgaW4gdGhlIGNvbmZpZyBm\naWxlLgoKICAgIFdoZW4gY29tcGxldGUsIGBzdWRvIC4veC5weSBkaXN0IC0t\naW5zdGFsbGAgd2lsbCBwbGFjZSBzZXZlcmFsIHByb2dyYW1zIGludG8KICAg\nIGAvdXNyL2xvY2FsL2JpbmA6IGBydXN0Y2AsIHRoZSBSdXN0IGNvbXBpbGVy\nLCBhbmQgYHJ1c3Rkb2NgLCB0aGUKICAgIEFQSS1kb2N1bWVudGF0aW9uIHRv\nb2wuIFRoaXMgaW5zdGFsbCBkb2VzIG5vdCBpbmNsdWRlIFtDYXJnb10sCiAg\nICBSdXN0J3MgcGFja2FnZSBtYW5hZ2VyLCB3aGljaCB5b3UgbWF5IGFsc28g\nd2FudCB0byBidWlsZC4KCltDYXJnb106IGh0dHBzOi8vZ2l0aHViLmNvbS9y\ndXN0LWxhbmcvY2FyZ28KCiMjIyBCdWlsZGluZyBvbiBXaW5kb3dzCgpUaGVy\nZSBhcmUgdHdvIHByb21pbmVudCBBQklzIGluIHVzZSBvbiBXaW5kb3dzOiB0\naGUgbmF0aXZlIChNU1ZDKSBBQkkgdXNlZCBieQpWaXN1YWwgU3R1ZGlvLCBh\nbmQgdGhlIEdOVSBBQkkgdXNlZCBieSB0aGUgR0NDIHRvb2xjaGFpbi4gV2hp\nY2ggdmVyc2lvbiBvZiBSdXN0CnlvdSBuZWVkIGRlcGVuZHMgbGFyZ2VseSBv\nbiB3aGF0IEMvQysrIGxpYnJhcmllcyB5b3Ugd2FudCB0byBpbnRlcm9wZXJh\ndGUgd2l0aDoKZm9yIGludGVyb3Agd2l0aCBzb2Z0d2FyZSBwcm9kdWNlZCBi\neSBWaXN1YWwgU3R1ZGlvIHVzZSB0aGUgTVNWQyBidWlsZCBvZiBSdXN0Owpm\nb3IgaW50ZXJvcCB3aXRoIEdOVSBzb2Z0d2FyZSBidWlsdCB1c2luZyB0aGUg\nTWluR1cvTVNZUzIgdG9vbGNoYWluIHVzZSB0aGUgR05VCmJ1aWxkLgoKIyMj\nIyBNaW5HVwoKW01TWVMyXVttc3lzMl0gY2FuIGJlIHVzZWQgdG8gZWFzaWx5\nIGJ1aWxkIFJ1c3Qgb24gV2luZG93czoKClttc3lzMl06IGh0dHBzOi8vbXN5\nczIuZ2l0aHViLmlvLwoKMS4gR3JhYiB0aGUgbGF0ZXN0IFtNU1lTMiBpbnN0\nYWxsZXJdW21zeXMyXSBhbmQgZ28gdGhyb3VnaCB0aGUgaW5zdGFsbGVyLgoK\nMi4gUnVuIGBtaW5ndzMyX3NoZWxsLmJhdGAgb3IgYG1pbmd3NjRfc2hlbGwu\nYmF0YCBmcm9tIHdoZXJldmVyIHlvdSBpbnN0YWxsZWQKICAgTVNZUzIgKGku\nZS4gYEM6XG1zeXM2NGApLCBkZXBlbmRpbmcgb24gd2hldGhlciB5b3Ugd2Fu\ndCAzMi1iaXQgb3IgNjQtYml0CiAgIFJ1c3QuIChBcyBvZiB0aGUgbGF0ZXN0\nIHZlcnNpb24gb2YgTVNZUzIgeW91IGhhdmUgdG8gcnVuIGBtc3lzMl9zaGVs\nbC5jbWQKICAgLW1pbmd3MzJgIG9yIGBtc3lzMl9zaGVsbC5jbWQgLW1pbmd3\nNjRgIGZyb20gdGhlIGNvbW1hbmQgbGluZSBpbnN0ZWFkKQoKMy4gRnJvbSB0\naGlzIHRlcm1pbmFsLCBpbnN0YWxsIHRoZSByZXF1aXJlZCB0b29sczoKCiAg\nIGBgYHNoCiAgICMgVXBkYXRlIHBhY2thZ2UgbWlycm9ycyAobWF5IGJlIG5l\nZWRlZCBpZiB5b3UgaGF2ZSBhIGZyZXNoIGluc3RhbGwgb2YgTVNZUzIpCiAg\nICQgcGFjbWFuIC1TeSBwYWNtYW4tbWlycm9ycwoKICAgIyBJbnN0YWxsIGJ1\naWxkIHRvb2xzIG5lZWRlZCBmb3IgUnVzdC4gSWYgeW91J3JlIGJ1aWxkaW5n\nIGEgMzItYml0IGNvbXBpbGVyLAogICAjIHRoZW4gcmVwbGFjZSAieDg2XzY0\nIiBiZWxvdyB3aXRoICJpNjg2Ii4gSWYgeW91J3ZlIGFscmVhZHkgZ290IGdp\ndCwgcHl0aG9uLAogICAjIG9yIENNYWtlIGluc3RhbGxlZCBhbmQgaW4gUEFU\nSCB5b3UgY2FuIHJlbW92ZSB0aGVtIGZyb20gdGhpcyBsaXN0LiBOb3RlCiAg\nICMgdGhhdCBpdCBpcyBpbXBvcnRhbnQgdGhhdCB5b3UgZG8gKipub3QqKiB1\nc2UgdGhlICdweXRob24yJyBhbmQgJ2NtYWtlJwogICAjIHBhY2thZ2VzIGZy\nb20gdGhlICdtc3lzMicgc3Vic3lzdGVtLiBUaGUgYnVpbGQgaGFzIGhpc3Rv\ncmljYWxseSBiZWVuIGtub3duCiAgICMgdG8gZmFpbCB3aXRoIHRoZXNlIHBh\nY2thZ2VzLgogICAkIHBhY21hbiAtUyBnaXQgXAogICAgICAgICAgICAgICBt\nYWtlIFwKICAgICAgICAgICAgICAgZGlmZnV0aWxzIFwKICAgICAgICAgICAg\nICAgdGFyIFwKICAgICAgICAgICAgICAgbWluZ3ctdzY0LXg4Nl82NC1weXRo\nb24yIFwKICAgICAgICAgICAgICAgbWluZ3ctdzY0LXg4Nl82NC1jbWFrZSBc\nCiAgICAgICAgICAgICAgIG1pbmd3LXc2NC14ODZfNjQtZ2NjCiAgIGBgYAoK\nNC4gTmF2aWdhdGUgdG8gUnVzdCdzIHNvdXJjZSBjb2RlIChvciBjbG9uZSBp\ndCksIHRoZW4gYnVpbGQgaXQ6CgogICBgYGBzaAogICAkIC4veC5weSBidWls\nZCAmJiAuL3gucHkgZGlzdCAtLWluc3RhbGwKICAgYGBgCgojIyMjIE1TVkMK\nCk1TVkMgYnVpbGRzIG9mIFJ1c3QgYWRkaXRpb25hbGx5IHJlcXVpcmUgYW4g\naW5zdGFsbGF0aW9uIG9mIFZpc3VhbCBTdHVkaW8gMjAxMwoob3IgbGF0ZXIp\nIHNvIGBydXN0Y2AgY2FuIHVzZSBpdHMgbGlua2VyLiBNYWtlIHN1cmUgdG8g\nY2hlY2sgdGhlIOKAnEMrKyB0b29sc+KAnQpvcHRpb24uCgpXaXRoIHRoZXNl\nIGRlcGVuZGVuY2llcyBpbnN0YWxsZWQsIHlvdSBjYW4gYnVpbGQgdGhlIGNv\nbXBpbGVyIGluIGEgYGNtZC5leGVgCnNoZWxsIHdpdGg6CgpgYGBzaAo+IHB5\ndGhvbiB4LnB5IGJ1aWxkCmBgYAoKQ3VycmVudGx5IGJ1aWxkaW5nIFJ1c3Qg\nb25seSB3b3JrcyB3aXRoIHNvbWUga25vd24gdmVyc2lvbnMgb2YgVmlzdWFs\nIFN0dWRpby4gSWYKeW91IGhhdmUgYSBtb3JlIHJlY2VudCB2ZXJzaW9uIGlu\nc3RhbGxlZCB0aGUgYnVpbGQgc3lzdGVtIGRvZXNuJ3QgdW5kZXJzdGFuZAp0\naGVuIHlvdSBtYXkgbmVlZCB0byBmb3JjZSBydXN0YnVpbGQgdG8gdXNlIGFu\nIG9sZGVyIHZlcnNpb24uIFRoaXMgY2FuIGJlIGRvbmUKYnkgbWFudWFsbHkg\nY2FsbGluZyB0aGUgYXBwcm9wcmlhdGUgdmN2YXJzIGZpbGUgYmVmb3JlIHJ1\nbm5pbmcgdGhlIGJvb3RzdHJhcC4KCmBgYApDQUxMICJDOlxQcm9ncmFtIEZp\nbGVzICh4ODYpXE1pY3Jvc29mdCBWaXN1YWwgU3R1ZGlvIDE0LjBcVkNcYmlu\nXGFtZDY0XHZjdmFyczY0LmJhdCIKcHl0aG9uIHgucHkgYnVpbGQKYGBgCgoj\nIyMjIFNwZWNpZnlpbmcgYW4gQUJJCgpFYWNoIHNwZWNpZmljIEFCSSBjYW4g\nYWxzbyBiZSB1c2VkIGZyb20gZWl0aGVyIGVudmlyb25tZW50IChmb3IgZXhh\nbXBsZSwgdXNpbmcKdGhlIEdOVSBBQkkgaW4gcG93ZXJzaGVsbCkgYnkgdXNp\nbmcgYW4gZXhwbGljaXQgYnVpbGQgdHJpcGxlLiBUaGUgYXZhaWxhYmxlCldp\nbmRvd3MgYnVpbGQgdHJpcGxlcyBhcmU6Ci0gR05VIEFCSSAodXNpbmcgR0ND\nKQogICAgLSBgaTY4Ni1wYy13aW5kb3dzLWdudWAKICAgIC0gYHg4Nl82NC1w\nYy13aW5kb3dzLWdudWAKLSBUaGUgTVNWQyBBQkkKICAgIC0gYGk2ODYtcGMt\nd2luZG93cy1tc3ZjYAogICAgLSBgeDg2XzY0LXBjLXdpbmRvd3MtbXN2Y2AK\nClRoZSBidWlsZCB0cmlwbGUgY2FuIGJlIHNwZWNpZmllZCBieSBlaXRoZXIg\nc3BlY2lmeWluZyBgLS1idWlsZD1BQklgIHdoZW4KaW52b2tpbmcgYHgucHlg\nIGNvbW1hbmRzLCBvciBieSBjb3B5aW5nIHRoZSBgY29uZmlnLnRvbWxgIGZp\nbGUgKGFzIGRlc2NyaWJlZAppbiBCdWlsZGluZyBGcm9tIFNvdXJjZSksIGFu\nZCBtb2RpZnlpbmcgdGhlIGBidWlsZGAgb3B0aW9uIHVuZGVyIHRoZSBgW2J1\naWxkXWAKc2VjdGlvbi4KCiMjIyBDb25maWd1cmUgYW5kIE1ha2UKCldoaWxl\nIGl0J3Mgbm90IHRoZSByZWNvbW1lbmRlZCBidWlsZCBzeXN0ZW0sIHRoaXMg\ncHJvamVjdCBhbHNvIHByb3ZpZGVzIGEKY29uZmlndXJlIHNjcmlwdCBhbmQg\nbWFrZWZpbGUgKHRoZSBsYXR0ZXIgb2Ygd2hpY2gganVzdCBpbnZva2VzIGB4\nLnB5YCkuCgpgYGBzaAokIC4vY29uZmlndXJlCiQgbWFrZSAmJiBzdWRvIG1h\na2UgaW5zdGFsbApgYGAKCldoZW4gdXNpbmcgdGhlIGNvbmZpZ3VyZSBzY3Jp\ncHQsIHRoZSBnZW5lcmF0ZWQgYGNvbmZpZy5ta2AgZmlsZSBtYXkgb3ZlcnJp\nZGUgdGhlCmBjb25maWcudG9tbGAgZmlsZS4gVG8gZ28gYmFjayB0byB0aGUg\nYGNvbmZpZy50b21sYCBmaWxlLCBkZWxldGUgdGhlIGdlbmVyYXRlZApgY29u\nZmlnLm1rYCBmaWxlLgoKIyMgQnVpbGRpbmcgRG9jdW1lbnRhdGlvbgoKSWYg\neW914oCZZCBsaWtlIHRvIGJ1aWxkIHRoZSBkb2N1bWVudGF0aW9uLCBpdOKA\nmXMgYWxtb3N0IHRoZSBzYW1lOgoKYGBgc2gKJCAuL3gucHkgZG9jCmBgYAoK\nVGhlIGdlbmVyYXRlZCBkb2N1bWVudGF0aW9uIHdpbGwgYXBwZWFyIHVuZGVy\nIGBkb2NgIGluIHRoZSBgYnVpbGRgIGRpcmVjdG9yeSBmb3IKdGhlIEFCSSB1\nc2VkLiBJLmUuLCBpZiB0aGUgQUJJIHdhcyBgeDg2XzY0LXBjLXdpbmRvd3Mt\nbXN2Y2AsIHRoZSBkaXJlY3Rvcnkgd2lsbCBiZQpgYnVpbGRceDg2XzY0LXBj\nLXdpbmRvd3MtbXN2Y1xkb2NgLgoKIyMgTm90ZXMKClNpbmNlIHRoZSBSdXN0\nIGNvbXBpbGVyIGlzIHdyaXR0ZW4gaW4gUnVzdCwgaXQgbXVzdCBiZSBidWls\ndCBieSBhCnByZWNvbXBpbGVkICJzbmFwc2hvdCIgdmVyc2lvbiBvZiBpdHNl\nbGYgKG1hZGUgaW4gYW4gZWFybGllciBzdGF0ZSBvZgpkZXZlbG9wbWVudCku\nIEFzIHN1Y2gsIHNvdXJjZSBidWlsZHMgcmVxdWlyZSBhIGNvbm5lY3Rpb24g\ndG8gdGhlIEludGVybmV0LCB0bwpmZXRjaCBzbmFwc2hvdHMsIGFuZCBhbiBP\nUyB0aGF0IGNhbiBleGVjdXRlIHRoZSBhdmFpbGFibGUgc25hcHNob3QgYmlu\nYXJpZXMuCgpTbmFwc2hvdCBiaW5hcmllcyBhcmUgY3VycmVudGx5IGJ1aWx0\nIGFuZCB0ZXN0ZWQgb24gc2V2ZXJhbCBwbGF0Zm9ybXM6Cgp8IFBsYXRmb3Jt\nIC8gQXJjaGl0ZWN0dXJlICAgICAgICB8IHg4NiB8IHg4Nl82NCB8CnwtLS0t\nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLXwtLS0tLS0tLXwK\nfCBXaW5kb3dzICg3LCA4LCBTZXJ2ZXIgMjAwOCBSMikgfCDinJMgICB8IOKc\nkyAgICAgIHwKfCBMaW51eCAoMi42LjE4IG9yIGxhdGVyKSAgICAgICAgfCDi\nnJMgICB8IOKckyAgICAgIHwKfCBPU1ggKDEwLjcgTGlvbiBvciBsYXRlcikg\nICAgICAgfCDinJMgICB8IOKckyAgICAgIHwKCllvdSBtYXkgZmluZCB0aGF0\nIG90aGVyIHBsYXRmb3JtcyB3b3JrLCBidXQgdGhlc2UgYXJlIG91ciBvZmZp\nY2lhbGx5CnN1cHBvcnRlZCBidWlsZCBlbnZpcm9ubWVudHMgdGhhdCBhcmUg\nbW9zdCBsaWtlbHkgdG8gd29yay4KClJ1c3QgY3VycmVudGx5IG5lZWRzIGJl\ndHdlZW4gNjAwTWlCIGFuZCAxLjVHaUIgdG8gYnVpbGQsIGRlcGVuZGluZyBv\nbiBwbGF0Zm9ybS4KSWYgaXQgaGl0cyBzd2FwLCBpdCB3aWxsIHRha2UgYSB2\nZXJ5IGxvbmcgdGltZSB0byBidWlsZC4KClRoZXJlIGlzIG1vcmUgYWR2aWNl\nIGFib3V0IGhhY2tpbmcgb24gUnVzdCBpbiBbQ09OVFJJQlVUSU5HLm1kXS4K\nCltDT05UUklCVVRJTkcubWRdOiBodHRwczovL2dpdGh1Yi5jb20vcnVzdC1s\nYW5nL3J1c3QvYmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kCgojIyBHZXR0\naW5nIEhlbHAKClRoZSBSdXN0IGNvbW11bml0eSBjb25ncmVnYXRlcyBpbiBh\nIGZldyBwbGFjZXM6CgoqIFtTdGFjayBPdmVyZmxvd10gLSBEaXJlY3QgcXVl\nc3Rpb25zIGFib3V0IHVzaW5nIHRoZSBsYW5ndWFnZS4KKiBbdXNlcnMucnVz\ndC1sYW5nLm9yZ10gLSBHZW5lcmFsIGRpc2N1c3Npb24gYW5kIGJyb2FkZXIg\ncXVlc3Rpb25zLgoqIFsvci9ydXN0XSAtIE5ld3MgYW5kIGdlbmVyYWwgZGlz\nY3Vzc2lvbi4KCltTdGFjayBPdmVyZmxvd106IGh0dHBzOi8vc3RhY2tvdmVy\nZmxvdy5jb20vcXVlc3Rpb25zL3RhZ2dlZC9ydXN0Clsvci9ydXN0XTogaHR0\ncHM6Ly9yZWRkaXQuY29tL3IvcnVzdApbdXNlcnMucnVzdC1sYW5nLm9yZ106\nIGh0dHBzOi8vdXNlcnMucnVzdC1sYW5nLm9yZy8KCiMjIENvbnRyaWJ1dGlu\nZwoKVG8gY29udHJpYnV0ZSB0byBSdXN0LCBwbGVhc2Ugc2VlIFtDT05UUklC\nVVRJTkddKENPTlRSSUJVVElORy5tZCkuCgpSdXN0IGhhcyBhbiBbSVJDXSBj\ndWx0dXJlIGFuZCBtb3N0IHJlYWwtdGltZSBjb2xsYWJvcmF0aW9uIGhhcHBl\nbnMgaW4gYQp2YXJpZXR5IG9mIGNoYW5uZWxzIG9uIE1vemlsbGEncyBJUkMg\nbmV0d29yaywgaXJjLm1vemlsbGEub3JnLiBUaGUKbW9zdCBwb3B1bGFyIGNo\nYW5uZWwgaXMgWyNydXN0XSwgYSB2ZW51ZSBmb3IgZ2VuZXJhbCBkaXNjdXNz\naW9uIGFib3V0ClJ1c3QuIEFuZCBhIGdvb2QgcGxhY2UgdG8gYXNrIGZvciBo\nZWxwIHdvdWxkIGJlIFsjcnVzdC1iZWdpbm5lcnNdLgoKW0lSQ106IGh0dHBz\nOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0ludGVybmV0X1JlbGF5X0NoYXQK\nWyNydXN0XTogaXJjOi8vaXJjLm1vemlsbGEub3JnL3J1c3QKWyNydXN0LWJl\nZ2lubmVyc106IGlyYzovL2lyYy5tb3ppbGxhLm9yZy9ydXN0LWJlZ2lubmVy\ncwoKIyMgTGljZW5zZQoKUnVzdCBpcyBwcmltYXJpbHkgZGlzdHJpYnV0ZWQg\ndW5kZXIgdGhlIHRlcm1zIG9mIGJvdGggdGhlIE1JVCBsaWNlbnNlCmFuZCB0\naGUgQXBhY2hlIExpY2Vuc2UgKFZlcnNpb24gMi4wKSwgd2l0aCBwb3J0aW9u\ncyBjb3ZlcmVkIGJ5IHZhcmlvdXMKQlNELWxpa2UgbGljZW5zZXMuCgpTZWUg\nW0xJQ0VOU0UtQVBBQ0hFXShMSUNFTlNFLUFQQUNIRSksIFtMSUNFTlNFLU1J\nVF0oTElDRU5TRS1NSVQpLCBhbmQKW0NPUFlSSUdIVF0oQ09QWVJJR0hUKSBm\nb3IgZGV0YWlscy4K\n", 
                "download_url": "https://raw.githubusercontent.com/rust-lang/rust/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/rust-lang/rust/git/blobs/f387b4be6008f4b4722e9264d73921179fa8a91f", 
                "html_url": "https://github.com/rust-lang/rust/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "f387b4be6008f4b4722e9264d73921179fa8a91f", 
                "size": 7662, 
                "type": "file", 
                "url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2010-06-16T20:39:03Z", 
                "language": "Rust", 
                "owner": {
                    "avatar_url": "https://avatars2.githubusercontent.com/u/5430905?v=3", 
                    "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/rust-lang/followers", 
                    "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/rust-lang", 
                    "id": 5430905, 
                    "login": "rust-lang", 
                    "organizations_url": "https://api.github.com/users/rust-lang/orgs", 
                    "received_events_url": "https://api.github.com/users/rust-lang/received_events", 
                    "repos_url": "https://api.github.com/users/rust-lang/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/rust-lang"
                }, 
                "pushed_at": "2017-04-26T03:26:20Z", 
                "stargazers_count": 21488, 
                "updated_at": "2017-04-26T01:04:09Z", 
                "watchers_count": 21488
            }
        }, 
        "socketio/socket.io": {
            "dockerfile": {
                "/examples/cluster-haproxy/haproxy/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "haproxy.cfg /usr/local/etc/haproxy/haproxy.cfg"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "haproxy:1.7-alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/cluster-haproxy/server/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"npm\", \"start\" ]"
                    ], 
                    "COPY": [
                        "package.json /usr/src/app/", 
                        ". /usr/src/app"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "3000"
                    ], 
                    "FROM": [
                        "mhart/alpine-node:6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir -p /usr/src/app", 
                        "npm install"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/usr/src/app"
                    ]
                }, 
                "/examples/cluster-httpd/httpd/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "./httpd.conf /usr/local/apache2/conf/httpd.conf"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "httpd:2.4-alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/cluster-httpd/server/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"npm\", \"start\" ]"
                    ], 
                    "COPY": [
                        "package.json /usr/src/app/", 
                        ". /usr/src/app"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "3000"
                    ], 
                    "FROM": [
                        "mhart/alpine-node:6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir -p /usr/src/app", 
                        "npm install"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/usr/src/app"
                    ]
                }, 
                "/examples/cluster-nginx/nginx/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "nginx.conf /etc/nginx/nginx.conf"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "nginx:alpine"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/examples/cluster-nginx/server/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[ \"npm\", \"start\" ]"
                    ], 
                    "COPY": [
                        "package.json /usr/src/app/", 
                        ". /usr/src/app"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "3000"
                    ], 
                    "FROM": [
                        "mhart/alpine-node:6"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [], 
                    "ONBUILD": [], 
                    "RUN": [
                        "mkdir -p /usr/src/app", 
                        "npm install"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/usr/src/app"
                    ]
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/socketio/socket.io/git/blobs/6c6d97caf9af1514373230038686a03b81945cdc", 
                    "html": "https://github.com/socketio/socket.io/blob/master/Readme.md", 
                    "self": "https://api.github.com/repos/socketio/socket.io/contents/Readme.md?ref=master"
                }, 
                "content": "CiMgc29ja2V0LmlvCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vc2VjdXJl\nLnRyYXZpcy1jaS5vcmcvc29ja2V0aW8vc29ja2V0LmlvLnN2Zz9icmFuY2g9\nbWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3NvY2tldGlvL3NvY2tl\ndC5pbykKWyFbRGVwZW5kZW5jeSBTdGF0dXNdKGh0dHBzOi8vZGF2aWQtZG0u\nb3JnL3NvY2tldGlvL3NvY2tldC5pby5zdmcpXShodHRwczovL2RhdmlkLWRt\nLm9yZy9zb2NrZXRpby9zb2NrZXQuaW8pClshW2RldkRlcGVuZGVuY3kgU3Rh\ndHVzXShodHRwczovL2RhdmlkLWRtLm9yZy9zb2NrZXRpby9zb2NrZXQuaW8v\nZGV2LXN0YXR1cy5zdmcpXShodHRwczovL2RhdmlkLWRtLm9yZy9zb2NrZXRp\nby9zb2NrZXQuaW8jaW5mbz1kZXZEZXBlbmRlbmNpZXMpClshW05QTSB2ZXJz\naW9uXShodHRwczovL2JhZGdlLmZ1cnkuaW8vanMvc29ja2V0LmlvLnN2Zyld\nKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3NvY2tldC5pbykKIVtE\nb3dubG9hZHNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL3NvY2tl\ndC5pby5zdmc/c3R5bGU9ZmxhdCkKWyFbXShodHRwOi8vc2xhY2suc29ja2V0\nLmlvL2JhZGdlLnN2Zz8pXShodHRwOi8vc2xhY2suc29ja2V0LmlvKQoKIyMg\nRmVhdHVyZXMKClNvY2tldC5JTyBlbmFibGVzIHJlYWwtdGltZSBiaWRpcmVj\ndGlvbmFsIGV2ZW50LWJhc2VkIGNvbW11bmljYXRpb24uIEl0IGNvbnNpc3Rz\nIGluOgoKLSBhIE5vZGUuanMgc2VydmVyICh0aGlzIHJlcG9zaXRvcnkpCi0g\nYSBbSmF2YXNjcmlwdCBjbGllbnQgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIu\nY29tL3NvY2tldGlvL3NvY2tldC5pby1jbGllbnQpIGZvciB0aGUgYnJvd3Nl\nciAob3IgYSBOb2RlLmpzIGNsaWVudCkKClNvbWUgaW1wbGVtZW50YXRpb25z\nIGluIG90aGVyIGxhbmd1YWdlcyBhcmUgYWxzbyBhdmFpbGFibGU6CgotIFtK\nYXZhXShodHRwczovL2dpdGh1Yi5jb20vc29ja2V0aW8vc29ja2V0LmlvLWNs\naWVudC1qYXZhKQotIFtDKytdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb2NrZXRp\nby9zb2NrZXQuaW8tY2xpZW50LWNwcCkKLSBbU3dpZnRdKGh0dHBzOi8vZ2l0\naHViLmNvbS9zb2NrZXRpby9zb2NrZXQuaW8tY2xpZW50LXN3aWZ0KQoKSXRz\nIG1haW4gZmVhdHVyZXMgYXJlOgoKIyMjIyBSZWxpYWJpbGl0eQoKQ29ubmVj\ndGlvbnMgYXJlIGVzdGFibGlzaGVkIGV2ZW4gaW4gdGhlIHByZXNlbmNlIG9m\nOgogIC0gcHJveGllcyBhbmQgbG9hZCBiYWxhbmNlcnMuCiAgLSBwZXJzb25h\nbCBmaXJld2FsbCBhbmQgYW50aXZpcnVzIHNvZnR3YXJlLgoKRm9yIHRoaXMg\ncHVycG9zZSwgaXQgcmVsaWVzIG9uIFtFbmdpbmUuSU9dKGh0dHBzOi8vZ2l0\naHViLmNvbS9zb2NrZXRpby9lbmdpbmUuaW8pLCB3aGljaCBmaXJzdCBlc3Rh\nYmxpc2hlcyBhIGxvbmctcG9sbGluZyBjb25uZWN0aW9uLCB0aGVuIHRyaWVz\nIHRvIHVwZ3JhZGUgdG8gYmV0dGVyIHRyYW5zcG9ydHMgdGhhdCBhcmUgInRl\nc3RlZCIgb24gdGhlIHNpZGUsIGxpa2UgV2ViU29ja2V0LiBQbGVhc2Ugc2Vl\nIHRoZSBbR29hbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb2NrZXRpby9lbmdp\nbmUuaW8jZ29hbHMpIHNlY3Rpb24gZm9yIG1vcmUgaW5mb3JtYXRpb24uCgoj\nIyMjIEF1dG8tcmVjb25uZWN0aW9uIHN1cHBvcnQKClVubGVzcyBpbnN0cnVj\ndGVkIG90aGVyd2lzZSBhIGRpc2Nvbm5lY3RlZCBjbGllbnQgd2lsbCB0cnkg\ndG8gcmVjb25uZWN0IGZvcmV2ZXIsIHVudGlsIHRoZSBzZXJ2ZXIgaXMgYXZh\naWxhYmxlIGFnYWluLiBQbGVhc2Ugc2VlIHRoZSBhdmFpbGFibGUgcmVjb25u\nZWN0aW9uIG9wdGlvbnMgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb2Nr\nZXRpby9zb2NrZXQuaW8tY2xpZW50L2Jsb2IvbWFzdGVyL2RvY3MvQVBJLm1k\nI25ldy1tYW5hZ2VydXJsLW9wdGlvbnMpLgoKIyMjIyBEaXNjb25uZWN0aW9u\nIGRldGVjdGlvbgoKQW4gaGVhcnRiZWF0IG1lY2hhbmlzbSBpcyBpbXBsZW1l\nbnRlZCBhdCB0aGUgRW5naW5lLklPIGxldmVsLCBhbGxvd2luZyBib3RoIHRo\nZSBzZXJ2ZXIgYW5kIHRoZSBjbGllbnQgdG8ga25vdyB3aGVuIHRoZSBvdGhl\nciBvbmUgaXMgbm90IHJlc3BvbmRpbmcgYW55bW9yZS4KClRoYXQgZnVuY3Rp\nb25hbGl0eSBpcyBhY2hpZXZlZCB3aXRoIHRpbWVycyBzZXQgb24gYm90aCB0\naGUgc2VydmVyIGFuZCB0aGUgY2xpZW50LCB3aXRoIHRpbWVvdXQgdmFsdWVz\nICh0aGUgYHBpbmdJbnRlcnZhbGAgYW5kIGBwaW5nVGltZW91dGAgcGFyYW1l\ndGVycykgc2hhcmVkIGR1cmluZyB0aGUgY29ubmVjdGlvbiBoYW5kc2hha2Uu\nIFRob3NlIHRpbWVycyByZXF1aXJlIGFueSBzdWJzZXF1ZW50IGNsaWVudCBj\nYWxscyB0byBiZSBkaXJlY3RlZCB0byB0aGUgc2FtZSBzZXJ2ZXIsIGhlbmNl\nIHRoZSBgc3RpY2t5LXNlc3Npb25gIHJlcXVpcmVtZW50IHdoZW4gdXNpbmcg\nbXVsdGlwbGVzIG5vZGVzLgoKIyMjIyBCaW5hcnkgc3VwcG9ydAoKQW55IHNl\ncmlhbGl6YWJsZSBkYXRhIHN0cnVjdHVyZXMgY2FuIGJlIGVtaXR0ZWQsIGlu\nY2x1ZGluZzoKCi0gW0FycmF5QnVmZmVyXShodHRwczovL2RldmVsb3Blci5t\nb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5j\nZS9HbG9iYWxfT2JqZWN0cy9BcnJheUJ1ZmZlcikgYW5kIFtCbG9iXShodHRw\nczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkv\nQmxvYikgaW4gdGhlIGJyb3dzZXIKLSBbQXJyYXlCdWZmZXJdKGh0dHBzOi8v\nZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3Jp\ncHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FycmF5QnVmZmVyKSBhbmQg\nW0J1ZmZlcl0oaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9idWZmZXIuaHRtbCkg\naW4gTm9kZS5qcwoKIyMjIyBTaW1wbGUgYW5kIGNvbnZlbmllbnQgQVBJCgpT\nYW1wbGUgY29kZToKCmBgYGpzCmlvLm9uKCdjb25uZWN0aW9uJywgZnVuY3Rp\nb24oc29ja2V0KXsKICBzb2NrZXQuZW1pdCgncmVxdWVzdCcsIC8qICovKTsg\nLy8gZW1pdCBhbiBldmVudCB0byB0aGUgc29ja2V0CiAgaW8uZW1pdCgnYnJv\nYWRjYXN0JywgLyogKi8pOyAvLyBlbWl0IGFuIGV2ZW50IHRvIGFsbCBjb25u\nZWN0ZWQgc29ja2V0cwogIHNvY2tldC5vbigncmVwbHknLCBmdW5jdGlvbigp\neyAvKiAqLyB9KTsgLy8gbGlzdGVuIHRvIHRoZSBldmVudAp9KTsKYGBgCgoj\nIyMjIENyb3NzLWJyb3dzZXIKCkJyb3dzZXIgc3VwcG9ydCBpcyB0ZXN0ZWQg\naW4gU2F1Y2VsYWJzOgoKWyFbU2F1Y2UgVGVzdCBTdGF0dXNdKGh0dHBzOi8v\nc2F1Y2VsYWJzLmNvbS9icm93c2VyLW1hdHJpeC9zb2NrZXQuc3ZnKV0oaHR0\ncHM6Ly9zYXVjZWxhYnMuY29tL3Uvc29ja2V0KQoKIyMjIyBNdWx0aXBsZXhp\nbmcgc3VwcG9ydAoKSW4gb3JkZXIgdG8gY3JlYXRlIHNlcGFyYXRpb24gb2Yg\nY29uY2VybnMgd2l0aGluIHlvdXIgYXBwbGljYXRpb24gKGZvciBleGFtcGxl\nIHBlciBtb2R1bGUsIG9yIGJhc2VkIG9uIHBlcm1pc3Npb25zKSwgU29ja2V0\nLklPIGFsbG93cyB5b3UgdG8gY3JlYXRlIHNldmVyYWwgYE5hbWVzcGFjZXNg\nLCB3aGljaCB3aWxsIGFjdCBhcyBzZXBhcmF0ZSBjb21tdW5pY2F0aW9uIGNo\nYW5uZWxzIGJ1dCB3aWxsIHNoYXJlIHRoZSBzYW1lIHVuZGVybHlpbmcgY29u\nbmVjdGlvbi4KCiMjIyMgUm9vbSBzdXBwb3J0CgpXaXRoaW4gZWFjaCBgTmFt\nZXNwYWNlYCwgeW91IGNhbiBkZWZpbmUgYXJiaXRyYXJ5IGNoYW5uZWxzLCBj\nYWxsZWQgYFJvb21zYCwgdGhhdCBzb2NrZXRzIGNhbiBqb2luIGFuZCBsZWF2\nZS4gWW91IGNhbiB0aGVuIGJyb2FkY2FzdCB0byBhbnkgZ2l2ZW4gcm9vbSwg\ncmVhY2hpbmcgZXZlcnkgc29ja2V0IHRoYXQgaGFzIGpvaW5lZCBpdC4KClRo\naXMgaXMgYSB1c2VmdWwgZmVhdHVyZSB0byBzZW5kIG5vdGlmaWNhdGlvbnMg\ndG8gYSBncm91cCBvZiB1c2Vycywgb3IgdG8gYSBnaXZlbiB1c2VyIGNvbm5l\nY3RlZCBvbiBzZXZlcmFsIGRldmljZXMgZm9yIGV4YW1wbGUuCgoKKipOb3Rl\nOioqIFNvY2tldC5JTyBpcyBub3QgYSBXZWJTb2NrZXQgaW1wbGVtZW50YXRp\nb24uIEFsdGhvdWdoIFNvY2tldC5JTyBpbmRlZWQgdXNlcyBXZWJTb2NrZXQg\nYXMgYSB0cmFuc3BvcnQgd2hlbiBwb3NzaWJsZSwgaXQgYWRkcyBzb21lIG1l\ndGFkYXRhIHRvIGVhY2ggcGFja2V0OiB0aGUgcGFja2V0IHR5cGUsIHRoZSBu\nYW1lc3BhY2UgYW5kIHRoZSBhY2sgaWQgd2hlbiBhIG1lc3NhZ2UgYWNrbm93\nbGVkZ2VtZW50IGlzIG5lZWRlZC4gVGhhdCBpcyB3aHkgYSBXZWJTb2NrZXQg\nY2xpZW50IHdpbGwgbm90IGJlIGFibGUgdG8gc3VjY2Vzc2Z1bGx5IGNvbm5l\nY3QgdG8gYSBTb2NrZXQuSU8gc2VydmVyLCBhbmQgYSBTb2NrZXQuSU8gY2xp\nZW50IHdpbGwgbm90IGJlIGFibGUgdG8gY29ubmVjdCB0byBhIFdlYlNvY2tl\ndCBzZXJ2ZXIgKGxpa2UgYHdzOi8vZWNoby53ZWJzb2NrZXQub3JnYCkgZWl0\naGVyLiBQbGVhc2Ugc2VlIHRoZSBwcm90b2NvbCBzcGVjaWZpY2F0aW9uIFto\nZXJlXShodHRwczovL2dpdGh1Yi5jb20vc29ja2V0aW8vc29ja2V0LmlvLXBy\nb3RvY29sKS4KCiMjIEluc3RhbGxhdGlvbgoKYGBgYmFzaApucG0gaW5zdGFs\nbCBzb2NrZXQuaW8gLS1zYXZlCmBgYAoKIyMgSG93IHRvIHVzZQoKVGhlIGZv\nbGxvd2luZyBleGFtcGxlIGF0dGFjaGVzIHNvY2tldC5pbyB0byBhIHBsYWlu\nIE5vZGUuSlMKSFRUUCBzZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQgYDMwMDBg\nLgoKYGBganMKdmFyIHNlcnZlciA9IHJlcXVpcmUoJ2h0dHAnKS5jcmVhdGVT\nZXJ2ZXIoKTsKdmFyIGlvID0gcmVxdWlyZSgnc29ja2V0LmlvJykoc2VydmVy\nKTsKaW8ub24oJ2Nvbm5lY3Rpb24nLCBmdW5jdGlvbihjbGllbnQpewogIGNs\naWVudC5vbignZXZlbnQnLCBmdW5jdGlvbihkYXRhKXt9KTsKICBjbGllbnQu\nb24oJ2Rpc2Nvbm5lY3QnLCBmdW5jdGlvbigpe30pOwp9KTsKc2VydmVyLmxp\nc3RlbigzMDAwKTsKYGBgCgojIyMgU3RhbmRhbG9uZQoKYGBganMKdmFyIGlv\nID0gcmVxdWlyZSgnc29ja2V0LmlvJykoKTsKaW8ub24oJ2Nvbm5lY3Rpb24n\nLCBmdW5jdGlvbihjbGllbnQpe30pOwppby5saXN0ZW4oMzAwMCk7CmBgYAoK\nIyMjIEluIGNvbmp1bmN0aW9uIHdpdGggRXhwcmVzcwoKU3RhcnRpbmcgd2l0\naCAqKjMuMCoqLCBleHByZXNzIGFwcGxpY2F0aW9ucyBoYXZlIGJlY29tZSBy\nZXF1ZXN0IGhhbmRsZXIKZnVuY3Rpb25zIHRoYXQgeW91IHBhc3MgdG8gYGh0\ndHBgIG9yIGBodHRwYCBgU2VydmVyYCBpbnN0YW5jZXMuIFlvdSBuZWVkCnRv\nIHBhc3MgdGhlIGBTZXJ2ZXJgIHRvIGBzb2NrZXQuaW9gLCBhbmQgbm90IHRo\nZSBleHByZXNzIGFwcGxpY2F0aW9uCmZ1bmN0aW9uLiBBbHNvIG1ha2Ugc3Vy\nZSB0byBjYWxsIGAubGlzdGVuYCBvbiB0aGUgYHNlcnZlcmAsIG5vdCB0aGUg\nYGFwcGAuCgpgYGBqcwp2YXIgYXBwID0gcmVxdWlyZSgnZXhwcmVzcycpKCk7\nCnZhciBzZXJ2ZXIgPSByZXF1aXJlKCdodHRwJykuY3JlYXRlU2VydmVyKGFw\ncCk7CnZhciBpbyA9IHJlcXVpcmUoJ3NvY2tldC5pbycpKHNlcnZlcik7Cmlv\nLm9uKCdjb25uZWN0aW9uJywgZnVuY3Rpb24oKXsgLyog4oCmICovIH0pOwpz\nZXJ2ZXIubGlzdGVuKDMwMDApOwpgYGAKCiMjIyBJbiBjb25qdW5jdGlvbiB3\naXRoIEtvYQoKTGlrZSBFeHByZXNzLkpTLCBLb2Egd29ya3MgYnkgZXhwb3Np\nbmcgYW4gYXBwbGljYXRpb24gYXMgYSByZXF1ZXN0CmhhbmRsZXIgZnVuY3Rp\nb24sIGJ1dCBvbmx5IGJ5IGNhbGxpbmcgdGhlIGBjYWxsYmFja2AgbWV0aG9k\nLgoKYGBganMKdmFyIGFwcCA9IHJlcXVpcmUoJ2tvYScpKCk7CnZhciBzZXJ2\nZXIgPSByZXF1aXJlKCdodHRwJykuY3JlYXRlU2VydmVyKGFwcC5jYWxsYmFj\naygpKTsKdmFyIGlvID0gcmVxdWlyZSgnc29ja2V0LmlvJykoc2VydmVyKTsK\naW8ub24oJ2Nvbm5lY3Rpb24nLCBmdW5jdGlvbigpeyAvKiDigKYgKi8gfSk7\nCnNlcnZlci5saXN0ZW4oMzAwMCk7CmBgYAoKIyMgRG9jdW1lbnRhdGlvbgoK\nUGxlYXNlIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBbaGVyZV0oL2RvY3MvUkVB\nRE1FLm1kKS4gQ29udHJpYnV0aW9ucyBhcmUgd2VsY29tZSEKCiMjIERlYnVn\nIC8gbG9nZ2luZwoKU29ja2V0LklPIGlzIHBvd2VyZWQgYnkgW2RlYnVnXSho\ndHRwczovL2dpdGh1Yi5jb20vdmlzaW9ubWVkaWEvZGVidWcpLgpJbiBvcmRl\nciB0byBzZWUgYWxsIHRoZSBkZWJ1ZyBvdXRwdXQsIHJ1biB5b3VyIGFwcCB3\naXRoIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZQpgREVCVUdgIGluY2x1ZGlu\nZyB0aGUgZGVzaXJlZCBzY29wZS4KClRvIHNlZSB0aGUgb3V0cHV0IGZyb20g\nYWxsIG9mIFNvY2tldC5JTydzIGRlYnVnZ2luZyBzY29wZXMgeW91IGNhbiB1\nc2U6CgpgYGAKREVCVUc9c29ja2V0LmlvKiBub2RlIG15YXBwCmBgYAoKIyMg\nVGVzdGluZwoKYGBgCm5wbSB0ZXN0CmBgYApUaGlzIHJ1bnMgdGhlIGBndWxw\nYCB0YXNrIGB0ZXN0YC4gQnkgZGVmYXVsdCB0aGUgdGVzdCB3aWxsIGJlIHJ1\nbiB3aXRoIHRoZSBzb3VyY2UgY29kZSBpbiBgbGliYCBkaXJlY3RvcnkuCgpT\nZXQgdGhlIGVudmlyb25tZW50YWwgdmFyaWFibGUgYFRFU1RfVkVSU0lPTmAg\ndG8gYGNvbXBhdGAgdG8gdGVzdCB0aGUgdHJhbnNwaWxlZCBlczUtY29tcGF0\nIHZlcnNpb24gb2YgdGhlIGNvZGUuCgpUaGUgYGd1bHBgIHRhc2sgYHRlc3Rg\nIHdpbGwgYWx3YXlzIHRyYW5zcGlsZSB0aGUgc291cmNlIGNvZGUgaW50byBl\nczUgYW5kIGV4cG9ydCB0byBgZGlzdGAgZmlyc3QgYmVmb3JlIHJ1bm5pbmcg\ndGhlIHRlc3QuCgojIyBMaWNlbnNlCgpbTUlUXShMSUNFTlNFKQo=\n", 
                "download_url": "https://raw.githubusercontent.com/socketio/socket.io/master/Readme.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/socketio/socket.io/git/blobs/6c6d97caf9af1514373230038686a03b81945cdc", 
                "html_url": "https://github.com/socketio/socket.io/blob/master/Readme.md", 
                "name": "Readme.md", 
                "path": "Readme.md", 
                "sha": "6c6d97caf9af1514373230038686a03b81945cdc", 
                "size": 6788, 
                "type": "file", 
                "url": "https://api.github.com/repos/socketio/socket.io/contents/Readme.md?ref=master"
            }, 
            "repo": {
                "created_at": "2010-03-11T18:24:48Z", 
                "language": "JavaScript", 
                "owner": {
                    "avatar_url": "https://avatars0.githubusercontent.com/u/10566080?v=3", 
                    "events_url": "https://api.github.com/users/socketio/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/socketio/followers", 
                    "following_url": "https://api.github.com/users/socketio/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/socketio/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/socketio", 
                    "id": 10566080, 
                    "login": "socketio", 
                    "organizations_url": "https://api.github.com/users/socketio/orgs", 
                    "received_events_url": "https://api.github.com/users/socketio/received_events", 
                    "repos_url": "https://api.github.com/users/socketio/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/socketio/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/socketio/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/socketio"
                }, 
                "pushed_at": "2017-04-24T22:38:08Z", 
                "stargazers_count": 32276, 
                "updated_at": "2017-04-26T03:24:22Z", 
                "watchers_count": 32276
            }
        }, 
        "tensorflow/tensorflow": {
            "dockerfile": {
                "/tensorflow/contrib/makefile/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Gunhan Gulsoy <gunan@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get install -y autoconf automake curl g++ git libtool make python unzip zlib1g-dev"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/tensorflow/examples/udacity/Dockerfile": {
                    "ADD": [
                        "*.ipynb /notebooks/"
                    ], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/run_jupyter.sh\"]"
                    ], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "gcr.io/tensorflow/tensorflow:latest"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Vincent Vanhoucke <vanhoucke@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends libjpeg8-dev && apt-get clean && rm -rf /var/lib/apt/lists/*", 
                        "pip install scikit-learn pyreadline Pillow", 
                        "rm -rf /notebooks/*"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "/notebooks"
                    ]
                }, 
                "/tensorflow/tools/dist_test/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "tensorflow-*.whl /", 
                        "scripts /var/tf-dist-test/scripts", 
                        "python /var/tf-dist-test/python"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Shanqing Cai <cais@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get install -y curl python python-numpy python-pip && apt-get clean && rm -rf /var/lib/apt/lists/*", 
                        "curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash", 
                        "chmod +x install_google_cloud_sdk.bash", 
                        "./install_google_cloud_sdk.bash --disable-prompts --install-dir=/var/gcloud", 
                        "/var/gcloud/google-cloud-sdk/bin/gcloud components install kubectl", 
                        "pip install /tensorflow-*.whl", 
                        "rm -f /tensorflow-*.whl"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/tensorflow/tools/dist_test/local/Dockerfile": {
                    "ADD": [
                        "start_local_k8s_cluster.sh /var/k8s/start_local_k8s_cluster.sh", 
                        "../scripts /var/k8s/dist_test/scripts", 
                        "../python /var/k8s/dist_test/python"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "jpetazzo/dind"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Shanqing Cai <cais@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get install -y --no-install-recommends build-essential git software-properties-common", 
                        "wget https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz", 
                        "tar -C /usr/local -xzf go1.4.2.linux-amd64.tar.gz", 
                        "rm -f go1.4.2.linux-amd64.tar.gz", 
                        "echo 'PATH=/usr/local/go/bin:${PATH}' >> /root/.bashrc"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/tensorflow/tools/dist_test/server/Dockerfile": {
                    "ADD": [
                        ". /var/tf-k8s"
                    ], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "tensorflow-*.whl /"
                    ], 
                    "ENTRYPOINT": [
                        "[\"/var/tf-k8s/server/grpc_tensorflow_server.py\"]"
                    ], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Shanqing Cai <cais@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y curl python-numpy python-pip && apt-get clean && rm -rf /var/lib/apt/lists/*", 
                        "curl -O https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py", 
                        "pip install /tensorflow-*.whl && rm -f /tensorflow-*.whl"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }, 
                "/tensorflow/tools/docker/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [
                        "[\"/run_jupyter.sh\", \"--allow-root\"]"
                    ], 
                    "COPY": [
                        "_PIP_FILE_ /", 
                        "jupyter_notebook_config.py /root/.jupyter/", 
                        "notebooks /notebooks", 
                        "run_jupyter.sh /"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [
                        "6006", 
                        "8888"
                    ], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Craig Citro <craigcitro@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update && apt-get install -y --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip && apt-get clean && rm -rf /var/lib/apt/lists/*", 
                        "curl -O https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py", 
                        "pip --no-cache-dir install ipykernel jupyter matplotlib numpy scipy sklearn pandas Pillow && python -m ipykernel.kernelspec", 
                        "pip --no-cache-dir install /_PIP_FILE_", 
                        "rm -f /_PIP_FILE_", 
                        "pip --no-cache-dir install http://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.0.0-cp27-none-linux_x86_64.whl", 
                        "ln -s /usr/bin/python3 /usr/bin/python#"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": [
                        "\"/notebooks\""
                    ]
                }, 
                "/tensorflow/tools/gcs_test/Dockerfile": {
                    "ADD": [], 
                    "ARG": [], 
                    "CMD": [], 
                    "COPY": [
                        "tensorflow-*.whl /", 
                        "gcs_smoke_wrapper.sh /gcs-smoke/", 
                        "python/gcs_smoke.py /gcs-smoke/python/"
                    ], 
                    "ENTRYPOINT": [], 
                    "ENV": [], 
                    "EXPOSE": [], 
                    "FROM": [
                        "ubuntu:16.04"
                    ], 
                    "HEALTHCHECK": [], 
                    "LABEL": [], 
                    "MAINTAINER": [
                        "Shanqing Cai <cais@google.com>"
                    ], 
                    "ONBUILD": [], 
                    "RUN": [
                        "apt-get update", 
                        "apt-get install -y curl libcurl4-openssl-dev python python-numpy python-pip", 
                        "curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash", 
                        "chmod +x install_google_cloud_sdk.bash", 
                        "./install_google_cloud_sdk.bash --disable-prompts --install-dir=/var/gcloud", 
                        "pip install /tensorflow-*.whl", 
                        "mkdir -p /gcs-smoke/python"
                    ], 
                    "SHELL": [], 
                    "STOPSIGNAL": [], 
                    "USER": [], 
                    "VOLUMN": [], 
                    "WORKDIR": []
                }
            }, 
            "readme": {
                "_links": {
                    "git": "https://api.github.com/repos/tensorflow/tensorflow/git/blobs/951e7c3b9f672b66dbf5f04dfc536ed0b17bb507", 
                    "html": "https://github.com/tensorflow/tensorflow/blob/master/README.md", 
                    "self": "https://api.github.com/repos/tensorflow/tensorflow/contents/README.md?ref=master"
                }, 
                "content": "PGRpdiBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iaHR0cHM6Ly93d3cu\ndGVuc29yZmxvdy5vcmcvaW1hZ2VzL3RmX2xvZ29fdHJhbnNwLnBuZyI+PGJy\nPjxicj4KPC9kaXY+CgotLS0tLS0tLS0tLS0tLS0tLQoKfCAqKmBMaW51eCBD\nUFVgKiogfCAqKmBMaW51eCBHUFVgKiogfCAqKmBNYWMgT1MgQ1BVYCoqIHwg\nKipgV2luZG93cyBDUFVgKiogfCAqKmBBbmRyb2lkYCoqIHwKfC0tLS0tLS0t\nLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0t\nLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS18Cnwg\nWyFbQnVpbGQgU3RhdHVzXShodHRwczovL2NpLnRlbnNvcmZsb3cub3JnL2J1\naWxkU3RhdHVzL2ljb24/am9iPXRlbnNvcmZsb3ctbWFzdGVyLWNwdSldKGh0\ndHBzOi8vY2kudGVuc29yZmxvdy5vcmcvam9iL3RlbnNvcmZsb3ctbWFzdGVy\nLWNwdSkgfCBbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vY2kudGVuc29yZmxv\ndy5vcmcvYnVpbGRTdGF0dXMvaWNvbj9qb2I9dGVuc29yZmxvdy1tYXN0ZXIt\nbGludXgtZ3B1KV0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy9qb2IvdGVu\nc29yZmxvdy1tYXN0ZXItbGludXgtZ3B1KSB8IFshW0J1aWxkIFN0YXR1c10o\naHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy9idWlsZFN0YXR1cy9pY29uP2pv\nYj10ZW5zb3JmbG93LW1hc3Rlci1tYWMpXShodHRwczovL2NpLnRlbnNvcmZs\nb3cub3JnL2pvYi90ZW5zb3JmbG93LW1hc3Rlci1tYWMpIHwgWyFbQnVpbGQg\nU3RhdHVzXShodHRwczovL2NpLnRlbnNvcmZsb3cub3JnL2J1aWxkU3RhdHVz\nL2ljb24/am9iPXRlbnNvcmZsb3ctbWFzdGVyLXdpbi1jbWFrZS1weSldKGh0\ndHBzOi8vY2kudGVuc29yZmxvdy5vcmcvam9iL3RlbnNvcmZsb3ctbWFzdGVy\nLXdpbi1jbWFrZS1weSkgfCBbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vY2ku\ndGVuc29yZmxvdy5vcmcvYnVpbGRTdGF0dXMvaWNvbj9qb2I9dGVuc29yZmxv\ndy1tYXN0ZXItYW5kcm9pZCldKGh0dHBzOi8vY2kudGVuc29yZmxvdy5vcmcv\nam9iL3RlbnNvcmZsb3ctbWFzdGVyLWFuZHJvaWQpIHwKCioqVGVuc29yRmxv\ndyoqIGlzIGFuIG9wZW4gc291cmNlIHNvZnR3YXJlIGxpYnJhcnkgZm9yIG51\nbWVyaWNhbCBjb21wdXRhdGlvbiB1c2luZwpkYXRhIGZsb3cgZ3JhcGhzLiAg\nTm9kZXMgaW4gdGhlIGdyYXBoIHJlcHJlc2VudCBtYXRoZW1hdGljYWwgb3Bl\ncmF0aW9ucywgd2hpbGUKdGhlIGdyYXBoIGVkZ2VzIHJlcHJlc2VudCB0aGUg\nbXVsdGlkaW1lbnNpb25hbCBkYXRhIGFycmF5cyAodGVuc29ycykgdGhhdCBm\nbG93CmJldHdlZW4gdGhlbS4gIFRoaXMgZmxleGlibGUgYXJjaGl0ZWN0dXJl\nIGxldHMgeW91IGRlcGxveSBjb21wdXRhdGlvbiB0byBvbmUKb3IgbW9yZSBD\nUFVzIG9yIEdQVXMgaW4gYSBkZXNrdG9wLCBzZXJ2ZXIsIG9yIG1vYmlsZSBk\nZXZpY2Ugd2l0aG91dCByZXdyaXRpbmcKY29kZS4gIFRlbnNvckZsb3cgYWxz\nbyBpbmNsdWRlcyBUZW5zb3JCb2FyZCwgYSBkYXRhIHZpc3VhbGl6YXRpb24g\ndG9vbGtpdC4KClRlbnNvckZsb3cgd2FzIG9yaWdpbmFsbHkgZGV2ZWxvcGVk\nIGJ5IHJlc2VhcmNoZXJzIGFuZCBlbmdpbmVlcnMKd29ya2luZyBvbiB0aGUg\nR29vZ2xlIEJyYWluIHRlYW0gd2l0aGluIEdvb2dsZSdzIE1hY2hpbmUgSW50\nZWxsaWdlbmNlIHJlc2VhcmNoCm9yZ2FuaXphdGlvbiBmb3IgdGhlIHB1cnBv\nc2VzIG9mIGNvbmR1Y3RpbmcgbWFjaGluZSBsZWFybmluZyBhbmQgZGVlcCBu\nZXVyYWwKbmV0d29ya3MgcmVzZWFyY2guICBUaGUgc3lzdGVtIGlzIGdlbmVy\nYWwgZW5vdWdoIHRvIGJlIGFwcGxpY2FibGUgaW4gYSB3aWRlCnZhcmlldHkg\nb2Ygb3RoZXIgZG9tYWlucywgYXMgd2VsbC4KCioqSWYgeW91J2QgbGlrZSB0\nbyBjb250cmlidXRlIHRvIFRlbnNvckZsb3csIGJlIHN1cmUgdG8gcmV2aWV3\nIHRoZSBbY29udHJpYnV0aW9uCmd1aWRlbGluZXNdKENPTlRSSUJVVElORy5t\nZCkuKioKCioqV2UgdXNlIFtHaXRIdWIgaXNzdWVzXShodHRwczovL2dpdGh1\nYi5jb20vdGVuc29yZmxvdy90ZW5zb3JmbG93L2lzc3VlcykgZm9yCnRyYWNr\naW5nIHJlcXVlc3RzIGFuZCBidWdzLCBidXQgcGxlYXNlIHNlZQpbQ29tbXVu\naXR5XSh0ZW5zb3JmbG93L2RvY3Nfc3JjL2Fib3V0L2luZGV4Lm1kI2NvbW11\nbml0eSkgZm9yIGdlbmVyYWwgcXVlc3Rpb25zCmFuZCBkaXNjdXNzaW9uLioq\nCgojIyBJbnN0YWxsYXRpb24KKlNlZSBbSW5zdGFsbGluZyBUZW5zb3JGbG93\nXShodHRwczovL3d3dy50ZW5zb3JmbG93Lm9yZy9pbnN0YWxsLykgZm9yIGlu\nc3RydWN0aW9ucyBvbiBob3cgdG8gaW5zdGFsbCBvdXIgcmVsZWFzZSBiaW5h\ncmllcyBvciBob3cgdG8gYnVpbGQgZnJvbSBzb3VyY2UuKgoKUGVvcGxlIHdo\nbyBhcmUgYSBsaXR0bGUgbW9yZSBhZHZlbnR1cm91cyBjYW4gYWxzbyB0cnkg\nb3VyIG5pZ2h0bHkgYmluYXJpZXM6CgoKKiBMaW51eCBDUFUtb25seTogW1B5\ndGhvbiAyXShodHRwczovL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRs\neS9qb2IvbmlnaHRseS1tYXRyaXgtY3B1L1RGX0JVSUxEX0lTX09QVD1PUFQs\nVEZfQlVJTERfSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVSU0lPTj1Q\nWVRIT04yLGxhYmVsPWNwdS1zbGF2ZS9sYXN0U3VjY2Vzc2Z1bEJ1aWxkL2Fy\ndGlmYWN0L3BpcF90ZXN0L3dobC90ZW5zb3JmbG93LTEuMS4wcmMyLWNwMjct\nbm9uZS1saW51eF94ODZfNjQud2hsKSAoW2J1aWxkIGhpc3RvcnldKGh0dHBz\nOi8vY2kudGVuc29yZmxvdy5vcmcvdmlldy9OaWdodGx5L2pvYi9uaWdodGx5\nLW1hdHJpeC1jcHUvVEZfQlVJTERfSVNfT1BUPU9QVCxURl9CVUlMRF9JU19Q\nSVA9UElQLFRGX0JVSUxEX1BZVEhPTl9WRVJTSU9OPVBZVEhPTjIsbGFiZWw9\nY3B1LXNsYXZlKSkgLyBbUHl0aG9uIDMuNF0oaHR0cHM6Ly9jaS50ZW5zb3Jm\nbG93Lm9yZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0bHktbWF0cml4LWNwdS9U\nRl9CVUlMRF9JU19PUFQ9T1BULFRGX0JVSUxEX0lTX1BJUD1QSVAsVEZfQlVJ\nTERfUFlUSE9OX1ZFUlNJT049UFlUSE9OMyxsYWJlbD1jcHUtc2xhdmUvbGFz\ndFN1Y2Nlc3NmdWxCdWlsZC9hcnRpZmFjdC9waXBfdGVzdC93aGwvdGVuc29y\nZmxvdy0xLjEuMHJjMi1jcDM0LWNwMzRtLWxpbnV4X3g4Nl82NC53aGwpIChb\nYnVpbGQgaGlzdG9yeV0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy92aWV3\nL05pZ2h0bHkvam9iL25pZ2h0bHktbWF0cml4LWNwdS9URl9CVUlMRF9JU19P\nUFQ9T1BULFRGX0JVSUxEX0lTX1BJUD1QSVAsVEZfQlVJTERfUFlUSE9OX1ZF\nUlNJT049UFlUSE9OMyxsYWJlbD1jcHUtc2xhdmUvKSkgLyBbUHl0aG9uIDMu\nNV0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy92aWV3L05pZ2h0bHkvam9i\nL25pZ2h0bHktcHl0aG9uMzUtbGludXgtY3B1L2xhc3RTdWNjZXNzZnVsQnVp\nbGQvYXJ0aWZhY3QvcGlwX3Rlc3Qvd2hsL3RlbnNvcmZsb3ctMS4xLjByYzIt\nY3AzNS1jcDM1bS1saW51eF94ODZfNjQud2hsKSAoW2J1aWxkIGhpc3Rvcnld\nKGh0dHBzOi8vY2kudGVuc29yZmxvdy5vcmcvdmlldy9OaWdodGx5L2pvYi9u\naWdodGx5LXB5dGhvbjM1LWxpbnV4LWNwdS8pKQoqIExpbnV4IEdQVTogW1B5\ndGhvbiAyXShodHRwczovL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRs\neS9qb2IvbmlnaHRseS1tYXRyaXgtbGludXgtZ3B1L1RGX0JVSUxEX0lTX09Q\nVD1PUFQsVEZfQlVJTERfSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVS\nU0lPTj1QWVRIT04yLGxhYmVsPWdwdS1saW51eC9sYXN0U3VjY2Vzc2Z1bEJ1\naWxkL2FydGlmYWN0L3BpcF90ZXN0L3dobC90ZW5zb3JmbG93X2dwdS0xLjEu\nMHJjMi1jcDI3LW5vbmUtbGludXhfeDg2XzY0LndobCkgKFtidWlsZCBoaXN0\nb3J5XShodHRwczovL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRseS9q\nb2IvbmlnaHRseS1tYXRyaXgtbGludXgtZ3B1L1RGX0JVSUxEX0lTX09QVD1P\nUFQsVEZfQlVJTERfSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVSU0lP\nTj1QWVRIT04yLGxhYmVsPWdwdS1saW51eC8pKSAvIFtQeXRob24gMy40XSho\ndHRwczovL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRseS9qb2Ivbmln\naHRseS1tYXRyaXgtbGludXgtZ3B1L1RGX0JVSUxEX0lTX09QVD1PUFQsVEZf\nQlVJTERfSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVSU0lPTj1QWVRI\nT04zLGxhYmVsPWdwdS1saW51eC9sYXN0U3VjY2Vzc2Z1bEJ1aWxkL2FydGlm\nYWN0L3BpcF90ZXN0L3dobC90ZW5zb3JmbG93X2dwdS0xLjEuMHJjMi1jcDM0\nLWNwMzRtLWxpbnV4X3g4Nl82NC53aGwpIChbYnVpbGQgaGlzdG9yeV0oaHR0\ncHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0\nbHktbWF0cml4LWxpbnV4LWdwdS9URl9CVUlMRF9JU19PUFQ9T1BULFRGX0JV\nSUxEX0lTX1BJUD1QSVAsVEZfQlVJTERfUFlUSE9OX1ZFUlNJT049UFlUSE9O\nMyxsYWJlbD1ncHUtbGludXgvKSkgLyBbUHl0aG9uIDMuNV0oaHR0cHM6Ly9j\naS50ZW5zb3JmbG93Lm9yZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0bHktbWF0\ncml4LWxpbnV4LWdwdS9URl9CVUlMRF9JU19PUFQ9T1BULFRGX0JVSUxEX0lT\nX1BJUD1QSVAsVEZfQlVJTERfUFlUSE9OX1ZFUlNJT049UFlUSE9OMy41LGxh\nYmVsPWdwdS1saW51eC9sYXN0U3VjY2Vzc2Z1bEJ1aWxkL2FydGlmYWN0L3Bp\ncF90ZXN0L3dobC90ZW5zb3JmbG93X2dwdS0xLjEuMHJjMi1jcDM1LWNwMzVt\nLWxpbnV4X3g4Nl82NC53aGwpIChbYnVpbGQgaGlzdG9yeV0oaHR0cHM6Ly9j\naS50ZW5zb3JmbG93Lm9yZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0bHktbWF0\ncml4LWxpbnV4LWdwdS9URl9CVUlMRF9JU19PUFQ9T1BULFRGX0JVSUxEX0lT\nX1BJUD1QSVAsVEZfQlVJTERfUFlUSE9OX1ZFUlNJT049UFlUSE9OMy41LGxh\nYmVsPWdwdS1saW51eC8pKQoqIE1hYyBDUFUtb25seTogW1B5dGhvbiAyXSho\ndHRwczovL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRseS9qb2Ivbmln\naHRseS1tYXRyaXgtY3B1L1RGX0JVSUxEX0lTX09QVD1PUFQsVEZfQlVJTERf\nSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVSU0lPTj1QWVRIT04yLGxh\nYmVsPW1hYy1zbGF2ZS9sYXN0U3VjY2Vzc2Z1bEJ1aWxkL2FydGlmYWN0L3Bp\ncF90ZXN0L3dobC90ZW5zb3JmbG93LTEuMS4wcmMyLXB5Mi1ub25lLWFueS53\naGwpIChbYnVpbGQgaGlzdG9yeV0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9y\nZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0bHktbWF0cml4LWNwdS9URl9CVUlM\nRF9JU19PUFQ9T1BULFRGX0JVSUxEX0lTX1BJUD1QSVAsVEZfQlVJTERfUFlU\nSE9OX1ZFUlNJT049UFlUSE9OMixsYWJlbD1tYWMtc2xhdmUvKSkgLyBbUHl0\naG9uIDNdKGh0dHBzOi8vY2kudGVuc29yZmxvdy5vcmcvdmlldy9OaWdodGx5\nL2pvYi9uaWdodGx5LW1hdHJpeC1jcHUvVEZfQlVJTERfSVNfT1BUPU9QVCxU\nRl9CVUlMRF9JU19QSVA9UElQLFRGX0JVSUxEX1BZVEhPTl9WRVJTSU9OPVBZ\nVEhPTjMsbGFiZWw9bWFjLXNsYXZlL2xhc3RTdWNjZXNzZnVsQnVpbGQvYXJ0\naWZhY3QvcGlwX3Rlc3Qvd2hsL3RlbnNvcmZsb3ctMS4xLjByYzItcHkzLW5v\nbmUtYW55LndobCkgKFtidWlsZCBoaXN0b3J5XShodHRwczovL2NpLnRlbnNv\ncmZsb3cub3JnL3ZpZXcvTmlnaHRseS9qb2IvbmlnaHRseS1tYXRyaXgtY3B1\nL1RGX0JVSUxEX0lTX09QVD1PUFQsVEZfQlVJTERfSVNfUElQPVBJUCxURl9C\nVUlMRF9QWVRIT05fVkVSU0lPTj1QWVRIT04zLGxhYmVsPW1hYy1zbGF2ZS8p\nKQoqIE1hYyBHUFU6IFtQeXRob24gMl0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93\nLm9yZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0bHktbWF0cml4LW1hYy1ncHUv\nVEZfQlVJTERfSVNfT1BUPU9QVCxURl9CVUlMRF9JU19QSVA9UElQLFRGX0JV\nSUxEX1BZVEhPTl9WRVJTSU9OPVBZVEhPTjIsbGFiZWw9Z3B1LW1hYy9sYXN0\nU3VjY2Vzc2Z1bEJ1aWxkL2FydGlmYWN0L3BpcF90ZXN0L3dobC90ZW5zb3Jm\nbG93X2dwdS0xLjEuMHJjMi1weTItbm9uZS1hbnkud2hsKSAoW2J1aWxkIGhp\nc3RvcnldKGh0dHBzOi8vY2kudGVuc29yZmxvdy5vcmcvdmlldy9OaWdodGx5\nL2pvYi9uaWdodGx5LW1hdHJpeC1tYWMtZ3B1L1RGX0JVSUxEX0lTX09QVD1P\nUFQsVEZfQlVJTERfSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVSU0lP\nTj1QWVRIT04yLGxhYmVsPWdwdS1tYWMvKSkgLyBbUHl0aG9uIDNdKGh0dHBz\nOi8vY2kudGVuc29yZmxvdy5vcmcvdmlldy9OaWdodGx5L2pvYi9uaWdodGx5\nLW1hdHJpeC1tYWMtZ3B1L1RGX0JVSUxEX0lTX09QVD1PUFQsVEZfQlVJTERf\nSVNfUElQPVBJUCxURl9CVUlMRF9QWVRIT05fVkVSU0lPTj1QWVRIT04zLGxh\nYmVsPWdwdS1tYWMvbGFzdFN1Y2Nlc3NmdWxCdWlsZC9hcnRpZmFjdC9waXBf\ndGVzdC93aGwvdGVuc29yZmxvd19ncHUtMS4xLjByYzItcHkzLW5vbmUtYW55\nLndobCkgKFtidWlsZCBoaXN0b3J5XShodHRwczovL2NpLnRlbnNvcmZsb3cu\nb3JnL3ZpZXcvTmlnaHRseS9qb2IvbmlnaHRseS1tYXRyaXgtbWFjLWdwdS9U\nRl9CVUlMRF9JU19PUFQ9T1BULFRGX0JVSUxEX0lTX1BJUD1QSVAsVEZfQlVJ\nTERfUFlUSE9OX1ZFUlNJT049UFlUSE9OMyxsYWJlbD1ncHUtbWFjLykpCiog\nV2luZG93cyBDUFUtb25seTogW1B5dGhvbiAzLjUgNjQtYml0XShodHRwczov\nL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRseS9qb2IvbmlnaHRseS13\naW4vREVWSUNFPWNwdSxPUz13aW5kb3dzL2xhc3RTdWNjZXNzZnVsQnVpbGQv\nYXJ0aWZhY3QvY21ha2VfYnVpbGQvdGZfcHl0aG9uL2Rpc3QvdGVuc29yZmxv\ndy0xLjEuMHJjMi1jcDM1LWNwMzVtLXdpbl9hbWQ2NC53aGwpIChbYnVpbGQg\naGlzdG9yeV0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy92aWV3L05pZ2h0\nbHkvam9iL25pZ2h0bHktd2luL0RFVklDRT1jcHUsT1M9d2luZG93cy8pKQoq\nIFdpbmRvd3MgR1BVOiBbUHl0aG9uIDMuNSA2NC1iaXRdKGh0dHBzOi8vY2ku\ndGVuc29yZmxvdy5vcmcvdmlldy9OaWdodGx5L2pvYi9uaWdodGx5LXdpbi9E\nRVZJQ0U9Z3B1LE9TPXdpbmRvd3MvbGFzdFN1Y2Nlc3NmdWxCdWlsZC9hcnRp\nZmFjdC9jbWFrZV9idWlsZC90Zl9weXRob24vZGlzdC90ZW5zb3JmbG93X2dw\ndS0xLjEuMHJjMi1jcDM1LWNwMzVtLXdpbl9hbWQ2NC53aGwpIChbYnVpbGQg\naGlzdG9yeV0oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9yZy92aWV3L05pZ2h0\nbHkvam9iL25pZ2h0bHktd2luL0RFVklDRT1ncHUsT1M9d2luZG93cy8pKQoq\nIEFuZHJvaWQ6IFtkZW1vIEFQS10oaHR0cHM6Ly9jaS50ZW5zb3JmbG93Lm9y\nZy92aWV3L05pZ2h0bHkvam9iL25pZ2h0bHktYW5kcm9pZC9sYXN0U3VjY2Vz\nc2Z1bEJ1aWxkL2FydGlmYWN0L291dC90ZW5zb3JmbG93X2RlbW8uYXBrKSwg\nW25hdGl2ZSBsaWJzXShodHRwOi8vY2kudGVuc29yZmxvdy5vcmcvdmlldy9O\naWdodGx5L2pvYi9uaWdodGx5LWFuZHJvaWQvbGFzdFN1Y2Nlc3NmdWxCdWls\nZC9hcnRpZmFjdC9vdXQvbmF0aXZlLykKKFtidWlsZCBoaXN0b3J5XShodHRw\nczovL2NpLnRlbnNvcmZsb3cub3JnL3ZpZXcvTmlnaHRseS9qb2IvbmlnaHRs\neS1hbmRyb2lkLykpCgojIyMjICpUcnkgeW91ciBmaXJzdCBUZW5zb3JGbG93\nIHByb2dyYW0qCmBgYHNoZWxsCiQgcHl0aG9uCmBgYApgYGBweXRob24KPj4+\nIGltcG9ydCB0ZW5zb3JmbG93IGFzIHRmCj4+PiBoZWxsbyA9IHRmLmNvbnN0\nYW50KCdIZWxsbywgVGVuc29yRmxvdyEnKQo+Pj4gc2VzcyA9IHRmLlNlc3Np\nb24oKQo+Pj4gc2Vzcy5ydW4oaGVsbG8pCidIZWxsbywgVGVuc29yRmxvdyEn\nCj4+PiBhID0gdGYuY29uc3RhbnQoMTApCj4+PiBiID0gdGYuY29uc3RhbnQo\nMzIpCj4+PiBzZXNzLnJ1bihhK2IpCjQyCj4+PgpgYGAKCiMjIEZvciBtb3Jl\nIGluZm9ybWF0aW9uCgoqIFtUZW5zb3JGbG93IHdlYnNpdGVdKGh0dHBzOi8v\ndGVuc29yZmxvdy5vcmcpCiogW1RlbnNvckZsb3cgd2hpdGVwYXBlcl0oaHR0\ncDovL2Rvd25sb2FkLnRlbnNvcmZsb3cub3JnL3BhcGVyL3doaXRlcGFwZXIy\nMDE1LnBkZikKKiBbVGVuc29yRmxvdyBNb2RlbCBab29dKGh0dHBzOi8vZ2l0\naHViLmNvbS90ZW5zb3JmbG93L21vZGVscykKKiBbVGVuc29yRmxvdyBNT09D\nIG9uIFVkYWNpdHldKGh0dHBzOi8vd3d3LnVkYWNpdHkuY29tL2NvdXJzZS9k\nZWVwLWxlYXJuaW5nLS11ZDczMCkKClRoZSBUZW5zb3JGbG93IGNvbW11bml0\neSBoYXMgY3JlYXRlZCBhbWF6aW5nIHRoaW5ncyB3aXRoIFRlbnNvckZsb3cs\nIHBsZWFzZSBzZWUgdGhlIFtyZXNvdXJjZXMgc2VjdGlvbiBvZiB0ZW5zb3Jm\nbG93Lm9yZ10oaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvYWJvdXQvI2Nv\nbW11bml0eSkgZm9yIGFuIGluY29tcGxldGUgbGlzdC4K\n", 
                "download_url": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md", 
                "encoding": "base64", 
                "git_url": "https://api.github.com/repos/tensorflow/tensorflow/git/blobs/951e7c3b9f672b66dbf5f04dfc536ed0b17bb507", 
                "html_url": "https://github.com/tensorflow/tensorflow/blob/master/README.md", 
                "name": "README.md", 
                "path": "README.md", 
                "sha": "951e7c3b9f672b66dbf5f04dfc536ed0b17bb507", 
                "size": 8358, 
                "type": "file", 
                "url": "https://api.github.com/repos/tensorflow/tensorflow/contents/README.md?ref=master"
            }, 
            "repo": {
                "created_at": "2015-11-07T01:19:20Z", 
                "language": "C++", 
                "owner": {
                    "avatar_url": "https://avatars2.githubusercontent.com/u/15658638?v=3", 
                    "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", 
                    "followers_url": "https://api.github.com/users/tensorflow/followers", 
                    "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", 
                    "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", 
                    "gravatar_id": "", 
                    "html_url": "https://github.com/tensorflow", 
                    "id": 15658638, 
                    "login": "tensorflow", 
                    "organizations_url": "https://api.github.com/users/tensorflow/orgs", 
                    "received_events_url": "https://api.github.com/users/tensorflow/received_events", 
                    "repos_url": "https://api.github.com/users/tensorflow/repos", 
                    "site_admin": false, 
                    "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", 
                    "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", 
                    "type": "Organization", 
                    "url": "https://api.github.com/users/tensorflow"
                }, 
                "pushed_at": "2017-04-26T02:56:57Z", 
                "stargazers_count": 55244, 
                "updated_at": "2017-04-26T03:26:12Z", 
                "watchers_count": 55244
            }
        }
    }
}